Search.setIndex({"docnames": ["apps/echoscp", "apps/echoscu", "apps/findscu", "apps/getscu", "apps/index", "apps/keyword_pathing", "apps/movescu", "apps/qrscp", "apps/storescp", "apps/storescu", "changelog/index", "changelog/v1.0.0", "changelog/v1.1.0", "changelog/v1.2.0", "changelog/v1.3.0", "changelog/v1.3.1", "changelog/v1.4.0", "changelog/v1.4.1", "changelog/v1.5.0", "changelog/v1.5.1", "changelog/v1.5.2", "changelog/v1.5.3", "changelog/v1.5.4", "changelog/v1.5.5", "changelog/v1.5.6", "changelog/v1.5.7", "changelog/v2.0.0", "changelog/v2.0.1", "changelog/v2.1.0", "examples/basic_worklist", "examples/display", "examples/index", "examples/mpps", "examples/print", "examples/qr_find", "examples/qr_get", "examples/qr_move", "examples/relevant_patient", "examples/storage", "examples/verification", "index", "reference/acse", "reference/acse.provider", "reference/ae", "reference/association", "reference/config", "reference/dimse", "reference/dimse.messages", "reference/dimse.primitives", "reference/dimse.provider", "reference/dsutils", "reference/dul", "reference/dul.pdu", "reference/dul.pdu.a_abort_rq", "reference/dul.pdu.a_associate_ac", "reference/dul.pdu.a_associate_rj", "reference/dul.pdu.a_associate_rq", "reference/dul.pdu.a_release_rp", "reference/dul.pdu.a_release_rq", "reference/dul.pdu.p_data_tf", "reference/dul.pdu_items", "reference/dul.pdu_primitives", "reference/dul.pdu_primitives.a_abort", "reference/dul.pdu_primitives.a_associate", "reference/dul.pdu_primitives.a_p_abort", "reference/dul.pdu_primitives.a_release", "reference/dul.pdu_primitives.p_data", "reference/dul.provider", "reference/events", "reference/fsm", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_UID", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION", "reference/generated/pynetdicom.PYNETDICOM_UID_PREFIX", "reference/generated/pynetdicom._config.CODECS", "reference/generated/pynetdicom._config.ENFORCE_UID_CONFORMANCE", "reference/generated/pynetdicom._config.LOG_HANDLER_LEVEL", "reference/generated/pynetdicom._config.LOG_REQUEST_IDENTIFIERS", "reference/generated/pynetdicom._config.LOG_RESPONSE_IDENTIFIERS", "reference/generated/pynetdicom._config.PASS_CONTEXTVARS", "reference/generated/pynetdicom._config.STORE_RECV_CHUNKED_DATASET", "reference/generated/pynetdicom._config.STORE_SEND_CHUNKED_DATASET", "reference/generated/pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE", "reference/generated/pynetdicom._config.USE_SHORT_DIMSE_AET", "reference/generated/pynetdicom._config.VALIDATORS", "reference/generated/pynetdicom._config.WINDOWS_TIMER_RESOLUTION", "reference/generated/pynetdicom._globals.ALL_TRANSFER_SYNTAXES", "reference/generated/pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES", "reference/generated/pynetdicom._handlers.doc_handle_acse", "reference/generated/pynetdicom._handlers.doc_handle_action", "reference/generated/pynetdicom._handlers.doc_handle_assoc", "reference/generated/pynetdicom._handlers.doc_handle_async", "reference/generated/pynetdicom._handlers.doc_handle_c_get", "reference/generated/pynetdicom._handlers.doc_handle_create", "reference/generated/pynetdicom._handlers.doc_handle_data", "reference/generated/pynetdicom._handlers.doc_handle_delete", "reference/generated/pynetdicom._handlers.doc_handle_dimse", "reference/generated/pynetdicom._handlers.doc_handle_echo", "reference/generated/pynetdicom._handlers.doc_handle_event_report", "reference/generated/pynetdicom._handlers.doc_handle_find", "reference/generated/pynetdicom._handlers.doc_handle_fsm", "reference/generated/pynetdicom._handlers.doc_handle_move", "reference/generated/pynetdicom._handlers.doc_handle_n_get", "reference/generated/pynetdicom._handlers.doc_handle_pdu", "reference/generated/pynetdicom._handlers.doc_handle_set", "reference/generated/pynetdicom._handlers.doc_handle_sop_common", "reference/generated/pynetdicom._handlers.doc_handle_sop_extended", "reference/generated/pynetdicom._handlers.doc_handle_store", "reference/generated/pynetdicom._handlers.doc_handle_transport", "reference/generated/pynetdicom._handlers.doc_handle_userid", "reference/generated/pynetdicom.acse.ACSE", "reference/generated/pynetdicom.ae.ApplicationEntity", "reference/generated/pynetdicom.association.Association", "reference/generated/pynetdicom.association.ServiceUser", "reference/generated/pynetdicom.debug_logger", "reference/generated/pynetdicom.dimse.DIMSEServiceProvider", "reference/generated/pynetdicom.dimse_messages.C_CANCEL_RQ", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RQ", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RSP", "reference/generated/pynetdicom.dimse_messages.C_FIND_RQ", "reference/generated/pynetdicom.dimse_messages.C_FIND_RSP", "reference/generated/pynetdicom.dimse_messages.C_GET_RQ", "reference/generated/pynetdicom.dimse_messages.C_GET_RSP", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RQ", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RSP", "reference/generated/pynetdicom.dimse_messages.C_STORE_RQ", "reference/generated/pynetdicom.dimse_messages.C_STORE_RSP", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RQ", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RSP", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RQ", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RSP", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RQ", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RSP", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RQ", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RSP", "reference/generated/pynetdicom.dimse_messages.N_GET_RQ", "reference/generated/pynetdicom.dimse_messages.N_GET_RSP", "reference/generated/pynetdicom.dimse_messages.N_SET_RQ", "reference/generated/pynetdicom.dimse_messages.N_SET_RSP", "reference/generated/pynetdicom.dimse_primitives.C_CANCEL", "reference/generated/pynetdicom.dimse_primitives.C_ECHO", "reference/generated/pynetdicom.dimse_primitives.C_FIND", "reference/generated/pynetdicom.dimse_primitives.C_GET", "reference/generated/pynetdicom.dimse_primitives.C_MOVE", "reference/generated/pynetdicom.dimse_primitives.C_STORE", "reference/generated/pynetdicom.dimse_primitives.N_ACTION", "reference/generated/pynetdicom.dimse_primitives.N_CREATE", "reference/generated/pynetdicom.dimse_primitives.N_DELETE", "reference/generated/pynetdicom.dimse_primitives.N_EVENT_REPORT", "reference/generated/pynetdicom.dimse_primitives.N_GET", "reference/generated/pynetdicom.dimse_primitives.N_SET", "reference/generated/pynetdicom.dsutils.decode", "reference/generated/pynetdicom.dsutils.encode", "reference/generated/pynetdicom.dsutils.pretty_dataset", "reference/generated/pynetdicom.dsutils.pretty_element", "reference/generated/pynetdicom.dul.DULServiceProvider", "reference/generated/pynetdicom.events.Event", "reference/generated/pynetdicom.events.InterventionEvent", "reference/generated/pynetdicom.events.NotificationEvent", "reference/generated/pynetdicom.events.trigger", "reference/generated/pynetdicom.fsm.AA_1", "reference/generated/pynetdicom.fsm.AA_2", "reference/generated/pynetdicom.fsm.AA_3", "reference/generated/pynetdicom.fsm.AA_4", "reference/generated/pynetdicom.fsm.AA_5", "reference/generated/pynetdicom.fsm.AA_6", "reference/generated/pynetdicom.fsm.AA_7", "reference/generated/pynetdicom.fsm.AA_8", "reference/generated/pynetdicom.fsm.AE_1", "reference/generated/pynetdicom.fsm.AE_2", "reference/generated/pynetdicom.fsm.AE_3", "reference/generated/pynetdicom.fsm.AE_4", "reference/generated/pynetdicom.fsm.AE_5", "reference/generated/pynetdicom.fsm.AE_6", "reference/generated/pynetdicom.fsm.AE_7", "reference/generated/pynetdicom.fsm.AE_8", "reference/generated/pynetdicom.fsm.AR_1", "reference/generated/pynetdicom.fsm.AR_10", "reference/generated/pynetdicom.fsm.AR_2", "reference/generated/pynetdicom.fsm.AR_3", "reference/generated/pynetdicom.fsm.AR_4", "reference/generated/pynetdicom.fsm.AR_5", "reference/generated/pynetdicom.fsm.AR_6", "reference/generated/pynetdicom.fsm.AR_7", "reference/generated/pynetdicom.fsm.AR_8", "reference/generated/pynetdicom.fsm.AR_9", "reference/generated/pynetdicom.fsm.DT_1", "reference/generated/pynetdicom.fsm.DT_2", "reference/generated/pynetdicom.fsm.StateMachine", "reference/generated/pynetdicom.pdu.A_ABORT_RQ", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_AC", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RJ", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RQ", "reference/generated/pynetdicom.pdu.A_RELEASE_RP", "reference/generated/pynetdicom.pdu.A_RELEASE_RQ", "reference/generated/pynetdicom.pdu.P_DATA_TF", "reference/generated/pynetdicom.pdu.PresentationDataValueItem", "reference/generated/pynetdicom.pdu_items.AbstractSyntaxSubItem", "reference/generated/pynetdicom.pdu_items.ApplicationContextItem", "reference/generated/pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem", "reference/generated/pynetdicom.pdu_items.ImplementationClassUIDSubItem", "reference/generated/pynetdicom.pdu_items.ImplementationVersionNameSubItem", "reference/generated/pynetdicom.pdu_items.MaximumLengthSubItem", "reference/generated/pynetdicom.pdu_items.PresentationContextItemAC", "reference/generated/pynetdicom.pdu_items.PresentationContextItemRQ", "reference/generated/pynetdicom.pdu_items.PresentationDataValueItem", "reference/generated/pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem", "reference/generated/pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem", "reference/generated/pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem", "reference/generated/pynetdicom.pdu_items.TransferSyntaxSubItem", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemAC", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemRQ", "reference/generated/pynetdicom.pdu_items.UserInformationItem", "reference/generated/pynetdicom.pdu_primitives.A_ABORT", "reference/generated/pynetdicom.pdu_primitives.A_ASSOCIATE", "reference/generated/pynetdicom.pdu_primitives.A_P_ABORT", "reference/generated/pynetdicom.pdu_primitives.A_RELEASE", "reference/generated/pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation", "reference/generated/pynetdicom.pdu_primitives.ImplementationClassUIDNotification", "reference/generated/pynetdicom.pdu_primitives.ImplementationVersionNameNotification", "reference/generated/pynetdicom.pdu_primitives.MaximumLengthNotification", "reference/generated/pynetdicom.pdu_primitives.P_DATA", "reference/generated/pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation", "reference/generated/pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation", "reference/generated/pynetdicom.pdu_primitives.SOPClassExtendedNegotiation", "reference/generated/pynetdicom.pdu_primitives.UserIdentityNegotiation", "reference/generated/pynetdicom.presentation.AllStoragePresentationContexts", "reference/generated/pynetdicom.presentation.ApplicationEventLoggingPresentationContexts", "reference/generated/pynetdicom.presentation.BasicWorklistManagementPresentationContexts", "reference/generated/pynetdicom.presentation.ColorPalettePresentationContexts", "reference/generated/pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts", "reference/generated/pynetdicom.presentation.DisplaySystemPresentationContexts", "reference/generated/pynetdicom.presentation.HangingProtocolPresentationContexts", "reference/generated/pynetdicom.presentation.ImplantTemplatePresentationContexts", "reference/generated/pynetdicom.presentation.InstanceAvailabilityPresentationContexts", "reference/generated/pynetdicom.presentation.MediaCreationManagementPresentationContexts", "reference/generated/pynetdicom.presentation.MediaStoragePresentationContexts", "reference/generated/pynetdicom.presentation.ModalityPerformedPresentationContexts", "reference/generated/pynetdicom.presentation.NonPatientObjectPresentationContexts", "reference/generated/pynetdicom.presentation.PresentationContext", "reference/generated/pynetdicom.presentation.PresentationContextTuple", "reference/generated/pynetdicom.presentation.PrintManagementPresentationContexts", "reference/generated/pynetdicom.presentation.ProcedureStepPresentationContexts", "reference/generated/pynetdicom.presentation.ProtocolApprovalPresentationContexts", "reference/generated/pynetdicom.presentation.QueryRetrievePresentationContexts", "reference/generated/pynetdicom.presentation.RTMachineVerificationPresentationContexts", "reference/generated/pynetdicom.presentation.RelevantPatientInformationPresentationContexts", "reference/generated/pynetdicom.presentation.StorageCommitmentPresentationContexts", "reference/generated/pynetdicom.presentation.StoragePresentationContexts", "reference/generated/pynetdicom.presentation.SubstanceAdministrationPresentationContexts", "reference/generated/pynetdicom.presentation.UnifiedProcedurePresentationContexts", "reference/generated/pynetdicom.presentation.VerificationPresentationContexts", "reference/generated/pynetdicom.presentation.build_context", "reference/generated/pynetdicom.presentation.build_role", "reference/generated/pynetdicom.presentation.negotiate_as_acceptor", "reference/generated/pynetdicom.presentation.negotiate_as_requestor", "reference/generated/pynetdicom.service_class.BasicWorklistManagementServiceClass", "reference/generated/pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.NonPatientObjectStorageServiceClass", "reference/generated/pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.QueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.RelevantPatientInformationQueryServiceClass", "reference/generated/pynetdicom.service_class.StorageServiceClass", "reference/generated/pynetdicom.service_class.SubstanceAdministrationQueryServiceClass", "reference/generated/pynetdicom.service_class.VerificationServiceClass", "reference/generated/pynetdicom.service_class_n.ApplicationEventLoggingServiceClass", "reference/generated/pynetdicom.service_class_n.DisplaySystemManagementServiceClass", "reference/generated/pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass", "reference/generated/pynetdicom.service_class_n.MediaCreationManagementServiceClass", "reference/generated/pynetdicom.service_class_n.PrintManagementServiceClass", "reference/generated/pynetdicom.service_class_n.ProcedureStepServiceClass", "reference/generated/pynetdicom.service_class_n.RTMachineVerificationServiceClass", "reference/generated/pynetdicom.service_class_n.StorageCommitmentServiceClass", "reference/generated/pynetdicom.service_class_n.UnifiedProcedureStepServiceClass", "reference/generated/pynetdicom.sop_class.AcquisitionContextSRStorage", "reference/generated/pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage", "reference/generated/pynetdicom.sop_class.AmbulatoryECGWaveformStorage", "reference/generated/pynetdicom.sop_class.ArterialPulseWaveformStorage", "reference/generated/pynetdicom.sop_class.AutorefractionMeasurementsStorage", "reference/generated/pynetdicom.sop_class.BasicAnnotationBox", "reference/generated/pynetdicom.sop_class.BasicColorImageBox", "reference/generated/pynetdicom.sop_class.BasicColorPrintManagementMeta", "reference/generated/pynetdicom.sop_class.BasicFilmBox", "reference/generated/pynetdicom.sop_class.BasicFilmSession", "reference/generated/pynetdicom.sop_class.BasicGrayscaleImageBox", "reference/generated/pynetdicom.sop_class.BasicGrayscalePrintManagementMeta", "reference/generated/pynetdicom.sop_class.BasicStructuredDisplayStorage", "reference/generated/pynetdicom.sop_class.BasicTextSRStorage", "reference/generated/pynetdicom.sop_class.BasicVoiceAudioWaveformStorage", "reference/generated/pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.BodyPositionWaveformStorage", "reference/generated/pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.BreastTomosynthesisImageStorage", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationStorage", "reference/generated/pynetdicom.sop_class.CTDefinedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.CTImageStorage", "reference/generated/pynetdicom.sop_class.CTPerformedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage", "reference/generated/pynetdicom.sop_class.CardiacRelevantPatientInformationQuery", "reference/generated/pynetdicom.sop_class.ChestCADSRStorage", "reference/generated/pynetdicom.sop_class.ColonCADSRStorage", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelFind", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelGet", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelMove", "reference/generated/pynetdicom.sop_class.ColorPaletteStorage", "reference/generated/pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveGet", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveMove", "reference/generated/pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.Comprehensive3DSRStorage", "reference/generated/pynetdicom.sop_class.ComprehensiveSRStorage", "reference/generated/pynetdicom.sop_class.ComputedRadiographyImageStorage", "reference/generated/pynetdicom.sop_class.ContentAssessmentResultsStorage", "reference/generated/pynetdicom.sop_class.CornealTopographyMapStorage", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove", "reference/generated/pynetdicom.sop_class.DeformableSpatialRegistrationStorage", "reference/generated/pynetdicom.sop_class.DermoscopicPhotographyImageStorage", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.DisplaySystem", "reference/generated/pynetdicom.sop_class.DisplaySystemInstance", "reference/generated/pynetdicom.sop_class.ElectromyogramWaveformStorage", "reference/generated/pynetdicom.sop_class.ElectrooculogramWaveformStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedCDAStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedMTLStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedOBJStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedPDFStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedSTLStorage", "reference/generated/pynetdicom.sop_class.EnhancedCTImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedContinuousRTImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedMRColorImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedMRImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedPETImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedRTImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedSRStorage", "reference/generated/pynetdicom.sop_class.EnhancedUSVolumeStorage", "reference/generated/pynetdicom.sop_class.EnhancedXAImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedXRFImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.ExtensibleSRStorage", "reference/generated/pynetdicom.sop_class.General32bitECGWaveformStorage", "reference/generated/pynetdicom.sop_class.GeneralAudioWaveformStorage", "reference/generated/pynetdicom.sop_class.GeneralECGWaveformStorage", "reference/generated/pynetdicom.sop_class.GeneralRelevantPatientInformationQuery", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelFind", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelGet", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelMove", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateStorage", "reference/generated/pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelFind", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelGet", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelMove", "reference/generated/pynetdicom.sop_class.HangingProtocolStorage", "reference/generated/pynetdicom.sop_class.HemodynamicWaveformStorage", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateStorage", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupStorage", "reference/generated/pynetdicom.sop_class.ImplantationPlanSRStorage", "reference/generated/pynetdicom.sop_class.InstanceAvailabilityNotification", "reference/generated/pynetdicom.sop_class.IntraocularLensCalculationsStorage", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.InventoryCreation", "reference/generated/pynetdicom.sop_class.InventoryFind", "reference/generated/pynetdicom.sop_class.InventoryGet", "reference/generated/pynetdicom.sop_class.InventoryMove", "reference/generated/pynetdicom.sop_class.InventoryStorage", "reference/generated/pynetdicom.sop_class.KeratometryMeasurementsStorage", "reference/generated/pynetdicom.sop_class.KeyObjectSelectionDocumentStorage", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pynetdicom.sop_class.LensometryMeasurementsStorage", "reference/generated/pynetdicom.sop_class.MRImageStorage", "reference/generated/pynetdicom.sop_class.MRSpectroscopyStorage", "reference/generated/pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pynetdicom.sop_class.MammographyCADSRStorage", "reference/generated/pynetdicom.sop_class.MediaCreationManagement", "reference/generated/pynetdicom.sop_class.MediaStorageDirectoryStorage", "reference/generated/pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStep", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepNotification", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve", "reference/generated/pynetdicom.sop_class.ModalityWorklistInformationFind", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage", "reference/generated/pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.NuclearMedicineImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage", "reference/generated/pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicThicknessMapStorage", "reference/generated/pynetdicom.sop_class.OphthalmicTomographyImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pynetdicom.sop_class.ParametricMapStorage", "reference/generated/pynetdicom.sop_class.PatientRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove", "reference/generated/pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pynetdicom.sop_class.PhotoacousticImageStorage", "reference/generated/pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pynetdicom.sop_class.PositronEmissionTomographyImageStorage", "reference/generated/pynetdicom.sop_class.PresentationLUT", "reference/generated/pynetdicom.sop_class.PrintJob", "reference/generated/pynetdicom.sop_class.Printer", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrieval", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrievalInstance", "reference/generated/pynetdicom.sop_class.PrinterInstance", "reference/generated/pynetdicom.sop_class.ProceduralEventLogging", "reference/generated/pynetdicom.sop_class.ProceduralEventLoggingInstance", "reference/generated/pynetdicom.sop_class.ProcedureLogStorage", "reference/generated/pynetdicom.sop_class.ProductCharacteristicsQuery", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelFind", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelGet", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelMove", "reference/generated/pynetdicom.sop_class.ProtocolApprovalStorage", "reference/generated/pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage", "reference/generated/pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage", "reference/generated/pynetdicom.sop_class.RTBeamsTreatmentRecordStorage", "reference/generated/pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage", "reference/generated/pynetdicom.sop_class.RTBrachyTreatmentRecordStorage", "reference/generated/pynetdicom.sop_class.RTConventionalMachineVerification", "reference/generated/pynetdicom.sop_class.RTDoseStorage", "reference/generated/pynetdicom.sop_class.RTImageStorage", "reference/generated/pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage", "reference/generated/pynetdicom.sop_class.RTIonMachineVerification", "reference/generated/pynetdicom.sop_class.RTIonPlanStorage", "reference/generated/pynetdicom.sop_class.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pynetdicom.sop_class.RTPhysicianIntentStorage", "reference/generated/pynetdicom.sop_class.RTPlanStorage", "reference/generated/pynetdicom.sop_class.RTRadiationRecordSetStorage", "reference/generated/pynetdicom.sop_class.RTRadiationSalvageRecordStorage", "reference/generated/pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pynetdicom.sop_class.RTRadiationSetStorage", "reference/generated/pynetdicom.sop_class.RTSegmentAnnotationStorage", "reference/generated/pynetdicom.sop_class.RTStructureSetStorage", "reference/generated/pynetdicom.sop_class.RTTreatmentPreparationStorage", "reference/generated/pynetdicom.sop_class.RTTreatmentSummaryRecordStorage", "reference/generated/pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.RawDataStorage", "reference/generated/pynetdicom.sop_class.RealWorldValueMappingStorage", "reference/generated/pynetdicom.sop_class.RepositoryQuery", "reference/generated/pynetdicom.sop_class.RespiratoryWaveformStorage", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationRecordStorage", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationStorage", "reference/generated/pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pynetdicom.sop_class.SOPClass", "reference/generated/pynetdicom.sop_class.SecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.SegmentationStorage", "reference/generated/pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.SimplifiedAdultEchoSRStorage", "reference/generated/pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage", "reference/generated/pynetdicom.sop_class.SpatialFiducialsStorage", "reference/generated/pynetdicom.sop_class.SpatialRegistrationStorage", "reference/generated/pynetdicom.sop_class.SpectaclePrescriptionReportStorage", "reference/generated/pynetdicom.sop_class.StereometricRelationshipStorage", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModel", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModelInstance", "reference/generated/pynetdicom.sop_class.StorageManagementInstance", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove", "reference/generated/pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLogging", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLoggingInstance", "reference/generated/pynetdicom.sop_class.SubstanceApprovalQuery", "reference/generated/pynetdicom.sop_class.SurfaceScanMeshStorage", "reference/generated/pynetdicom.sop_class.SurfaceScanPointCloudStorage", "reference/generated/pynetdicom.sop_class.SurfaceSegmentationStorage", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationStorage", "reference/generated/pynetdicom.sop_class.TractographyResultsStorage", "reference/generated/pynetdicom.sop_class.TwelveLeadECGWaveformStorage", "reference/generated/pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance", "reference/generated/pynetdicom.sop_class.UPSGlobalSubscriptionInstance", "reference/generated/pynetdicom.sop_class.UltrasoundImageStorage", "reference/generated/pynetdicom.sop_class.UltrasoundMultiFrameImageStorage", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepEvent", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPull", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPush", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepQuery", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepWatch", "reference/generated/pynetdicom.sop_class.VLEndoscopicImageStorage", "reference/generated/pynetdicom.sop_class.VLMicroscopicImageStorage", "reference/generated/pynetdicom.sop_class.VLPhotographicImageStorage", "reference/generated/pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage", "reference/generated/pynetdicom.sop_class.VariableModalityLUTSoftcopyPresentationStageStorage", "reference/generated/pynetdicom.sop_class.Verification", "reference/generated/pynetdicom.sop_class.VideoEndoscopicImageStorage", "reference/generated/pynetdicom.sop_class.VideoMicroscopicImageStorage", "reference/generated/pynetdicom.sop_class.VideoPhotographicImageStorage", "reference/generated/pynetdicom.sop_class.VisualAcuityMeasurementsStorage", "reference/generated/pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pynetdicom.sop_class.XADefinedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.XAPerformedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.XRay3DAngiographicImageStorage", "reference/generated/pynetdicom.sop_class.XRay3DCraniofacialImageStorage", "reference/generated/pynetdicom.sop_class.XRayAngiographicImageStorage", "reference/generated/pynetdicom.sop_class.XRayRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage", "reference/generated/pynetdicom.sop_class.register_uid", "reference/generated/pynetdicom.sop_class.uid_to_service_class", "reference/generated/pynetdicom.sop_class.uid_to_sop_class", "reference/generated/pynetdicom.status.Status", "reference/generated/pynetdicom.status.code_to_category", "reference/generated/pynetdicom.status.code_to_status", "reference/generated/pynetdicom.timer.Timer", "reference/generated/pynetdicom.transport.AssociationServer", "reference/generated/pynetdicom.transport.AssociationSocket", "reference/generated/pynetdicom.transport.RequestHandler", "reference/generated/pynetdicom.transport.T_CONNECT", "reference/generated/pynetdicom.transport.ThreadedAssociationServer", "reference/generated/pynetdicom.utils.decode_bytes", "reference/generated/pynetdicom.utils.make_target", "reference/generated/pynetdicom.utils.pretty_bytes", "reference/generated/pynetdicom.utils.set_ae", "reference/generated/pynetdicom.utils.set_uid", "reference/generated/pynetdicom.utils.validate_uid", "reference/index", "reference/init", "reference/presentation", "reference/service_classes", "reference/sop_classes", "reference/status", "reference/timer", "reference/transport", "reference/utils", "service_classes/application_event", "service_classes/basic_worklist_service_class", "service_classes/color_palette_service_class", "service_classes/defined_procedure_service_class", "service_classes/display_system_service_class", "service_classes/hanging_protocol_service_class", "service_classes/implant_template_service_class", "service_classes/index", "service_classes/instance_availability", "service_classes/media_creation", "service_classes/modality_performed_procedure_step", "service_classes/non_patient_service_class", "service_classes/print_management", "service_classes/protocol_approval_service_class", "service_classes/query_retrieve_service_class", "service_classes/relevant_patient_service_class", "service_classes/rt_machine", "service_classes/storage_commitment", "service_classes/storage_service_class", "service_classes/substance_admin_service_class", "service_classes/ups", "service_classes/verification_service_class", "tutorials/create_scp", "tutorials/create_scu", "tutorials/index", "tutorials/installation", "tutorials/register_sop_class", "user/ae", "user/association", "user/concepts", "user/events", "user/index", "user/presentation"], "filenames": ["apps/echoscp.rst", "apps/echoscu.rst", "apps/findscu.rst", "apps/getscu.rst", "apps/index.rst", "apps/keyword_pathing.rst", "apps/movescu.rst", "apps/qrscp.rst", "apps/storescp.rst", "apps/storescu.rst", "changelog/index.rst", "changelog/v1.0.0.rst", "changelog/v1.1.0.rst", "changelog/v1.2.0.rst", "changelog/v1.3.0.rst", "changelog/v1.3.1.rst", "changelog/v1.4.0.rst", "changelog/v1.4.1.rst", "changelog/v1.5.0.rst", "changelog/v1.5.1.rst", "changelog/v1.5.2.rst", "changelog/v1.5.3.rst", "changelog/v1.5.4.rst", "changelog/v1.5.5.rst", "changelog/v1.5.6.rst", "changelog/v1.5.7.rst", "changelog/v2.0.0.rst", "changelog/v2.0.1.rst", "changelog/v2.1.0.rst", "examples/basic_worklist.rst", "examples/display.rst", "examples/index.rst", "examples/mpps.rst", "examples/print.rst", "examples/qr_find.rst", "examples/qr_get.rst", "examples/qr_move.rst", "examples/relevant_patient.rst", "examples/storage.rst", "examples/verification.rst", "index.rst", "reference/acse.rst", "reference/acse.provider.rst", "reference/ae.rst", "reference/association.rst", "reference/config.rst", "reference/dimse.rst", "reference/dimse.messages.rst", "reference/dimse.primitives.rst", "reference/dimse.provider.rst", "reference/dsutils.rst", "reference/dul.rst", "reference/dul.pdu.rst", "reference/dul.pdu.a_abort_rq.rst", "reference/dul.pdu.a_associate_ac.rst", "reference/dul.pdu.a_associate_rj.rst", "reference/dul.pdu.a_associate_rq.rst", "reference/dul.pdu.a_release_rp.rst", "reference/dul.pdu.a_release_rq.rst", "reference/dul.pdu.p_data_tf.rst", "reference/dul.pdu_items.rst", "reference/dul.pdu_primitives.rst", "reference/dul.pdu_primitives.a_abort.rst", "reference/dul.pdu_primitives.a_associate.rst", "reference/dul.pdu_primitives.a_p_abort.rst", "reference/dul.pdu_primitives.a_release.rst", "reference/dul.pdu_primitives.p_data.rst", "reference/dul.provider.rst", "reference/events.rst", "reference/fsm.rst", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION.rst", "reference/generated/pynetdicom.PYNETDICOM_UID_PREFIX.rst", "reference/generated/pynetdicom._config.CODECS.rst", "reference/generated/pynetdicom._config.ENFORCE_UID_CONFORMANCE.rst", "reference/generated/pynetdicom._config.LOG_HANDLER_LEVEL.rst", "reference/generated/pynetdicom._config.LOG_REQUEST_IDENTIFIERS.rst", "reference/generated/pynetdicom._config.LOG_RESPONSE_IDENTIFIERS.rst", "reference/generated/pynetdicom._config.PASS_CONTEXTVARS.rst", "reference/generated/pynetdicom._config.STORE_RECV_CHUNKED_DATASET.rst", "reference/generated/pynetdicom._config.STORE_SEND_CHUNKED_DATASET.rst", "reference/generated/pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE.rst", "reference/generated/pynetdicom._config.USE_SHORT_DIMSE_AET.rst", "reference/generated/pynetdicom._config.VALIDATORS.rst", "reference/generated/pynetdicom._config.WINDOWS_TIMER_RESOLUTION.rst", "reference/generated/pynetdicom._globals.ALL_TRANSFER_SYNTAXES.rst", "reference/generated/pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES.rst", "reference/generated/pynetdicom._handlers.doc_handle_acse.rst", "reference/generated/pynetdicom._handlers.doc_handle_action.rst", "reference/generated/pynetdicom._handlers.doc_handle_assoc.rst", "reference/generated/pynetdicom._handlers.doc_handle_async.rst", "reference/generated/pynetdicom._handlers.doc_handle_c_get.rst", "reference/generated/pynetdicom._handlers.doc_handle_create.rst", "reference/generated/pynetdicom._handlers.doc_handle_data.rst", "reference/generated/pynetdicom._handlers.doc_handle_delete.rst", "reference/generated/pynetdicom._handlers.doc_handle_dimse.rst", "reference/generated/pynetdicom._handlers.doc_handle_echo.rst", "reference/generated/pynetdicom._handlers.doc_handle_event_report.rst", "reference/generated/pynetdicom._handlers.doc_handle_find.rst", "reference/generated/pynetdicom._handlers.doc_handle_fsm.rst", "reference/generated/pynetdicom._handlers.doc_handle_move.rst", "reference/generated/pynetdicom._handlers.doc_handle_n_get.rst", "reference/generated/pynetdicom._handlers.doc_handle_pdu.rst", "reference/generated/pynetdicom._handlers.doc_handle_set.rst", "reference/generated/pynetdicom._handlers.doc_handle_sop_common.rst", "reference/generated/pynetdicom._handlers.doc_handle_sop_extended.rst", "reference/generated/pynetdicom._handlers.doc_handle_store.rst", "reference/generated/pynetdicom._handlers.doc_handle_transport.rst", "reference/generated/pynetdicom._handlers.doc_handle_userid.rst", "reference/generated/pynetdicom.acse.ACSE.rst", "reference/generated/pynetdicom.ae.ApplicationEntity.rst", "reference/generated/pynetdicom.association.Association.rst", "reference/generated/pynetdicom.association.ServiceUser.rst", "reference/generated/pynetdicom.debug_logger.rst", "reference/generated/pynetdicom.dimse.DIMSEServiceProvider.rst", "reference/generated/pynetdicom.dimse_messages.C_CANCEL_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_FIND_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_FIND_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_GET_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_GET_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_STORE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_STORE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_GET_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_GET_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_SET_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_SET_RSP.rst", "reference/generated/pynetdicom.dimse_primitives.C_CANCEL.rst", "reference/generated/pynetdicom.dimse_primitives.C_ECHO.rst", "reference/generated/pynetdicom.dimse_primitives.C_FIND.rst", "reference/generated/pynetdicom.dimse_primitives.C_GET.rst", "reference/generated/pynetdicom.dimse_primitives.C_MOVE.rst", "reference/generated/pynetdicom.dimse_primitives.C_STORE.rst", "reference/generated/pynetdicom.dimse_primitives.N_ACTION.rst", "reference/generated/pynetdicom.dimse_primitives.N_CREATE.rst", "reference/generated/pynetdicom.dimse_primitives.N_DELETE.rst", "reference/generated/pynetdicom.dimse_primitives.N_EVENT_REPORT.rst", "reference/generated/pynetdicom.dimse_primitives.N_GET.rst", "reference/generated/pynetdicom.dimse_primitives.N_SET.rst", "reference/generated/pynetdicom.dsutils.decode.rst", "reference/generated/pynetdicom.dsutils.encode.rst", "reference/generated/pynetdicom.dsutils.pretty_dataset.rst", "reference/generated/pynetdicom.dsutils.pretty_element.rst", "reference/generated/pynetdicom.dul.DULServiceProvider.rst", "reference/generated/pynetdicom.events.Event.rst", "reference/generated/pynetdicom.events.InterventionEvent.rst", "reference/generated/pynetdicom.events.NotificationEvent.rst", "reference/generated/pynetdicom.events.trigger.rst", "reference/generated/pynetdicom.fsm.AA_1.rst", "reference/generated/pynetdicom.fsm.AA_2.rst", "reference/generated/pynetdicom.fsm.AA_3.rst", "reference/generated/pynetdicom.fsm.AA_4.rst", "reference/generated/pynetdicom.fsm.AA_5.rst", "reference/generated/pynetdicom.fsm.AA_6.rst", "reference/generated/pynetdicom.fsm.AA_7.rst", "reference/generated/pynetdicom.fsm.AA_8.rst", "reference/generated/pynetdicom.fsm.AE_1.rst", "reference/generated/pynetdicom.fsm.AE_2.rst", "reference/generated/pynetdicom.fsm.AE_3.rst", "reference/generated/pynetdicom.fsm.AE_4.rst", "reference/generated/pynetdicom.fsm.AE_5.rst", "reference/generated/pynetdicom.fsm.AE_6.rst", "reference/generated/pynetdicom.fsm.AE_7.rst", "reference/generated/pynetdicom.fsm.AE_8.rst", "reference/generated/pynetdicom.fsm.AR_1.rst", "reference/generated/pynetdicom.fsm.AR_10.rst", "reference/generated/pynetdicom.fsm.AR_2.rst", "reference/generated/pynetdicom.fsm.AR_3.rst", "reference/generated/pynetdicom.fsm.AR_4.rst", "reference/generated/pynetdicom.fsm.AR_5.rst", "reference/generated/pynetdicom.fsm.AR_6.rst", "reference/generated/pynetdicom.fsm.AR_7.rst", "reference/generated/pynetdicom.fsm.AR_8.rst", "reference/generated/pynetdicom.fsm.AR_9.rst", "reference/generated/pynetdicom.fsm.DT_1.rst", "reference/generated/pynetdicom.fsm.DT_2.rst", "reference/generated/pynetdicom.fsm.StateMachine.rst", "reference/generated/pynetdicom.pdu.A_ABORT_RQ.rst", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_AC.rst", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RJ.rst", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RQ.rst", "reference/generated/pynetdicom.pdu.A_RELEASE_RP.rst", "reference/generated/pynetdicom.pdu.A_RELEASE_RQ.rst", "reference/generated/pynetdicom.pdu.P_DATA_TF.rst", "reference/generated/pynetdicom.pdu.PresentationDataValueItem.rst", "reference/generated/pynetdicom.pdu_items.AbstractSyntaxSubItem.rst", "reference/generated/pynetdicom.pdu_items.ApplicationContextItem.rst", "reference/generated/pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.rst", "reference/generated/pynetdicom.pdu_items.ImplementationClassUIDSubItem.rst", "reference/generated/pynetdicom.pdu_items.ImplementationVersionNameSubItem.rst", "reference/generated/pynetdicom.pdu_items.MaximumLengthSubItem.rst", "reference/generated/pynetdicom.pdu_items.PresentationContextItemAC.rst", "reference/generated/pynetdicom.pdu_items.PresentationContextItemRQ.rst", "reference/generated/pynetdicom.pdu_items.PresentationDataValueItem.rst", "reference/generated/pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.rst", "reference/generated/pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.rst", "reference/generated/pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.rst", "reference/generated/pynetdicom.pdu_items.TransferSyntaxSubItem.rst", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemAC.rst", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemRQ.rst", "reference/generated/pynetdicom.pdu_items.UserInformationItem.rst", "reference/generated/pynetdicom.pdu_primitives.A_ABORT.rst", "reference/generated/pynetdicom.pdu_primitives.A_ASSOCIATE.rst", "reference/generated/pynetdicom.pdu_primitives.A_P_ABORT.rst", "reference/generated/pynetdicom.pdu_primitives.A_RELEASE.rst", "reference/generated/pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.ImplementationClassUIDNotification.rst", "reference/generated/pynetdicom.pdu_primitives.ImplementationVersionNameNotification.rst", "reference/generated/pynetdicom.pdu_primitives.MaximumLengthNotification.rst", "reference/generated/pynetdicom.pdu_primitives.P_DATA.rst", "reference/generated/pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.UserIdentityNegotiation.rst", "reference/generated/pynetdicom.presentation.AllStoragePresentationContexts.rst", "reference/generated/pynetdicom.presentation.ApplicationEventLoggingPresentationContexts.rst", "reference/generated/pynetdicom.presentation.BasicWorklistManagementPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ColorPalettePresentationContexts.rst", "reference/generated/pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts.rst", "reference/generated/pynetdicom.presentation.DisplaySystemPresentationContexts.rst", "reference/generated/pynetdicom.presentation.HangingProtocolPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ImplantTemplatePresentationContexts.rst", "reference/generated/pynetdicom.presentation.InstanceAvailabilityPresentationContexts.rst", "reference/generated/pynetdicom.presentation.MediaCreationManagementPresentationContexts.rst", "reference/generated/pynetdicom.presentation.MediaStoragePresentationContexts.rst", "reference/generated/pynetdicom.presentation.ModalityPerformedPresentationContexts.rst", "reference/generated/pynetdicom.presentation.NonPatientObjectPresentationContexts.rst", "reference/generated/pynetdicom.presentation.PresentationContext.rst", "reference/generated/pynetdicom.presentation.PresentationContextTuple.rst", "reference/generated/pynetdicom.presentation.PrintManagementPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ProcedureStepPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ProtocolApprovalPresentationContexts.rst", "reference/generated/pynetdicom.presentation.QueryRetrievePresentationContexts.rst", "reference/generated/pynetdicom.presentation.RTMachineVerificationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.RelevantPatientInformationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.StorageCommitmentPresentationContexts.rst", "reference/generated/pynetdicom.presentation.StoragePresentationContexts.rst", "reference/generated/pynetdicom.presentation.SubstanceAdministrationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.UnifiedProcedurePresentationContexts.rst", "reference/generated/pynetdicom.presentation.VerificationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.build_context.rst", "reference/generated/pynetdicom.presentation.build_role.rst", "reference/generated/pynetdicom.presentation.negotiate_as_acceptor.rst", "reference/generated/pynetdicom.presentation.negotiate_as_requestor.rst", "reference/generated/pynetdicom.service_class.BasicWorklistManagementServiceClass.rst", "reference/generated/pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.NonPatientObjectStorageServiceClass.rst", "reference/generated/pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.QueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.RelevantPatientInformationQueryServiceClass.rst", "reference/generated/pynetdicom.service_class.StorageServiceClass.rst", "reference/generated/pynetdicom.service_class.SubstanceAdministrationQueryServiceClass.rst", "reference/generated/pynetdicom.service_class.VerificationServiceClass.rst", "reference/generated/pynetdicom.service_class_n.ApplicationEventLoggingServiceClass.rst", "reference/generated/pynetdicom.service_class_n.DisplaySystemManagementServiceClass.rst", "reference/generated/pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass.rst", "reference/generated/pynetdicom.service_class_n.MediaCreationManagementServiceClass.rst", "reference/generated/pynetdicom.service_class_n.PrintManagementServiceClass.rst", "reference/generated/pynetdicom.service_class_n.ProcedureStepServiceClass.rst", "reference/generated/pynetdicom.service_class_n.RTMachineVerificationServiceClass.rst", "reference/generated/pynetdicom.service_class_n.StorageCommitmentServiceClass.rst", "reference/generated/pynetdicom.service_class_n.UnifiedProcedureStepServiceClass.rst", "reference/generated/pynetdicom.sop_class.AcquisitionContextSRStorage.rst", "reference/generated/pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.AmbulatoryECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.ArterialPulseWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.AutorefractionMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.BasicAnnotationBox.rst", "reference/generated/pynetdicom.sop_class.BasicColorImageBox.rst", "reference/generated/pynetdicom.sop_class.BasicColorPrintManagementMeta.rst", "reference/generated/pynetdicom.sop_class.BasicFilmBox.rst", "reference/generated/pynetdicom.sop_class.BasicFilmSession.rst", "reference/generated/pynetdicom.sop_class.BasicGrayscaleImageBox.rst", "reference/generated/pynetdicom.sop_class.BasicGrayscalePrintManagementMeta.rst", "reference/generated/pynetdicom.sop_class.BasicStructuredDisplayStorage.rst", "reference/generated/pynetdicom.sop_class.BasicTextSRStorage.rst", "reference/generated/pynetdicom.sop_class.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.BodyPositionWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery.rst", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.BreastTomosynthesisImageStorage.rst", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pynetdicom.sop_class.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.CTImageStorage.rst", "reference/generated/pynetdicom.sop_class.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.CardiacRelevantPatientInformationQuery.rst", "reference/generated/pynetdicom.sop_class.ChestCADSRStorage.rst", "reference/generated/pynetdicom.sop_class.ColonCADSRStorage.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteStorage.rst", "reference/generated/pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet.rst", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveGet.rst", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveMove.rst", "reference/generated/pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.Comprehensive3DSRStorage.rst", "reference/generated/pynetdicom.sop_class.ComprehensiveSRStorage.rst", "reference/generated/pynetdicom.sop_class.ComputedRadiographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.ContentAssessmentResultsStorage.rst", "reference/generated/pynetdicom.sop_class.CornealTopographyMapStorage.rst", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.DeformableSpatialRegistrationStorage.rst", "reference/generated/pynetdicom.sop_class.DermoscopicPhotographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.DisplaySystem.rst", "reference/generated/pynetdicom.sop_class.DisplaySystemInstance.rst", "reference/generated/pynetdicom.sop_class.ElectromyogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.ElectrooculogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedCDAStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedMTLStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedOBJStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedPDFStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedSTLStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedCTImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedContinuousRTImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedMRColorImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedMRImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedPETImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedRTImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedSRStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedUSVolumeStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedXAImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedXRFImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.ExtensibleSRStorage.rst", "reference/generated/pynetdicom.sop_class.General32bitECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.GeneralAudioWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.GeneralECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.GeneralRelevantPatientInformationQuery.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateStorage.rst", "reference/generated/pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.HemodynamicWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateStorage.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupStorage.rst", "reference/generated/pynetdicom.sop_class.ImplantationPlanSRStorage.rst", "reference/generated/pynetdicom.sop_class.InstanceAvailabilityNotification.rst", "reference/generated/pynetdicom.sop_class.IntraocularLensCalculationsStorage.rst", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.InventoryCreation.rst", "reference/generated/pynetdicom.sop_class.InventoryFind.rst", "reference/generated/pynetdicom.sop_class.InventoryGet.rst", "reference/generated/pynetdicom.sop_class.InventoryMove.rst", "reference/generated/pynetdicom.sop_class.InventoryStorage.rst", "reference/generated/pynetdicom.sop_class.KeratometryMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pynetdicom.sop_class.LensometryMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.MRImageStorage.rst", "reference/generated/pynetdicom.sop_class.MRSpectroscopyStorage.rst", "reference/generated/pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pynetdicom.sop_class.MammographyCADSRStorage.rst", "reference/generated/pynetdicom.sop_class.MediaCreationManagement.rst", "reference/generated/pynetdicom.sop_class.MediaStorageDirectoryStorage.rst", "reference/generated/pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStep.rst", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepNotification.rst", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve.rst", "reference/generated/pynetdicom.sop_class.ModalityWorklistInformationFind.rst", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.NuclearMedicineImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicThicknessMapStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicTomographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pynetdicom.sop_class.ParametricMapStorage.rst", "reference/generated/pynetdicom.sop_class.PatientRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pynetdicom.sop_class.PhotoacousticImageStorage.rst", "reference/generated/pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pynetdicom.sop_class.PositronEmissionTomographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.PresentationLUT.rst", "reference/generated/pynetdicom.sop_class.PrintJob.rst", "reference/generated/pynetdicom.sop_class.Printer.rst", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrieval.rst", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrievalInstance.rst", "reference/generated/pynetdicom.sop_class.PrinterInstance.rst", "reference/generated/pynetdicom.sop_class.ProceduralEventLogging.rst", "reference/generated/pynetdicom.sop_class.ProceduralEventLoggingInstance.rst", "reference/generated/pynetdicom.sop_class.ProcedureLogStorage.rst", "reference/generated/pynetdicom.sop_class.ProductCharacteristicsQuery.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalStorage.rst", "reference/generated/pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage.rst", "reference/generated/pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pynetdicom.sop_class.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage.rst", "reference/generated/pynetdicom.sop_class.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTConventionalMachineVerification.rst", "reference/generated/pynetdicom.sop_class.RTDoseStorage.rst", "reference/generated/pynetdicom.sop_class.RTImageStorage.rst", "reference/generated/pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTIonMachineVerification.rst", "reference/generated/pynetdicom.sop_class.RTIonPlanStorage.rst", "reference/generated/pynetdicom.sop_class.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pynetdicom.sop_class.RTPhysicianIntentStorage.rst", "reference/generated/pynetdicom.sop_class.RTPlanStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationRecordSetStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationSalvageRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationSetStorage.rst", "reference/generated/pynetdicom.sop_class.RTSegmentAnnotationStorage.rst", "reference/generated/pynetdicom.sop_class.RTStructureSetStorage.rst", "reference/generated/pynetdicom.sop_class.RTTreatmentPreparationStorage.rst", "reference/generated/pynetdicom.sop_class.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.RawDataStorage.rst", "reference/generated/pynetdicom.sop_class.RealWorldValueMappingStorage.rst", "reference/generated/pynetdicom.sop_class.RepositoryQuery.rst", "reference/generated/pynetdicom.sop_class.RespiratoryWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationStorage.rst", "reference/generated/pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.SOPClass.rst", "reference/generated/pynetdicom.sop_class.SecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.SegmentationStorage.rst", "reference/generated/pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.SpatialFiducialsStorage.rst", "reference/generated/pynetdicom.sop_class.SpatialRegistrationStorage.rst", "reference/generated/pynetdicom.sop_class.SpectaclePrescriptionReportStorage.rst", "reference/generated/pynetdicom.sop_class.StereometricRelationshipStorage.rst", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModel.rst", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModelInstance.rst", "reference/generated/pynetdicom.sop_class.StorageManagementInstance.rst", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLogging.rst", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLoggingInstance.rst", "reference/generated/pynetdicom.sop_class.SubstanceApprovalQuery.rst", "reference/generated/pynetdicom.sop_class.SurfaceScanMeshStorage.rst", "reference/generated/pynetdicom.sop_class.SurfaceScanPointCloudStorage.rst", "reference/generated/pynetdicom.sop_class.SurfaceSegmentationStorage.rst", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationStorage.rst", "reference/generated/pynetdicom.sop_class.TractographyResultsStorage.rst", "reference/generated/pynetdicom.sop_class.TwelveLeadECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance.rst", "reference/generated/pynetdicom.sop_class.UPSGlobalSubscriptionInstance.rst", "reference/generated/pynetdicom.sop_class.UltrasoundImageStorage.rst", "reference/generated/pynetdicom.sop_class.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepEvent.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPull.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPush.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepQuery.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepWatch.rst", "reference/generated/pynetdicom.sop_class.VLEndoscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLMicroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLPhotographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pynetdicom.sop_class.VariableModalityLUTSoftcopyPresentationStageStorage.rst", "reference/generated/pynetdicom.sop_class.Verification.rst", "reference/generated/pynetdicom.sop_class.VideoEndoscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VideoMicroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VideoPhotographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VisualAcuityMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pynetdicom.sop_class.XADefinedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.XRay3DAngiographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.XRay3DCraniofacialImageStorage.rst", "reference/generated/pynetdicom.sop_class.XRayAngiographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.XRayRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.register_uid.rst", "reference/generated/pynetdicom.sop_class.uid_to_service_class.rst", "reference/generated/pynetdicom.sop_class.uid_to_sop_class.rst", "reference/generated/pynetdicom.status.Status.rst", "reference/generated/pynetdicom.status.code_to_category.rst", "reference/generated/pynetdicom.status.code_to_status.rst", "reference/generated/pynetdicom.timer.Timer.rst", "reference/generated/pynetdicom.transport.AssociationServer.rst", "reference/generated/pynetdicom.transport.AssociationSocket.rst", "reference/generated/pynetdicom.transport.RequestHandler.rst", "reference/generated/pynetdicom.transport.T_CONNECT.rst", "reference/generated/pynetdicom.transport.ThreadedAssociationServer.rst", "reference/generated/pynetdicom.utils.decode_bytes.rst", "reference/generated/pynetdicom.utils.make_target.rst", "reference/generated/pynetdicom.utils.pretty_bytes.rst", "reference/generated/pynetdicom.utils.set_ae.rst", "reference/generated/pynetdicom.utils.set_uid.rst", "reference/generated/pynetdicom.utils.validate_uid.rst", "reference/index.rst", "reference/init.rst", "reference/presentation.rst", "reference/service_classes.rst", "reference/sop_classes.rst", "reference/status.rst", "reference/timer.rst", "reference/transport.rst", "reference/utils.rst", "service_classes/application_event.rst", "service_classes/basic_worklist_service_class.rst", "service_classes/color_palette_service_class.rst", "service_classes/defined_procedure_service_class.rst", "service_classes/display_system_service_class.rst", "service_classes/hanging_protocol_service_class.rst", "service_classes/implant_template_service_class.rst", "service_classes/index.rst", "service_classes/instance_availability.rst", "service_classes/media_creation.rst", "service_classes/modality_performed_procedure_step.rst", "service_classes/non_patient_service_class.rst", "service_classes/print_management.rst", "service_classes/protocol_approval_service_class.rst", "service_classes/query_retrieve_service_class.rst", "service_classes/relevant_patient_service_class.rst", "service_classes/rt_machine.rst", "service_classes/storage_commitment.rst", "service_classes/storage_service_class.rst", "service_classes/substance_admin_service_class.rst", "service_classes/ups.rst", "service_classes/verification_service_class.rst", "tutorials/create_scp.rst", "tutorials/create_scu.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/register_sop_class.rst", "user/ae.rst", "user/association.rst", "user/concepts.rst", "user/events.rst", "user/index.rst", "user/presentation.rst"], "titles": ["echoscp", "echoscu", "findscu", "getscu", "Applications", "Keyword pathing", "movescu", "qrscp", "storescp", "storescu", "Release Notes", "1.0.0", "1.1.0", "1.2.0", "1.3.0", "1.3.1", "1.4.0", "1.4.1", "1.5.0", "1.5.1", "1.5.2", "1.5.3", "1.5.4", "1.5.5", "1.5.6", "1.5.7", "2.0.0", "2.0.1", "2.1.0", "Basic Worklist Management Service Examples", "Display System Management Service Examples", "Code Examples", "Modality Performed Procedure Step Management Service Examples", "Print Management Service Examples", "Query/Retrieve (Find) Service Examples", "Query/Retrieve (Get) Service Examples", "Query/Retrieve (Move) Service Examples", "Relevant Patient Information Query Service Examples", "Storage Service Examples", "Verification Service Examples", "<em>pynetdicom</em>", "ACSE Service (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.acse</span></code>)", "ACSE Service Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.acse</span></code>)", "Application Entity (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.ae</span></code>)", "Association (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.association</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom._config</span></code>)", "DIMSE Service", "Messages (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dimse_messages</span></code>)", "Service Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dimse_primitives</span></code>)", "Service Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dimse</span></code>)", "Dataset Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dsutils</span></code>)", "DICOM Upper Layer", "PDUs (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.pdu</span></code>)", "A-ABORT-RQ PDU", "A-ASSOCIATE-AC PDU", "A-ASSOCIATE-RJ PDU", "A-ASSOCIATE-RQ PDU", "A-RELEASE-RP PDU", "A-RELEASE-RQ PDU", "P-DATA-TF PDU", "PDU Items and Sub-items (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.pdu_items</span></code>)", "Service Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.pdu_primitives</span></code>)", "A-ABORT", "A-ASSOCIATE", "A-P-ABORT", "A-RELEASE", "P-DATA", "DUL Service Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dul</span></code>)", "Events and Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.events</span></code>)", "State Machine (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.fsm</span></code>)", "pynetdicom.PYNETDICOM_IMPLEMENTATION_UID", "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION", "pynetdicom.PYNETDICOM_UID_PREFIX", "pynetdicom._config.CODECS", "pynetdicom._config.ENFORCE_UID_CONFORMANCE", "pynetdicom._config.LOG_HANDLER_LEVEL", "pynetdicom._config.LOG_REQUEST_IDENTIFIERS", "pynetdicom._config.LOG_RESPONSE_IDENTIFIERS", "pynetdicom._config.PASS_CONTEXTVARS", "pynetdicom._config.STORE_RECV_CHUNKED_DATASET", "pynetdicom._config.STORE_SEND_CHUNKED_DATASET", "pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE", "pynetdicom._config.USE_SHORT_DIMSE_AET", "pynetdicom._config.VALIDATORS", "pynetdicom._config.WINDOWS_TIMER_RESOLUTION", "pynetdicom._globals.ALL_TRANSFER_SYNTAXES", "pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES", "pynetdicom._handlers.doc_handle_acse", "pynetdicom._handlers.doc_handle_action", "pynetdicom._handlers.doc_handle_assoc", "pynetdicom._handlers.doc_handle_async", "pynetdicom._handlers.doc_handle_c_get", "pynetdicom._handlers.doc_handle_create", "pynetdicom._handlers.doc_handle_data", "pynetdicom._handlers.doc_handle_delete", "pynetdicom._handlers.doc_handle_dimse", "pynetdicom._handlers.doc_handle_echo", "pynetdicom._handlers.doc_handle_event_report", "pynetdicom._handlers.doc_handle_find", "pynetdicom._handlers.doc_handle_fsm", "pynetdicom._handlers.doc_handle_move", "pynetdicom._handlers.doc_handle_n_get", "pynetdicom._handlers.doc_handle_pdu", "pynetdicom._handlers.doc_handle_set", "pynetdicom._handlers.doc_handle_sop_common", "pynetdicom._handlers.doc_handle_sop_extended", "pynetdicom._handlers.doc_handle_store", "pynetdicom._handlers.doc_handle_transport", "pynetdicom._handlers.doc_handle_userid", "pynetdicom.acse.ACSE", "pynetdicom.ae.ApplicationEntity", "pynetdicom.association.Association", "pynetdicom.association.ServiceUser", "pynetdicom.debug_logger", "pynetdicom.dimse.DIMSEServiceProvider", "pynetdicom.dimse_messages.C_CANCEL_RQ", "pynetdicom.dimse_messages.C_ECHO_RQ", "pynetdicom.dimse_messages.C_ECHO_RSP", "pynetdicom.dimse_messages.C_FIND_RQ", "pynetdicom.dimse_messages.C_FIND_RSP", "pynetdicom.dimse_messages.C_GET_RQ", "pynetdicom.dimse_messages.C_GET_RSP", "pynetdicom.dimse_messages.C_MOVE_RQ", "pynetdicom.dimse_messages.C_MOVE_RSP", "pynetdicom.dimse_messages.C_STORE_RQ", "pynetdicom.dimse_messages.C_STORE_RSP", "pynetdicom.dimse_messages.N_ACTION_RQ", "pynetdicom.dimse_messages.N_ACTION_RSP", "pynetdicom.dimse_messages.N_CREATE_RQ", "pynetdicom.dimse_messages.N_CREATE_RSP", "pynetdicom.dimse_messages.N_DELETE_RQ", "pynetdicom.dimse_messages.N_DELETE_RSP", "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ", "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP", "pynetdicom.dimse_messages.N_GET_RQ", "pynetdicom.dimse_messages.N_GET_RSP", "pynetdicom.dimse_messages.N_SET_RQ", "pynetdicom.dimse_messages.N_SET_RSP", "pynetdicom.dimse_primitives.C_CANCEL", "pynetdicom.dimse_primitives.C_ECHO", "pynetdicom.dimse_primitives.C_FIND", "pynetdicom.dimse_primitives.C_GET", "pynetdicom.dimse_primitives.C_MOVE", "pynetdicom.dimse_primitives.C_STORE", "pynetdicom.dimse_primitives.N_ACTION", "pynetdicom.dimse_primitives.N_CREATE", "pynetdicom.dimse_primitives.N_DELETE", "pynetdicom.dimse_primitives.N_EVENT_REPORT", "pynetdicom.dimse_primitives.N_GET", "pynetdicom.dimse_primitives.N_SET", "pynetdicom.dsutils.decode", "pynetdicom.dsutils.encode", "pynetdicom.dsutils.pretty_dataset", "pynetdicom.dsutils.pretty_element", "pynetdicom.dul.DULServiceProvider", "pynetdicom.events.Event", "pynetdicom.events.InterventionEvent", "pynetdicom.events.NotificationEvent", "pynetdicom.events.trigger", "pynetdicom.fsm.AA_1", "pynetdicom.fsm.AA_2", "pynetdicom.fsm.AA_3", "pynetdicom.fsm.AA_4", "pynetdicom.fsm.AA_5", "pynetdicom.fsm.AA_6", "pynetdicom.fsm.AA_7", "pynetdicom.fsm.AA_8", "pynetdicom.fsm.AE_1", "pynetdicom.fsm.AE_2", "pynetdicom.fsm.AE_3", "pynetdicom.fsm.AE_4", "pynetdicom.fsm.AE_5", "pynetdicom.fsm.AE_6", "pynetdicom.fsm.AE_7", "pynetdicom.fsm.AE_8", "pynetdicom.fsm.AR_1", "pynetdicom.fsm.AR_10", "pynetdicom.fsm.AR_2", "pynetdicom.fsm.AR_3", "pynetdicom.fsm.AR_4", "pynetdicom.fsm.AR_5", "pynetdicom.fsm.AR_6", "pynetdicom.fsm.AR_7", "pynetdicom.fsm.AR_8", "pynetdicom.fsm.AR_9", "pynetdicom.fsm.DT_1", "pynetdicom.fsm.DT_2", "pynetdicom.fsm.StateMachine", "pynetdicom.pdu.A_ABORT_RQ", "pynetdicom.pdu.A_ASSOCIATE_AC", "pynetdicom.pdu.A_ASSOCIATE_RJ", "pynetdicom.pdu.A_ASSOCIATE_RQ", "pynetdicom.pdu.A_RELEASE_RP", "pynetdicom.pdu.A_RELEASE_RQ", "pynetdicom.pdu.P_DATA_TF", "pynetdicom.pdu.PresentationDataValueItem", "pynetdicom.pdu_items.AbstractSyntaxSubItem", "pynetdicom.pdu_items.ApplicationContextItem", "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem", "pynetdicom.pdu_items.ImplementationClassUIDSubItem", "pynetdicom.pdu_items.ImplementationVersionNameSubItem", "pynetdicom.pdu_items.MaximumLengthSubItem", "pynetdicom.pdu_items.PresentationContextItemAC", "pynetdicom.pdu_items.PresentationContextItemRQ", "pynetdicom.pdu_items.PresentationDataValueItem", "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem", "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem", "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem", "pynetdicom.pdu_items.TransferSyntaxSubItem", "pynetdicom.pdu_items.UserIdentitySubItemAC", "pynetdicom.pdu_items.UserIdentitySubItemRQ", "pynetdicom.pdu_items.UserInformationItem", "pynetdicom.pdu_primitives.A_ABORT", "pynetdicom.pdu_primitives.A_ASSOCIATE", "pynetdicom.pdu_primitives.A_P_ABORT", "pynetdicom.pdu_primitives.A_RELEASE", "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation", "pynetdicom.pdu_primitives.ImplementationClassUIDNotification", "pynetdicom.pdu_primitives.ImplementationVersionNameNotification", "pynetdicom.pdu_primitives.MaximumLengthNotification", "pynetdicom.pdu_primitives.P_DATA", "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation", "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation", "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation", "pynetdicom.pdu_primitives.UserIdentityNegotiation", "pynetdicom.presentation.AllStoragePresentationContexts", "pynetdicom.presentation.ApplicationEventLoggingPresentationContexts", "pynetdicom.presentation.BasicWorklistManagementPresentationContexts", "pynetdicom.presentation.ColorPalettePresentationContexts", "pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts", "pynetdicom.presentation.DisplaySystemPresentationContexts", "pynetdicom.presentation.HangingProtocolPresentationContexts", "pynetdicom.presentation.ImplantTemplatePresentationContexts", "pynetdicom.presentation.InstanceAvailabilityPresentationContexts", "pynetdicom.presentation.MediaCreationManagementPresentationContexts", "pynetdicom.presentation.MediaStoragePresentationContexts", "pynetdicom.presentation.ModalityPerformedPresentationContexts", "pynetdicom.presentation.NonPatientObjectPresentationContexts", "pynetdicom.presentation.PresentationContext", "pynetdicom.presentation.PresentationContextTuple", "pynetdicom.presentation.PrintManagementPresentationContexts", "pynetdicom.presentation.ProcedureStepPresentationContexts", "pynetdicom.presentation.ProtocolApprovalPresentationContexts", "pynetdicom.presentation.QueryRetrievePresentationContexts", "pynetdicom.presentation.RTMachineVerificationPresentationContexts", "pynetdicom.presentation.RelevantPatientInformationPresentationContexts", "pynetdicom.presentation.StorageCommitmentPresentationContexts", "pynetdicom.presentation.StoragePresentationContexts", "pynetdicom.presentation.SubstanceAdministrationPresentationContexts", "pynetdicom.presentation.UnifiedProcedurePresentationContexts", "pynetdicom.presentation.VerificationPresentationContexts", "pynetdicom.presentation.build_context", "pynetdicom.presentation.build_role", "pynetdicom.presentation.negotiate_as_acceptor", "pynetdicom.presentation.negotiate_as_requestor", "pynetdicom.service_class.BasicWorklistManagementServiceClass", "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass", "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass", "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass", "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass", "pynetdicom.service_class.NonPatientObjectStorageServiceClass", "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass", "pynetdicom.service_class.QueryRetrieveServiceClass", "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass", "pynetdicom.service_class.StorageServiceClass", "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass", "pynetdicom.service_class.VerificationServiceClass", "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass", "pynetdicom.service_class_n.DisplaySystemManagementServiceClass", "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass", "pynetdicom.service_class_n.MediaCreationManagementServiceClass", "pynetdicom.service_class_n.PrintManagementServiceClass", "pynetdicom.service_class_n.ProcedureStepServiceClass", "pynetdicom.service_class_n.RTMachineVerificationServiceClass", "pynetdicom.service_class_n.StorageCommitmentServiceClass", "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass", "pynetdicom.sop_class.AcquisitionContextSRStorage", "pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage", "pynetdicom.sop_class.AmbulatoryECGWaveformStorage", "pynetdicom.sop_class.ArterialPulseWaveformStorage", "pynetdicom.sop_class.AutorefractionMeasurementsStorage", "pynetdicom.sop_class.BasicAnnotationBox", "pynetdicom.sop_class.BasicColorImageBox", "pynetdicom.sop_class.BasicColorPrintManagementMeta", "pynetdicom.sop_class.BasicFilmBox", "pynetdicom.sop_class.BasicFilmSession", "pynetdicom.sop_class.BasicGrayscaleImageBox", "pynetdicom.sop_class.BasicGrayscalePrintManagementMeta", "pynetdicom.sop_class.BasicStructuredDisplayStorage", "pynetdicom.sop_class.BasicTextSRStorage", "pynetdicom.sop_class.BasicVoiceAudioWaveformStorage", "pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage", "pynetdicom.sop_class.BodyPositionWaveformStorage", "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery", "pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation", "pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing", "pynetdicom.sop_class.BreastTomosynthesisImageStorage", "pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage", "pynetdicom.sop_class.CArmPhotonElectronRadiationStorage", "pynetdicom.sop_class.CTDefinedProcedureProtocolStorage", "pynetdicom.sop_class.CTImageStorage", "pynetdicom.sop_class.CTPerformedProcedureProtocolStorage", "pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage", "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery", "pynetdicom.sop_class.ChestCADSRStorage", "pynetdicom.sop_class.ColonCADSRStorage", "pynetdicom.sop_class.ColorPaletteInformationModelFind", "pynetdicom.sop_class.ColorPaletteInformationModelGet", "pynetdicom.sop_class.ColorPaletteInformationModelMove", "pynetdicom.sop_class.ColorPaletteStorage", "pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage", "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet", "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet", "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove", "pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage", "pynetdicom.sop_class.Comprehensive3DSRStorage", "pynetdicom.sop_class.ComprehensiveSRStorage", "pynetdicom.sop_class.ComputedRadiographyImageStorage", "pynetdicom.sop_class.ContentAssessmentResultsStorage", "pynetdicom.sop_class.CornealTopographyMapStorage", "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind", "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet", "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove", "pynetdicom.sop_class.DeformableSpatialRegistrationStorage", "pynetdicom.sop_class.DermoscopicPhotographyImageStorage", "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation", "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing", "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation", "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing", "pynetdicom.sop_class.DigitalXRayImageStorageForPresentation", "pynetdicom.sop_class.DigitalXRayImageStorageForProcessing", "pynetdicom.sop_class.DisplaySystem", "pynetdicom.sop_class.DisplaySystemInstance", "pynetdicom.sop_class.ElectromyogramWaveformStorage", "pynetdicom.sop_class.ElectrooculogramWaveformStorage", "pynetdicom.sop_class.EncapsulatedCDAStorage", "pynetdicom.sop_class.EncapsulatedMTLStorage", "pynetdicom.sop_class.EncapsulatedOBJStorage", "pynetdicom.sop_class.EncapsulatedPDFStorage", "pynetdicom.sop_class.EncapsulatedSTLStorage", "pynetdicom.sop_class.EnhancedCTImageStorage", "pynetdicom.sop_class.EnhancedContinuousRTImageStorage", "pynetdicom.sop_class.EnhancedMRColorImageStorage", "pynetdicom.sop_class.EnhancedMRImageStorage", "pynetdicom.sop_class.EnhancedPETImageStorage", "pynetdicom.sop_class.EnhancedRTImageStorage", "pynetdicom.sop_class.EnhancedSRStorage", "pynetdicom.sop_class.EnhancedUSVolumeStorage", "pynetdicom.sop_class.EnhancedXAImageStorage", "pynetdicom.sop_class.EnhancedXRFImageStorage", "pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage", "pynetdicom.sop_class.ExtensibleSRStorage", "pynetdicom.sop_class.General32bitECGWaveformStorage", "pynetdicom.sop_class.GeneralAudioWaveformStorage", "pynetdicom.sop_class.GeneralECGWaveformStorage", "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery", "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind", "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet", "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove", "pynetdicom.sop_class.GenericImplantTemplateStorage", "pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage", "pynetdicom.sop_class.HangingProtocolInformationModelFind", "pynetdicom.sop_class.HangingProtocolInformationModelGet", "pynetdicom.sop_class.HangingProtocolInformationModelMove", "pynetdicom.sop_class.HangingProtocolStorage", "pynetdicom.sop_class.HemodynamicWaveformStorage", "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind", "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet", "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove", "pynetdicom.sop_class.ImplantAssemblyTemplateStorage", "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind", "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet", "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove", "pynetdicom.sop_class.ImplantTemplateGroupStorage", "pynetdicom.sop_class.ImplantationPlanSRStorage", "pynetdicom.sop_class.InstanceAvailabilityNotification", "pynetdicom.sop_class.IntraocularLensCalculationsStorage", "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pynetdicom.sop_class.InventoryCreation", "pynetdicom.sop_class.InventoryFind", "pynetdicom.sop_class.InventoryGet", "pynetdicom.sop_class.InventoryMove", "pynetdicom.sop_class.InventoryStorage", "pynetdicom.sop_class.KeratometryMeasurementsStorage", "pynetdicom.sop_class.KeyObjectSelectionDocumentStorage", "pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage", "pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage", "pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage", "pynetdicom.sop_class.LensometryMeasurementsStorage", "pynetdicom.sop_class.MRImageStorage", "pynetdicom.sop_class.MRSpectroscopyStorage", "pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage", "pynetdicom.sop_class.MammographyCADSRStorage", "pynetdicom.sop_class.MediaCreationManagement", "pynetdicom.sop_class.MediaStorageDirectoryStorage", "pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage", "pynetdicom.sop_class.ModalityPerformedProcedureStep", "pynetdicom.sop_class.ModalityPerformedProcedureStepNotification", "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve", "pynetdicom.sop_class.ModalityWorklistInformationFind", "pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage", "pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pynetdicom.sop_class.NuclearMedicineImageStorage", "pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage", "pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage", "pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage", "pynetdicom.sop_class.OphthalmicThicknessMapStorage", "pynetdicom.sop_class.OphthalmicTomographyImageStorage", "pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pynetdicom.sop_class.ParametricMapStorage", "pynetdicom.sop_class.PatientRadiationDoseSRStorage", "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind", "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet", "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove", "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind", "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet", "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove", "pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage", "pynetdicom.sop_class.PhotoacousticImageStorage", "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage", "pynetdicom.sop_class.PositronEmissionTomographyImageStorage", "pynetdicom.sop_class.PresentationLUT", "pynetdicom.sop_class.PrintJob", "pynetdicom.sop_class.Printer", "pynetdicom.sop_class.PrinterConfigurationRetrieval", "pynetdicom.sop_class.PrinterConfigurationRetrievalInstance", "pynetdicom.sop_class.PrinterInstance", "pynetdicom.sop_class.ProceduralEventLogging", "pynetdicom.sop_class.ProceduralEventLoggingInstance", "pynetdicom.sop_class.ProcedureLogStorage", "pynetdicom.sop_class.ProductCharacteristicsQuery", "pynetdicom.sop_class.ProtocolApprovalInformationModelFind", "pynetdicom.sop_class.ProtocolApprovalInformationModelGet", "pynetdicom.sop_class.ProtocolApprovalInformationModelMove", "pynetdicom.sop_class.ProtocolApprovalStorage", "pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage", "pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage", "pynetdicom.sop_class.RTBeamsTreatmentRecordStorage", "pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage", "pynetdicom.sop_class.RTBrachyTreatmentRecordStorage", "pynetdicom.sop_class.RTConventionalMachineVerification", "pynetdicom.sop_class.RTDoseStorage", "pynetdicom.sop_class.RTImageStorage", "pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage", "pynetdicom.sop_class.RTIonMachineVerification", "pynetdicom.sop_class.RTIonPlanStorage", "pynetdicom.sop_class.RTPatientPositionAcquisitionInstructionStorage", "pynetdicom.sop_class.RTPhysicianIntentStorage", "pynetdicom.sop_class.RTPlanStorage", "pynetdicom.sop_class.RTRadiationRecordSetStorage", "pynetdicom.sop_class.RTRadiationSalvageRecordStorage", "pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage", "pynetdicom.sop_class.RTRadiationSetStorage", "pynetdicom.sop_class.RTSegmentAnnotationStorage", "pynetdicom.sop_class.RTStructureSetStorage", "pynetdicom.sop_class.RTTreatmentPreparationStorage", "pynetdicom.sop_class.RTTreatmentSummaryRecordStorage", "pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage", "pynetdicom.sop_class.RawDataStorage", "pynetdicom.sop_class.RealWorldValueMappingStorage", "pynetdicom.sop_class.RepositoryQuery", "pynetdicom.sop_class.RespiratoryWaveformStorage", "pynetdicom.sop_class.RoboticArmRadiationRecordStorage", "pynetdicom.sop_class.RoboticArmRadiationStorage", "pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage", "pynetdicom.sop_class.SOPClass", "pynetdicom.sop_class.SecondaryCaptureImageStorage", "pynetdicom.sop_class.SegmentationStorage", "pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pynetdicom.sop_class.SimplifiedAdultEchoSRStorage", "pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage", "pynetdicom.sop_class.SpatialFiducialsStorage", "pynetdicom.sop_class.SpatialRegistrationStorage", "pynetdicom.sop_class.SpectaclePrescriptionReportStorage", "pynetdicom.sop_class.StereometricRelationshipStorage", "pynetdicom.sop_class.StorageCommitmentPushModel", "pynetdicom.sop_class.StorageCommitmentPushModelInstance", "pynetdicom.sop_class.StorageManagementInstance", "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind", "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet", "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove", "pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage", "pynetdicom.sop_class.SubstanceAdministrationLogging", "pynetdicom.sop_class.SubstanceAdministrationLoggingInstance", "pynetdicom.sop_class.SubstanceApprovalQuery", "pynetdicom.sop_class.SurfaceScanMeshStorage", "pynetdicom.sop_class.SurfaceScanPointCloudStorage", "pynetdicom.sop_class.SurfaceSegmentationStorage", "pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage", "pynetdicom.sop_class.TomotherapeuticRadiationStorage", "pynetdicom.sop_class.TractographyResultsStorage", "pynetdicom.sop_class.TwelveLeadECGWaveformStorage", "pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance", "pynetdicom.sop_class.UPSGlobalSubscriptionInstance", "pynetdicom.sop_class.UltrasoundImageStorage", "pynetdicom.sop_class.UltrasoundMultiFrameImageStorage", "pynetdicom.sop_class.UnifiedProcedureStepEvent", "pynetdicom.sop_class.UnifiedProcedureStepPull", "pynetdicom.sop_class.UnifiedProcedureStepPush", "pynetdicom.sop_class.UnifiedProcedureStepQuery", "pynetdicom.sop_class.UnifiedProcedureStepWatch", "pynetdicom.sop_class.VLEndoscopicImageStorage", "pynetdicom.sop_class.VLMicroscopicImageStorage", "pynetdicom.sop_class.VLPhotographicImageStorage", "pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage", "pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage", "pynetdicom.sop_class.VariableModalityLUTSoftcopyPresentationStageStorage", "pynetdicom.sop_class.Verification", "pynetdicom.sop_class.VideoEndoscopicImageStorage", "pynetdicom.sop_class.VideoMicroscopicImageStorage", "pynetdicom.sop_class.VideoPhotographicImageStorage", "pynetdicom.sop_class.VisualAcuityMeasurementsStorage", "pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage", "pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pynetdicom.sop_class.XADefinedProcedureProtocolStorage", "pynetdicom.sop_class.XAPerformedProcedureProtocolStorage", "pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pynetdicom.sop_class.XRay3DAngiographicImageStorage", "pynetdicom.sop_class.XRay3DCraniofacialImageStorage", "pynetdicom.sop_class.XRayAngiographicImageStorage", "pynetdicom.sop_class.XRayRadiationDoseSRStorage", "pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage", "pynetdicom.sop_class.register_uid", "pynetdicom.sop_class.uid_to_service_class", "pynetdicom.sop_class.uid_to_sop_class", "pynetdicom.status.Status", "pynetdicom.status.code_to_category", "pynetdicom.status.code_to_status", "pynetdicom.timer.Timer", "pynetdicom.transport.AssociationServer", "pynetdicom.transport.AssociationSocket", "pynetdicom.transport.RequestHandler", "pynetdicom.transport.T_CONNECT", "pynetdicom.transport.ThreadedAssociationServer", "pynetdicom.utils.decode_bytes", "pynetdicom.utils.make_target", "pynetdicom.utils.pretty_bytes", "pynetdicom.utils.set_ae", "pynetdicom.utils.set_uid", "pynetdicom.utils.validate_uid", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom</span></code>", "Presentation Service (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.presentation</span></code>)", "Service Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.service_class</span></code>)", "SOP Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.sop_class</span></code>)", "Statuses (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.status</span></code>)", "Timer (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.timer</span></code>)", "Transport Service (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.transport</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.utils</span></code>)", "Application Event Logging Service Class", "Basic Worklist Management Service Class", "Color Palette Query/Retrieve Service Class", "Defined Procedure Protocol Query/Retrieve Service Class", "Display System Management Service Class", "Hanging Protocol Query/Retrieve Service Class", "Implant Template Query/Retrieve Service Class", "Supported Service Classes", "Instance Availability Notification Service Class", "Media Creation Management Service Class", "Modality Performed Procedure Step Management", "Non-Patient Object Storage Service Class", "Print Management Service Class", "Protocol Approval Query/Retrieve Service Class", "Query/Retrieve Service Class", "Relevant Patient Information Query Service Class", "RT Machine Verification Service Class", "Storage Commitment Service Class", "Storage Service Class", "Substance Administration Query Service Class", "Unified Procedure Step Service Class", "Verification Service Class", "Writing your first SCP", "Writing your first SCU", "Tutorials", "How to install pynetdicom", "Registering a new SOP Class", "Application Entity", "Association", "Important Concepts", "Events", "User Guide", "Presentation Contexts"], "terms": {"python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 18, 26, 28, 40, 73, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 531, 580, 581, 583, 586, 588], "m": [0, 1, 2, 3, 6, 7, 8, 9, 18, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 212, 213, 214, 215, 220, 580, 581, 583], "pynetdicom": [0, 1, 2, 3, 6, 7, 8, 9, 11, 18, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 46, 51, 549, 580, 581, 582, 584, 585, 586, 587, 588], "port": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 18, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 100, 107, 110, 112, 213, 538, 539, 540, 541, 542, 554, 560, 561, 563, 564, 571, 572, 580, 581, 586], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 20, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 49, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 79, 83, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 251, 252, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 554, 556, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 588, 590], "applic": [0, 1, 2, 3, 6, 7, 8, 9, 16, 18, 29, 30, 32, 34, 35, 36, 37, 38, 39, 44, 46, 52, 54, 56, 61, 62, 63, 65, 66, 73, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 105, 106, 109, 110, 111, 112, 143, 189, 191, 196, 197, 199, 200, 205, 206, 207, 208, 213, 222, 223, 224, 225, 226, 247, 267, 549, 565, 574, 576, 579, 580, 583, 589], "implement": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 18, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 70, 71, 73, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 112, 114, 155, 187, 189, 191, 199, 200, 206, 211, 213, 217, 218, 219, 224, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 532, 533, 537, 538, 580, 581, 585, 586, 587, 588], "provid": [0, 6, 7, 8, 13, 29, 32, 34, 35, 36, 37, 38, 40, 41, 46, 50, 51, 53, 64, 83, 87, 88, 92, 95, 102, 103, 108, 109, 110, 111, 114, 154, 167, 172, 212, 213, 214, 217, 218, 224, 238, 539, 549, 554, 557, 575, 578, 580, 581, 585, 587, 588, 589, 590], "scp": [0, 1, 2, 3, 7, 8, 9, 11, 12, 13, 18, 23, 25, 26, 33, 40, 73, 79, 81, 88, 100, 101, 103, 110, 111, 112, 205, 211, 221, 223, 238, 252, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 538, 542, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 587, 589], "It": [0, 1, 2, 3, 6, 7, 8, 9, 13, 30, 32, 36, 39, 40, 140, 141, 142, 143, 145, 155, 213, 217, 218, 544, 576, 580, 581, 585], "listen": [0, 1, 2, 3, 6, 7, 8, 9, 30, 32, 34, 35, 36, 37, 38, 39, 110, 111, 538, 542, 580, 581, 585, 589], "incom": [0, 7, 8, 9, 13, 30, 32, 34, 35, 36, 37, 38, 39, 76, 77, 110, 114, 154, 580, 581], "associ": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 51, 52, 61, 62, 64, 65, 73, 75, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 205, 209, 210, 211, 213, 216, 217, 218, 219, 221, 222, 223, 224, 238, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 538, 539, 540, 541, 549, 551, 579, 580, 589], "request": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 16, 18, 20, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 63, 65, 76, 77, 79, 81, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 158, 159, 163, 165, 167, 173, 174, 175, 177, 181, 182, 183, 185, 186, 191, 193, 210, 212, 213, 214, 215, 216, 220, 224, 238, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 538, 540, 541, 542, 567, 570, 571, 572, 573, 574, 575, 578, 580, 581, 587, 588, 589, 590], "specifi": [0, 2, 3, 5, 6, 8, 11, 12, 13, 30, 32, 34, 37, 73, 81, 88, 101, 103, 109, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 213, 214, 251, 538, 539, 558, 578, 580, 581, 584, 587, 590], "onc": [0, 2, 3, 6, 7, 8, 9, 32, 46, 109, 111, 112, 192, 193, 194, 539, 581, 585, 586], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 22, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 53, 54, 55, 56, 57, 58, 63, 65, 73, 74, 78, 79, 80, 81, 87, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 138, 139, 140, 141, 142, 143, 148, 154, 155, 156, 158, 159, 160, 172, 177, 178, 179, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 219, 221, 224, 238, 239, 253, 254, 534, 538, 539, 540, 542, 546, 547, 554, 559, 560, 561, 563, 564, 567, 569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 583, 587, 588, 589, 590], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 73, 79, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 171, 172, 183, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 531, 534, 537, 538, 539, 542, 544, 546, 547, 548, 559, 560, 561, 563, 564, 569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 583, 584, 585, 586, 587, 588, 590], "establish": [0, 1, 2, 3, 6, 7, 8, 9, 46, 63, 108, 109, 110, 111, 167, 168, 169, 170, 171, 172, 173, 174, 192, 193, 194, 199, 200, 213, 217, 218, 224, 579, 581, 586, 587, 588], "respond": [0, 2, 3, 6, 9, 13, 16, 33, 36, 38, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 171, 213, 580, 581, 585, 587], "c": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 16, 18, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 76, 77, 79, 81, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 158, 212, 213, 214, 215, 220, 225, 247, 255, 263, 264, 265, 266, 275, 531, 554, 580, 581, 583, 584, 586, 587, 588, 590], "echo": [0, 1, 3, 6, 7, 8, 9, 39, 40, 96, 111, 114, 139, 225, 247, 266, 580, 586, 588], "can": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 18, 32, 33, 34, 38, 39, 40, 83, 106, 110, 111, 112, 158, 238, 253, 534, 580, 581, 584, 585, 586, 587, 588, 590], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 61, 62, 63, 64, 66, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 224, 238, 251, 252, 254, 531, 532, 537, 538, 539, 541, 542, 545, 546, 547, 554, 556, 558, 559, 560, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 587, 588, 589, 590], "verifi": [0, 1, 7, 39, 92, 111, 574, 579, 581, 585], "basic": [0, 1, 3, 6, 8, 9, 16, 31, 33, 39, 40, 98, 111, 196, 197, 200, 208, 225, 227, 240, 247, 255, 548, 565, 570, 580, 581, 585], "connect": [0, 1, 7, 8, 12, 13, 26, 29, 30, 32, 34, 35, 36, 37, 38, 39, 107, 110, 114, 154, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 178, 180, 537, 538, 539, 540, 541, 542, 581, 586, 587, 588], "sourc": [0, 1, 2, 3, 6, 7, 8, 9, 22, 26, 70, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 239, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 583], "code": [0, 1, 2, 3, 6, 7, 8, 9, 13, 26, 36, 78, 534, 535, 536, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585], "found": [0, 1, 2, 3, 6, 7, 8, 9, 37, 83, 88, 91, 92, 100, 101, 103, 111, 571, 572, 573, 574, 581, 587], "here": [0, 1, 2, 3, 6, 7, 8, 9, 36, 40, 73, 83, 581, 585, 586, 587], "follow": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 26, 30, 32, 33, 34, 35, 36, 37, 40, 52, 54, 56, 59, 61, 63, 73, 109, 110, 111, 112, 140, 141, 142, 143, 145, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 224, 548, 552, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 580, 581, 585, 586, 588, 590], "exampl": [0, 1, 8, 9, 11, 26, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 155, 172, 216, 217, 218, 221, 222, 223, 224, 251, 531, 534, 580, 581, 585, 586, 587, 590], "show": [0, 1, 2, 3, 6, 8, 9, 586], "what": [0, 1, 2, 3, 6, 8, 9, 33, 34, 35, 38, 90, 155, 580, 585, 590], "happen": [0, 1, 2, 3, 6, 8, 9, 581], "when": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 20, 21, 25, 26, 28, 32, 33, 38, 39, 73, 79, 80, 81, 84, 86, 88, 91, 92, 97, 98, 100, 103, 104, 106, 110, 111, 112, 114, 152, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 224, 238, 253, 538, 539, 541, 542, 546, 559, 560, 561, 563, 564, 569, 570, 571, 572, 573, 576, 577, 580, 581, 583, 584, 585, 586, 587, 590], "": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 29, 32, 33, 35, 36, 38, 43, 44, 78, 80, 81, 88, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 106, 108, 110, 111, 112, 114, 152, 154, 155, 158, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 251, 254, 537, 538, 539, 540, 541, 542, 570, 580, 581, 583, 584, 585, 586, 587, 588, 590], "start": [0, 6, 7, 8, 11, 12, 13, 14, 18, 30, 32, 33, 34, 35, 36, 37, 38, 39, 110, 111, 112, 114, 166, 171, 172, 537, 538, 540, 542, 545, 548, 580, 585, 586, 587], "receiv": [0, 1, 2, 3, 6, 7, 8, 9, 13, 16, 18, 21, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 49, 76, 77, 79, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 154, 155, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 201, 211, 213, 219, 224, 238, 255, 262, 540, 554, 559, 560, 561, 563, 564, 567, 569, 571, 572, 573, 576, 577, 578, 580, 581, 584, 587, 588], "from": [0, 3, 7, 8, 11, 13, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 49, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 93, 102, 110, 111, 112, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 171, 172, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 238, 251, 255, 262, 266, 531, 534, 538, 539, 543, 544, 554, 558, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 583, 584, 585, 586, 587, 588, 590], "peer": [0, 1, 2, 3, 6, 8, 9, 13, 20, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 46, 49, 52, 61, 80, 88, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 105, 109, 110, 111, 114, 150, 154, 155, 168, 172, 207, 213, 216, 221, 222, 223, 224, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 539, 541, 554, 556, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 579, 581, 585, 586, 587, 588], "11112": [0, 1, 2, 3, 6, 7, 8, 9, 18, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 580, 581, 584, 585, 586, 588, 590], "more": [0, 1, 2, 3, 6, 7, 8, 9, 11, 26, 32, 33, 36, 37, 39, 52, 54, 56, 59, 61, 63, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 189, 191, 194, 203, 206, 208, 211, 220, 238, 253, 254, 559, 560, 561, 563, 564, 571, 572, 573, 578, 580, 581, 585, 586, 587, 588, 590], "inform": [0, 1, 7, 8, 9, 11, 31, 32, 33, 34, 35, 36, 38, 40, 52, 61, 63, 66, 73, 80, 88, 97, 98, 105, 106, 110, 111, 112, 144, 147, 155, 158, 189, 191, 196, 197, 206, 207, 211, 213, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 242, 243, 245, 263, 265, 558, 559, 560, 561, 563, 564, 565, 569, 571, 572, 577, 580, 581, 585, 586, 588, 589], "avail": [0, 1, 2, 3, 6, 7, 8, 9, 12, 16, 18, 34, 40, 78, 79, 88, 92, 97, 104, 112, 114, 154, 155, 189, 191, 202, 203, 211, 222, 223, 233, 238, 269, 538, 539, 558, 565, 580, 581, 583, 585, 586, 587, 588, 590], "run": [0, 1, 2, 3, 6, 8, 9, 12, 13, 26, 34, 35, 36, 37, 84, 88, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 108, 110, 114, 154, 537, 538, 542, 580, 581, 582, 583, 586], "v": [0, 1, 2, 3, 6, 7, 8, 9, 98, 111, 580, 581], "accept": [0, 1, 2, 3, 6, 8, 9, 12, 20, 35, 80, 81, 104, 108, 109, 110, 111, 112, 148, 169, 172, 173, 189, 202, 213, 224, 238, 239, 253, 580, 581, 585, 586, 587, 588, 590], "msgid": [0, 1, 2, 3, 6, 9, 580, 581], "1": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 70, 72, 74, 76, 77, 82, 84, 85, 86, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 108, 109, 110, 111, 112, 114, 140, 141, 142, 143, 150, 151, 152, 153, 155, 156, 157, 158, 159, 167, 175, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 238, 239, 247, 251, 252, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 537, 538, 539, 540, 542, 548, 549, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 590], "releas": [0, 1, 2, 3, 6, 8, 9, 12, 16, 17, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 51, 52, 61, 62, 64, 109, 111, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 215, 549, 580, 581, 584, 588], "ae": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 73, 82, 83, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 111, 112, 114, 143, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 213, 216, 217, 218, 219, 221, 222, 223, 224, 253, 531, 538, 540, 542, 546, 549, 556, 566, 569, 578, 580, 584, 585, 587, 588, 590], "attempt": [0, 1, 9, 18, 73, 111, 112, 171, 181, 182, 538, 539, 541, 585, 586], "send": [0, 1, 2, 3, 6, 9, 12, 13, 14, 18, 23, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 49, 80, 87, 91, 100, 102, 109, 110, 111, 114, 154, 159, 165, 166, 168, 175, 177, 178, 179, 181, 182, 184, 185, 186, 194, 213, 539, 576, 580, 581, 586, 587, 590], "non": [0, 1, 2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 18, 26, 28, 36, 38, 40, 75, 91, 100, 106, 110, 111, 114, 155, 191, 206, 217, 218, 237, 238, 260, 554, 565, 571, 572, 580, 585, 586, 590], "messag": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 16, 18, 25, 26, 38, 46, 49, 52, 61, 66, 75, 82, 88, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 106, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 194, 195, 204, 531, 549, 580, 581, 584, 587, 588], "abort": [0, 1, 12, 13, 14, 15, 16, 18, 22, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 51, 52, 61, 109, 111, 114, 159, 160, 161, 162, 163, 164, 165, 166, 188, 212, 214, 581, 586, 587, 588], "much": [0, 8, 84, 581], "d": [0, 1, 2, 3, 6, 7, 8, 9, 18, 29, 32, 34, 35, 36, 37, 38, 90, 104, 105, 108, 151, 152, 155, 198, 199, 200, 201, 205, 206, 207, 209, 210, 216, 217, 218, 219, 221, 222, 223, 224, 238, 580, 581, 584, 590], "py": [0, 1, 8, 9, 12, 14, 580, 581], "v0": [0, 1, 8, 9], "7": [0, 1, 3, 6, 7, 8, 9, 10, 18, 26, 40, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 114, 138, 165, 166, 173, 182, 188, 190, 192, 197, 198, 199, 200, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 314, 324, 333, 334, 402, 403, 404, 405, 409, 410, 444, 464, 472, 474, 478, 523, 569, 576, 581, 586, 587, 590], "0": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 70, 72, 73, 78, 79, 80, 81, 83, 84, 90, 110, 111, 112, 140, 141, 142, 143, 152, 155, 156, 157, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 238, 239, 534, 538, 539, 541, 543, 548, 549, 580, 581, 585, 586, 587, 588, 590], "paramet": [0, 8, 11, 12, 13, 14, 16, 18, 26, 28, 30, 33, 36, 38, 73, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 251, 252, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 531, 532, 533, 534, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 580, 581, 585, 586, 588, 590], "A": [0, 1, 8, 9, 11, 12, 13, 14, 16, 18, 22, 26, 28, 33, 37, 41, 43, 51, 52, 59, 61, 73, 90, 92, 96, 103, 109, 110, 111, 112, 114, 148, 154, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 184, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 254, 537, 538, 539, 541, 542, 545, 570, 576, 580, 581, 585, 587, 590], "rq": [0, 1, 8, 9, 25, 26, 51, 52, 73, 159, 168, 172, 188, 189, 191, 193, 198, 203, 209, 210, 213, 216, 221, 222, 223, 224, 580, 581], "pdu": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 16, 21, 26, 38, 51, 61, 80, 83, 102, 109, 110, 112, 114, 154, 164, 165, 166, 172, 198, 201, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 549, 581, 588], "Their": [0, 581], "uid": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 18, 25, 26, 28, 32, 33, 34, 35, 36, 38, 40, 70, 72, 73, 74, 83, 88, 91, 100, 101, 103, 104, 105, 110, 111, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 189, 191, 196, 197, 199, 200, 202, 203, 205, 206, 207, 208, 211, 213, 217, 218, 221, 222, 223, 234, 238, 239, 251, 252, 253, 254, 473, 531, 532, 533, 547, 548, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 589, 590], "2": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 18, 19, 33, 35, 36, 40, 70, 72, 73, 78, 79, 80, 81, 83, 84, 85, 86, 98, 101, 108, 110, 111, 112, 114, 138, 140, 141, 142, 143, 155, 156, 157, 160, 168, 177, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 238, 239, 247, 251, 252, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 538, 539, 540, 541, 542, 543, 549, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 590], "276": 0, "7230010": 0, "3": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 18, 26, 28, 32, 33, 35, 36, 40, 74, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 114, 138, 155, 156, 157, 158, 161, 169, 178, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 238, 247, 272, 278, 296, 302, 303, 308, 311, 312, 321, 323, 325, 326, 334, 339, 342, 358, 364, 369, 373, 383, 385, 396, 398, 399, 400, 403, 420, 422, 423, 424, 426, 442, 443, 462, 482, 487, 503, 505, 512, 538, 542, 560, 561, 563, 564, 568, 569, 572, 573, 576, 578, 580, 581, 585, 586, 587, 588, 590], "6": [0, 2, 3, 6, 7, 8, 9, 10, 18, 26, 40, 94, 104, 111, 164, 166, 172, 181, 188, 189, 190, 191, 192, 193, 194, 198, 202, 203, 205, 206, 207, 209, 210, 214, 220, 222, 225, 247, 347, 360, 406, 426, 440, 447, 468, 469, 481, 498, 502, 504, 505, 506, 507, 508, 513, 521, 571, 576, 578, 580, 585, 587], "dims": [0, 1, 2, 3, 6, 7, 8, 9, 13, 16, 18, 26, 29, 34, 35, 36, 37, 38, 39, 51, 75, 82, 83, 95, 104, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 194, 195, 204, 531, 549, 580, 581, 584, 587, 588, 589], "type": [0, 8, 9, 26, 32, 33, 38, 52, 88, 90, 94, 96, 97, 104, 105, 106, 108, 109, 110, 111, 112, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 221, 222, 223, 224, 238, 251, 252, 254, 531, 532, 533, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 554, 568, 570, 574, 575, 578, 580, 581, 584, 587, 588], "present": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 59, 64, 73, 80, 81, 86, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 110, 111, 112, 114, 155, 189, 191, 194, 195, 196, 197, 201, 202, 203, 204, 208, 213, 220, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 538, 542, 549, 559, 570, 580, 589], "context": [0, 1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 73, 78, 80, 81, 86, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 110, 111, 112, 114, 155, 189, 191, 195, 197, 202, 203, 204, 213, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 538, 539, 542, 544, 549, 580, 589], "id": [0, 8, 9, 12, 13, 14, 25, 26, 34, 35, 36, 37, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 189, 191, 195, 202, 203, 204, 206, 220, 238, 253, 254, 558, 580, 581, 587, 590], "data": [0, 2, 3, 5, 6, 7, 8, 9, 12, 13, 26, 33, 34, 38, 40, 51, 52, 61, 79, 80, 88, 91, 92, 93, 95, 97, 98, 100, 103, 105, 106, 109, 110, 111, 114, 143, 154, 155, 158, 181, 182, 185, 186, 189, 191, 194, 195, 196, 201, 203, 204, 208, 211, 213, 219, 220, 225, 243, 247, 539, 570, 572, 576, 581, 585, 587, 588, 590], "set": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 26, 29, 33, 38, 39, 40, 73, 84, 88, 103, 106, 110, 111, 112, 114, 138, 140, 141, 142, 143, 147, 148, 149, 155, 158, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 247, 254, 271, 272, 273, 275, 537, 538, 539, 540, 544, 548, 559, 567, 581, 585, 586, 587, 588, 590], "none": [0, 32, 33, 34, 35, 36, 37, 75, 84, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 158, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 531, 534, 537, 538, 539, 540, 541, 542, 545, 546, 547, 571, 572, 581, 585, 586, 587, 588], "end": [0, 1, 8, 9, 114, 224, 545, 580, 581, 587], "q": [0, 1, 2, 3, 6, 7, 8, 9, 98, 111], "quiet": [0, 1, 2, 3, 6, 7, 8, 9], "mode": [0, 1, 2, 3, 6, 7, 8, 9, 13, 36, 38, 39, 111, 112, 213, 580, 586], "print": [0, 1, 2, 3, 6, 7, 8, 9, 16, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 88, 92, 94, 97, 101, 103, 110, 111, 240, 251, 271, 565, 581, 585, 586, 587, 590], "warn": [0, 1, 2, 3, 6, 7, 8, 9, 25, 26, 30, 32, 75, 88, 91, 92, 97, 98, 100, 101, 103, 106, 111, 141, 142, 558, 560, 561, 562, 563, 564, 567, 568, 570, 571, 572, 574, 576, 578], "error": [0, 1, 2, 3, 6, 7, 8, 9, 73, 75, 92, 101, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 566, 567, 568, 570, 574, 578, 580, 581], "verbos": [0, 1, 2, 3, 6, 7, 8, 9, 581], "process": [0, 1, 2, 3, 6, 7, 8, 9, 13, 21, 26, 33, 41, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 111, 114, 154, 187, 225, 251, 253, 254, 538, 542, 559, 560, 561, 562, 563, 564, 566, 567, 568, 570, 571, 572, 573, 574, 575, 577, 578, 590], "detail": [0, 1, 2, 3, 6, 7, 8, 9, 33, 36, 40, 539, 549, 559, 581, 586, 587, 588], "debug": [0, 1, 2, 3, 6, 7, 8, 9, 39, 113, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 581], "ll": [0, 1, 2, 3, 6, 7, 8, 9, 36, 580, 581, 584], "log": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 18, 32, 39, 40, 75, 76, 77, 78, 88, 113, 158, 225, 226, 267, 565, 568, 580, 581, 586, 588], "level": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 14, 34, 35, 36, 39, 40, 85, 92, 103, 111, 152, 172, 570, 579, 585], "l": [0, 1, 2, 3, 6, 7, 8, 9, 85], "evel": [0, 1, 2, 3, 6, 7, 8, 9], "str": [0, 1, 2, 3, 6, 7, 8, 9, 26, 71, 73, 75, 83, 85, 86, 99, 100, 107, 109, 110, 111, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 200, 202, 204, 210, 211, 213, 215, 217, 218, 221, 222, 223, 238, 251, 252, 473, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 543, 545, 546, 547, 585], "One": [0, 1, 2, 3, 6, 7, 8, 9, 35, 36, 87, 95, 102, 213, 224, 238, 531], "critic": [0, 1, 2, 3, 6, 7, 8, 9], "info": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 33, 112, 207, 212, 213, 215, 586], "correspond": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 16, 18, 33, 36, 52, 88, 92, 97, 101, 103, 104, 110, 111, 112, 154, 155, 158, 221, 222, 223, 238, 473, 532, 533, 534, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 580, 581, 585, 586, 588, 590], "lower": [0, 1, 7, 8, 172], "aet": [0, 1, 2, 3, 6, 7, 8, 9], "titl": [0, 1, 2, 3, 6, 7, 8, 9, 12, 16, 26, 29, 36, 73, 82, 83, 88, 109, 110, 111, 112, 143, 189, 191, 213, 538, 542, 578, 581, 585, 587], "etitl": [0, 1, 2, 3, 6, 7, 8, 9], "local": [0, 1, 2, 3, 6, 7, 8, 9, 18, 78, 109, 110, 111, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 213, 253, 539, 540, 581, 586, 588], "default": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 24, 26, 27, 39, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 109, 110, 111, 140, 141, 142, 143, 150, 151, 152, 158, 189, 191, 219, 221, 238, 251, 252, 253, 254, 538, 539, 542, 546, 547, 580, 581, 585, 586, 588, 590], "ta": [0, 1, 2, 3, 6, 7, 8, 9], "acs": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 18, 26, 51, 62, 63, 64, 65, 87, 110, 111, 213, 224, 549, 588], "timeout": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 18, 26, 109, 110, 111, 114, 154, 537, 538, 539, 581, 586], "econd": [0, 1, 2, 3, 6, 7, 8, 9], "float": [0, 1, 2, 3, 5, 6, 7, 8, 9, 84, 109, 110, 111, 114, 154, 537, 539], "30": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 110, 417, 576], "td": [0, 1, 2, 3, 6, 7, 8, 9], "tn": [0, 1, 2, 3, 6, 7, 8, 9], "max": [0, 1, 2, 3, 6, 7, 8, 9, 92, 103, 111, 581], "n": [0, 1, 2, 3, 6, 7, 8, 9, 11, 30, 32, 33, 40, 46, 88, 92, 94, 97, 101, 103, 110, 111, 114, 144, 145, 146, 147, 148, 149, 155, 158, 238, 267, 268, 269, 270, 271, 272, 273, 274, 275, 581, 585, 586, 587, 588, 590], "umber": [0, 1, 2, 3, 6, 7, 8, 9], "byte": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 26, 38, 52, 60, 82, 93, 105, 108, 110, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 168, 189, 191, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 247, 538, 539, 542, 543, 545, 547, 580, 587], "int": [0, 1, 2, 3, 5, 6, 7, 8, 9, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 224, 238, 239, 534, 535, 536, 538, 539, 540, 541, 542, 545, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 585], "maximum": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 18, 28, 38, 80, 82, 90, 92, 103, 110, 111, 112, 114, 139, 140, 141, 142, 143, 189, 191, 198, 201, 211, 213, 216, 219, 545, 570, 585, 586, 587], "16382": [0, 1, 2, 3, 6, 7, 8, 9, 110, 581], "x": [0, 3, 6, 7, 8, 9, 91, 98, 100, 111, 225, 247, 587], "uncompr": [0, 8], "explicit": [0, 1, 2, 3, 6, 7, 8, 9, 18, 85, 86, 110, 150, 151, 251, 580, 581, 585, 590], "vr": [0, 1, 2, 3, 5, 6, 7, 8, 9, 18, 26, 82, 85, 86, 110, 150, 151, 251, 580, 581, 585, 590], "order": [0, 6, 7, 8, 26, 32, 52, 60, 73, 112, 114, 150, 151, 189, 191, 208, 238, 585, 587], "xe": [0, 1, 8, 9], "littl": [0, 1, 2, 3, 6, 7, 8, 9, 18, 85, 86, 110, 150, 151, 251, 580, 581, 585, 590], "endian": [0, 1, 2, 3, 6, 7, 8, 9, 18, 52, 60, 85, 86, 110, 150, 151, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 251, 580, 581, 585, 590], "xb": [0, 1, 8, 9], "big": [0, 1, 2, 3, 6, 7, 8, 9, 52, 60, 85, 86, 110, 150, 151, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 251, 581, 585, 590], "xi": [0, 1, 8, 9], "implicit": [0, 1, 2, 3, 6, 7, 8, 9, 85, 86, 110, 150, 151, 251, 581, 585, 590], "onli": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 30, 32, 33, 38, 39, 73, 74, 88, 91, 92, 97, 98, 100, 103, 104, 105, 106, 110, 111, 112, 114, 155, 158, 210, 216, 217, 218, 219, 221, 222, 223, 224, 238, 243, 547, 572, 578, 580, 581, 586, 587, 588], "support": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 16, 18, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 53, 81, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 205, 208, 213, 221, 223, 224, 238, 253, 532, 538, 542, 551, 552, 581, 586, 587, 590], "ar": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 26, 33, 34, 35, 39, 52, 61, 73, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 154, 155, 156, 157, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 220, 221, 222, 223, 224, 238, 253, 254, 534, 544, 548, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578, 580, 581, 585, 586, 587, 588, 590], "840": [0, 1, 2, 3, 6, 7, 8, 9, 85, 86, 110, 197, 213, 221, 222, 223, 225, 247, 251, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 585, 586, 587, 590], "10008": [0, 1, 2, 3, 6, 7, 8, 9, 85, 86, 110, 197, 213, 221, 222, 223, 225, 247, 251, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 585, 586, 587, 590], "99": [0, 1, 2, 3, 6, 7, 8, 9, 85, 86, 585], "deflat": [0, 1, 2, 3, 6, 7, 8, 9, 18, 85, 86, 150, 151, 251, 585, 590], "4": [0, 2, 3, 5, 6, 7, 8, 9, 10, 14, 18, 19, 33, 35, 36, 40, 85, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 108, 110, 111, 155, 162, 170, 179, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 217, 221, 222, 223, 224, 225, 238, 247, 251, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 559, 560, 561, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 585, 587, 590], "50": [0, 3, 6, 7, 8, 9, 11, 85, 251, 394, 576, 590], "jpeg": [0, 6, 7, 8, 85, 251, 590], "baselin": [0, 6, 7, 8, 85, 251, 590], "51": [0, 6, 7, 8, 85, 576], "extend": [0, 7, 8, 11, 73, 85, 104, 105, 110, 112, 206, 207, 211, 222, 223, 224, 473, 580, 581, 588, 590], "57": [0, 6, 7, 8, 85, 576], "lossless": [0, 6, 7, 8, 85], "hierarch": [0, 6, 7, 8], "14": [0, 3, 6, 7, 8, 9, 33, 85, 196, 210, 378, 379, 430, 497, 570, 576], "70": [0, 3, 6, 7, 8, 9, 85, 375, 531, 576, 584], "first": [0, 6, 7, 8, 18, 36, 38, 40, 52, 91, 100, 114, 155, 171, 196, 197, 208, 238, 582, 585, 587, 590], "predict": [0, 6, 7, 8], "select": [0, 3, 6, 7, 8, 9, 11, 12, 13, 18, 34, 35, 73, 81, 85, 110, 111, 112, 205, 211, 221, 225, 238, 247, 252, 253, 254, 538, 539, 586, 587, 589], "valu": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 26, 30, 32, 34, 35, 52, 59, 73, 83, 85, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 105, 106, 108, 109, 110, 111, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 158, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 247, 252, 253, 254, 266, 534, 536, 537, 538, 539, 543, 545, 546, 547, 548, 554, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 585, 586, 587, 588, 590], "80": [0, 3, 6, 7, 8, 9, 85, 415, 576], "imag": [0, 2, 3, 6, 7, 8, 9, 32, 33, 34, 35, 38, 88, 103, 110, 111, 225, 240, 245, 247, 570, 576, 577, 580, 581, 585, 587, 590], "compress": [0, 6, 7, 8, 208, 580, 587], "81": [0, 3, 6, 7, 8, 9, 85, 413, 576], "lossi": [0, 6, 7, 8, 85], "Near": [0, 6, 7, 8], "90": [0, 3, 6, 7, 8, 9, 85, 318, 576], "2000": [0, 6, 7, 8, 85], "91": [0, 3, 6, 7, 8, 9, 85, 397, 576], "92": [0, 6, 7, 8, 85], "part": [0, 6, 7, 8, 18, 32, 33, 37, 81, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 114, 138, 155, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 537, 576, 580, 581, 585, 586, 587, 590], "multi": [0, 2, 3, 6, 7, 8, 9, 85, 225, 247], "compon": [0, 6, 7, 8, 85, 196, 197, 208, 548, 587], "93": [0, 6, 7, 8, 85], "5": [0, 2, 3, 6, 7, 8, 9, 10, 13, 16, 26, 33, 40, 76, 77, 82, 84, 85, 92, 96, 100, 105, 108, 109, 110, 111, 114, 150, 151, 152, 153, 155, 163, 166, 171, 180, 194, 195, 202, 203, 204, 205, 206, 207, 210, 214, 221, 222, 223, 224, 225, 247, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 534, 537, 538, 539, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 585, 587, 590], "rle": [0, 6, 7, 8, 85], "addr": [1, 2, 3, 6, 9, 18, 33, 36, 100, 110, 539, 586], "user": [1, 2, 3, 6, 7, 9, 11, 12, 13, 14, 18, 26, 29, 30, 34, 35, 36, 37, 41, 43, 44, 52, 53, 61, 63, 73, 75, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 167, 189, 191, 209, 210, 211, 212, 213, 214, 215, 219, 220, 224, 238, 266, 580, 581, 583, 587, 588], "scu": [1, 2, 3, 6, 7, 8, 9, 11, 13, 40, 73, 81, 92, 110, 111, 112, 205, 211, 221, 223, 238, 252, 253, 254, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 587, 589], "entiti": [1, 2, 3, 6, 9, 16, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 44, 46, 52, 61, 62, 63, 65, 66, 110, 111, 143, 196, 197, 199, 200, 205, 206, 207, 208, 549, 576, 579, 589], "wait": [1, 12, 18, 110, 114, 154, 164, 165], "respons": [1, 2, 3, 6, 9, 13, 18, 23, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 63, 65, 74, 77, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 105, 106, 108, 109, 111, 112, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 184, 192, 209, 210, 212, 213, 214, 215, 220, 224, 238, 537, 580, 581, 585, 587, 588, 589], "successfulli": [1, 2, 3, 6, 9, 32, 33, 73, 580], "ip": [1, 2, 3, 6, 7, 9, 18, 29, 30, 32, 34, 35, 36, 37, 38, 39, 100, 110, 112, 213, 541, 581, 586], "127": [1, 2, 3, 6, 9, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 580, 581, 585, 586, 588, 590], "doesn": [1, 36, 90, 101, 111, 569, 576, 581, 586, 590], "t": [1, 3, 6, 8, 9, 12, 18, 27, 32, 36, 38, 79, 80, 90, 101, 110, 111, 222, 532, 569, 576, 580, 581, 584, 585, 586, 587, 588, 590], "e": [1, 3, 9, 18, 33, 66, 110, 195, 203, 204, 208, 238, 251, 580, 581, 585, 587, 588, 590], "No": [1, 9, 12, 33, 88, 92, 94, 97, 101, 103, 111, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 196, 197, 208, 558, 562, 566, 567, 568, 570, 574, 575, 578, 580, 581], "reject": [1, 12, 14, 15, 16, 29, 30, 32, 34, 35, 36, 37, 38, 39, 108, 109, 110, 111, 112, 170, 172, 174, 190, 202, 213, 224, 238, 581, 585, 586, 587, 588, 590], "thi": [1, 2, 3, 5, 6, 7, 18, 33, 34, 35, 36, 37, 38, 39, 50, 78, 79, 80, 81, 84, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 168, 171, 172, 189, 216, 217, 218, 219, 221, 223, 224, 253, 254, 531, 533, 537, 538, 539, 542, 549, 557, 567, 571, 572, 574, 578, 579, 580, 581, 583, 584, 585, 586, 587, 590], "case": [1, 33, 37, 38, 100, 108, 538, 580, 581, 587], "becaus": [1, 33, 88, 90, 91, 92, 97, 98, 100, 103, 106, 111, 155, 580, 581, 587, 588, 590], "call": [1, 2, 3, 6, 9, 12, 16, 33, 73, 78, 109, 110, 111, 112, 158, 189, 191, 213, 538, 539, 580, 581, 585], "wasn": 1, "recognis": [1, 32, 103, 109, 213, 535, 568, 570, 574, 578, 581], "result": [1, 2, 3, 5, 6, 7, 8, 9, 14, 26, 32, 38, 73, 83, 109, 112, 189, 190, 202, 213, 215, 224, 225, 238, 247, 253, 254, 541, 578, 581, 587], "perman": [1, 109, 213, 224], "reason": [1, 12, 108, 109, 110, 188, 189, 190, 202, 213, 214, 215, 567, 581, 585, 587], "fail": [1, 3, 6, 25, 26, 32, 33, 83, 88, 91, 92, 97, 98, 100, 103, 106, 111, 141, 142, 151, 541, 547, 554, 558, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 588], "unabl": [1, 88, 91, 98, 100, 111, 189, 559, 560, 561, 563, 564, 570, 571, 572, 573, 577, 578, 580], "remot": [1, 12, 93, 107, 110, 111, 114, 171, 539, 540, 586, 588], "tcp": [1, 2, 3, 6, 9, 100, 110, 112, 213, 581], "initialis": [1, 11, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 114, 138, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 581, 585], "refus": [1, 88, 92, 103, 558, 566, 567, 570, 574, 575, 578, 579, 581], "flag": [1, 6, 9, 581], "outgo": [1, 9, 13, 581], "ac": [1, 8, 9, 16, 28, 51, 52, 73, 169, 173, 189, 198, 202, 209, 213, 216, 221, 222, 223, 224, 581], "pydicom": [1, 2, 3, 5, 6, 8, 9, 11, 16, 19, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 105, 106, 110, 111, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 189, 191, 202, 203, 213, 217, 221, 222, 223, 238, 251, 532, 533, 547, 548, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 583, 585, 590], "read_dataset": [1, 8, 9, 581], "transfersyntax": [1, 8, 9, 581], "statu": [1, 9, 18, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 88, 89, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 238, 266, 549, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 588], "success": [1, 2, 3, 6, 9, 16, 23, 26, 30, 32, 33, 35, 36, 37, 38, 39, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 189, 266, 534, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 586, 588], "address": [1, 2, 3, 6, 7, 9, 13, 14, 18, 26, 27, 36, 100, 107, 110, 112, 213, 538, 539, 540, 541, 542, 554, 560, 561, 563, 564, 571, 572, 581, 586], "hostnam": [1, 2, 3, 6, 9, 539], "number": [1, 2, 3, 5, 6, 9, 13, 35, 36, 38, 90, 91, 92, 100, 103, 110, 111, 112, 141, 142, 154, 156, 157, 198, 206, 213, 216, 239, 537, 539, 545, 554, 560, 561, 563, 564, 571, 572, 574, 581, 585, 587, 588, 590], "aec": [1, 2, 3, 6, 9], "ani": [1, 2, 3, 5, 6, 9, 12, 13, 33, 36, 38, 73, 78, 81, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 148, 155, 158, 197, 238, 538, 542, 580, 581, 583, 585, 586, 588, 590], "repeat": [1, 33], "time": [1, 2, 13, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 155, 217, 218, 537, 571, 572, 580, 581, 586, 588], "instead": [1, 2, 3, 5, 6, 12, 13, 14, 16, 18, 36, 79, 80, 92, 100, 103, 110, 111, 158, 539, 570, 580, 581, 583, 585, 586, 588, 590], "new": [2, 3, 6, 7, 13, 18, 26, 28, 32, 33, 36, 40, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 92, 100, 103, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 152, 153, 154, 155, 156, 157, 158, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 332, 433, 434, 436, 484, 485, 491, 500, 501, 534, 537, 538, 539, 540, 541, 542, 543, 544, 570, 571, 572, 578, 580, 581, 582, 583, 585, 586, 590], "version": [2, 3, 6, 7, 11, 18, 26, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 100, 109, 110, 111, 112, 114, 150, 151, 152, 153, 155, 156, 157, 158, 172, 189, 191, 197, 200, 206, 211, 213, 217, 218, 252, 267, 269, 270, 271, 272, 273, 274, 275, 332, 433, 434, 436, 484, 485, 491, 500, 501, 534, 538, 539, 540, 541, 542, 543, 548, 580, 581, 586], "k": [2, 3, 5, 6, 98, 111], "f": [2, 3, 5, 6, 7, 38, 92, 97, 101, 103, 111, 155, 196, 197, 208, 580], "file": [2, 3, 5, 6, 8, 9, 24, 26, 33, 35, 38, 79, 80, 106, 111, 155, 581], "find": [2, 7, 11, 16, 18, 23, 26, 29, 31, 37, 40, 76, 77, 98, 111, 114, 140, 155, 158, 227, 228, 229, 231, 232, 242, 243, 255, 263, 265, 275, 531, 532, 554, 580, 581, 584, 586, 588], "match": [2, 3, 6, 12, 16, 18, 26, 34, 35, 36, 37, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 189, 534, 558, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 581, 586, 590], "against": [2, 3, 6, 34, 35, 36, 37], "instanc": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 18, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 78, 88, 91, 92, 94, 97, 98, 100, 101, 103, 106, 110, 111, 143, 144, 145, 146, 147, 148, 149, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 233, 243, 251, 252, 269, 531, 538, 539, 540, 542, 549, 558, 562, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 580, 581, 585, 586, 587, 588, 590], "kei": [2, 3, 6, 7, 8, 9, 13, 16, 18, 33, 34, 35, 36, 91, 98, 111, 158, 225, 559, 560, 561, 563, 564, 571, 572, 578, 586], "queryretrievelevel": [2, 3, 5, 6, 34, 35, 36], "patient": [2, 3, 5, 6, 7, 8, 9, 11, 31, 34, 35, 36, 40, 88, 98, 106, 111, 225, 237, 243, 245, 247, 260, 263, 265, 558, 565, 572, 580, 587], "patientnam": [2, 3, 5, 6, 29, 32, 34, 37, 580], "identifi": [2, 3, 5, 6, 18, 23, 26, 29, 30, 33, 34, 35, 36, 37, 76, 77, 88, 91, 98, 100, 101, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 158, 196, 197, 199, 200, 208, 217, 218, 220, 221, 531, 558, 559, 573, 577, 580, 587, 590], "0008": [2, 3, 5, 6, 30, 91, 100, 111, 580], "0052": [2, 3, 5, 6], "0010": [2, 3, 5, 6, 33, 88, 111, 155, 558, 580, 590], "pn": [2, 3, 5, 6], "0xff00": [2, 3, 6, 34, 35, 36, 37, 91, 98, 100, 111, 534, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "pend": [2, 3, 6, 18, 23, 26, 34, 35, 36, 77, 91, 98, 100, 111, 534, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "0054": 2, "qrscp": [2, 4, 18, 24, 26, 28, 34, 35, 36, 40, 583], "retrieveaetitl": [2, 32], "compressedsampl": 2, "ct1": 2, "0x0000": [2, 3, 6, 9, 16, 30, 32, 33, 35, 36, 38, 39, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 266, 534, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 586, 588], "higher": [2, 3, 6, 9, 18, 581], "p": [2, 3, 6, 7, 12, 13, 14, 51, 52, 53, 61, 88, 95, 109, 111, 114, 162, 166, 181, 182, 185, 186, 188, 194, 201, 213, 214, 219, 220], "root": [2, 3, 6, 7, 11, 34, 35, 36, 72, 243, 572, 587], "studi": [2, 3, 6, 7, 34, 35, 36, 88, 243, 558, 572, 587], "o": [2, 3, 6, 32, 34, 35, 36, 37, 580, 581], "psonli": [2, 3, 6], "w": [2, 586], "modal": [2, 7, 14, 18, 29, 31, 40, 111, 225, 227, 236, 241, 272, 565], "u": [2, 3, 5, 6, 7, 8, 9, 33, 91, 98, 100, 111, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 212, 213, 214, 215, 220, 225, 247, 580, 581, 583], "up": [2, 3, 5, 6, 7, 18, 20, 82, 88, 92, 101, 103, 111, 206, 211, 580, 581, 582, 583, 585, 587, 590], "pull": [2, 7, 20, 249, 578, 583], "eyword": [2, 3, 6], "gggg": [2, 3, 6], "eeee": [2, 3, 6], "add": [2, 3, 6, 11, 14, 18, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 73, 78, 88, 110, 112, 154, 155, 213, 238, 534, 545, 558, 580, 581, 585, 586, 590], "overrid": [2, 3, 6, 7], "element": [2, 3, 5, 6, 11, 16, 18, 26, 32, 41, 46, 82, 83, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 111, 140, 141, 142, 143, 151, 153, 155, 196, 197, 203, 208, 536, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 585, 587], "either": [2, 3, 5, 6, 30, 32, 37, 62, 66, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 110, 111, 112, 114, 172, 183, 196, 208, 213, 238, 538, 580, 581, 585, 586, 590], "tag": [2, 3, 5, 6, 30, 111, 148, 155, 580], "group": [2, 3, 6, 92, 103, 111, 155, 232, 237, 564, 574, 580, 587], "see": [2, 3, 6, 7, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 98, 110, 111, 154, 155, 213, 223, 580, 581, 585, 586, 588], "section": [2, 3, 6, 7, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 110, 111, 138, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 238, 537, 581, 585], "il": [2, 3, 6, 7], "dataset": [2, 3, 5, 6, 9, 13, 18, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 76, 77, 79, 80, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 106, 111, 143, 150, 151, 152, 155, 158, 534, 536, 549, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 584, 587, 590], "ad": [2, 3, 6, 7, 11, 12, 13, 14, 16, 18, 26, 28, 35, 38, 73, 81, 82, 100, 106, 109, 110, 111, 112, 114, 150, 151, 254, 534, 538, 580, 584, 586], "overwrit": [2, 3, 6], "those": [2, 3, 6, 12, 16, 110, 111, 588], "relat": [2, 3, 6, 13, 14, 33, 34, 35, 41, 50, 73, 87, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 110, 112, 139, 140, 141, 142, 143, 197, 206, 213, 222, 224, 554, 559, 569, 570, 577, 581, 587], "dt": [2, 185, 186], "date": [2, 18, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 155, 549, 583, 588], "fuzzi": 2, "name": [2, 3, 5, 6, 11, 13, 14, 16, 18, 26, 34, 71, 73, 99, 109, 110, 112, 155, 156, 157, 158, 189, 191, 196, 197, 200, 202, 203, 206, 208, 211, 213, 217, 218, 221, 534, 546, 547, 580, 581, 584, 587], "semant": [2, 196, 203, 587], "person": 2, "timezon": 2, "adj": 2, "adjust": 2, "enhanc": [2, 3, 6, 7, 8, 9, 225, 247], "convers": [2, 3, 6], "frame": [2, 3, 6, 7, 8, 9, 11, 40, 88, 91, 100, 111, 225, 247, 558, 571, 572], "write": [2, 3, 6, 8, 35, 38, 40, 79, 155, 582], "rsp000001": 2, "dcm": [2, 9, 33, 155, 534, 580], "rsp000002": 2, "becom": [2, 3, 5, 6, 26, 88, 578, 580, 581, 590], "possibl": [2, 3, 5, 6, 13, 16, 18, 34, 35, 36, 73, 80, 114, 156, 157, 238, 581, 585, 586, 588, 590], "without": [2, 3, 5, 6, 26, 40, 78, 80, 111, 155, 243, 547, 572, 580, 583, 586], "need": [2, 3, 5, 6, 14, 26, 29, 33, 35, 38, 81, 100, 111, 580, 581, 583, 585, 588], "creat": [2, 3, 5, 6, 11, 13, 18, 29, 33, 34, 35, 36, 37, 38, 39, 40, 86, 88, 91, 92, 100, 103, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145, 148, 154, 155, 158, 187, 238, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 537, 538, 539, 540, 541, 542, 558, 571, 572, 583, 586, 587, 588, 589, 590], "multipl": [2, 3, 5, 6, 7, 8, 9, 21, 26, 38, 110, 158, 225, 251, 585, 586, 587, 588, 590], "build": [2, 3, 5, 6, 585], "For": [2, 3, 5, 6, 7, 8, 9, 33, 34, 40, 78, 85, 110, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 225, 580, 581, 585, 586, 587, 590], "produc": [2, 3, 5, 6, 18], "after": [2, 3, 5, 6, 14, 17, 18, 33, 73, 95, 99, 112, 155, 196, 197, 208, 238, 531, 537, 580, 586], "interpret": [2, 3, 5, 6], "so": [2, 3, 5, 6, 11, 18, 29, 34, 38, 580, 581, 584, 585, 586, 588, 590], "includ": [2, 3, 5, 6, 14, 25, 26, 33, 35, 36, 37, 40, 105, 110, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 211, 253, 254, 473, 549, 578, 581, 584, 585, 586, 587, 588, 590], "singl": [2, 3, 5, 6, 7, 8, 9, 12, 30, 33, 37, 38, 39, 110, 158, 197, 216, 217, 218, 219, 222, 223, 224, 225, 247, 251, 573, 580, 581, 585, 587, 588], "doubl": [2, 3, 5, 6], "quotat": [2, 3, 5, 6], "mark": [2, 3, 5, 6], "incorrect": [2, 3, 5, 6, 18], "citizen": [2, 3, 5, 6, 34], "jan": [2, 3, 5, 6, 34], "correct": [2, 3, 5, 6, 25, 26, 33, 88, 103, 111, 155, 578, 581], "altern": [2, 3, 5, 6, 581, 585, 590], "sequenc": [2, 3, 5, 6, 53, 54, 55, 56, 57, 58, 59, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "same": [2, 3, 5, 6, 13, 18, 33, 35, 36, 91, 98, 110, 111, 112, 189, 212, 213, 214, 215, 220, 238, 580, 581, 585, 587, 590], "index": [2, 3, 5, 6, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "otherpatientidssequ": [2, 3, 5, 6], "patientid": [2, 3, 5, 6, 28, 32, 34, 35, 36, 37], "12345678": [2, 3, 5, 6], "both": [2, 3, 5, 6, 11, 13, 18, 35, 38, 53, 109, 110, 112, 216, 221, 222, 223, 238, 580, 585, 586, 590], "updat": [2, 3, 5, 6, 11, 18, 26, 32, 33, 88, 103, 110, 111, 155, 558, 578, 583], "empti": [2, 3, 5, 6, 7, 12, 16, 88, 105, 110, 111, 142, 154, 155, 189, 202, 213, 218, 546, 547, 570, 581], "numer": [2, 3, 5, 6, 114, 196, 197, 208, 537, 587], "like": [2, 3, 5, 6, 26, 39, 110, 546, 580, 581, 584, 587], "fl": [2, 3, 5, 6], "convert": [2, 3, 5, 6, 7, 8, 9, 18, 73, 95, 114, 154, 191, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 545, 546, 547, 590], "depend": [2, 3, 5, 6, 7, 19, 33, 34, 35, 38, 108, 110, 111, 224, 581, 585, 586, 587, 588], "column": [2, 3, 5, 6, 33, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "1024": [2, 3, 5, 6], "0028": [2, 3, 5, 6], "0011": [2, 3, 5, 6], "ob": [2, 3, 5, 6, 580], "ow": [2, 3, 5, 6], "pixeldata": [2, 3, 5, 6, 33], "00ffea08": [2, 3, 5, 6], "7fe0": [2, 3, 5, 6], "pixel": [2, 3, 5, 6, 33], "b": [2, 3, 5, 6, 7, 8, 9, 32, 38, 106, 111, 155, 196, 203, 208, 218, 223, 224, 225, 238, 247, 580, 585, 586], "x00": [2, 3, 5, 6, 38, 155, 580], "xff": [2, 3, 5, 6], "xea": [2, 3, 5, 6], "x08": [2, 3, 5, 6], "vm": [2, 3, 5, 6, 26], "where": [2, 3, 5, 6, 7, 18, 30, 34, 35, 36, 37, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 172, 538, 539, 559, 580, 586, 588, 590], "appropri": [2, 3, 5, 6, 33, 34, 74, 88, 578, 580], "acquisitionindex": [2, 3, 5, 6], "0020": [2, 3, 5, 6, 33, 88, 558], "9518": [2, 3, 5, 6], "acquisit": [2, 3, 5, 6, 7, 8, 9, 32, 225, 247], "300a": [2, 3, 5, 6], "00b0": [2, 3, 5, 6], "beam": [2, 3, 5, 6, 7, 8, 9, 92, 103, 111, 225, 247, 574], "beamsequ": [2, 3, 5, 6], "item": [2, 3, 5, 6, 13, 16, 29, 33, 35, 51, 52, 61, 73, 81, 87, 90, 104, 105, 108, 110, 111, 112, 154, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 252, 253, 254, 545, 549, 578, 580, 585, 586, 587, 588, 590], "one": [2, 3, 5, 6, 9, 11, 12, 13, 16, 18, 32, 33, 34, 43, 44, 52, 54, 56, 59, 61, 63, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 140, 141, 142, 143, 145, 154, 155, 189, 191, 208, 211, 212, 220, 221, 238, 253, 254, 559, 560, 561, 563, 564, 566, 571, 572, 573, 576, 578, 580, 581, 585, 586, 587, 590], "four": [2, 3, 5, 6, 238, 580, 585, 586, 590], "nest": [2, 3, 5, 6], "beamlimitingdevicesequ": [2, 3, 5, 6], "numberofleafjawpair": [2, 3, 5, 6], "00b6": [2, 3, 5, 6], "limit": [2, 3, 5, 6, 36, 88, 92, 94, 97, 101, 103, 109, 111, 114, 201, 213, 219, 558, 562, 566, 567, 568, 570, 574, 575, 578, 580, 581, 585, 586, 587], "devic": [2, 3, 5, 6, 33, 103, 111, 567, 574, 577], "00bc": [2, 3, 5, 6], "leaf": [2, 3, 5, 6], "jaw": [2, 3, 5, 6], "pair": [2, 3, 5, 6, 91, 98, 100, 111, 155, 554, 560, 561, 563, 564, 571, 572, 587], "31": [2, 7, 401, 559, 576], "34": [2, 3, 6, 7, 8, 9, 315, 444, 446, 448, 452, 500, 501, 504, 505, 506, 507, 508, 574, 576, 578], "get": [3, 7, 11, 14, 18, 25, 26, 30, 31, 32, 33, 36, 76, 77, 81, 91, 101, 110, 111, 112, 114, 138, 140, 141, 142, 143, 147, 148, 149, 154, 155, 158, 189, 191, 202, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 228, 229, 231, 232, 238, 242, 243, 268, 270, 271, 272, 273, 275, 531, 539, 554, 580, 581, 582, 584, 586, 587, 588, 590], "manag": [3, 6, 11, 14, 16, 31, 34, 35, 36, 37, 40, 88, 92, 94, 97, 98, 101, 103, 111, 227, 230, 234, 240, 255, 268, 270, 271, 565, 578, 581, 587], "qr": [3, 6, 7, 11, 18, 26, 34, 35, 36, 256, 257, 258, 259, 261, 586], "copi": [3, 6, 583], "act": [3, 8, 13, 14, 16, 18, 21, 25, 26, 33, 35, 40, 81, 110, 111, 112, 238, 253, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 580, 585, 586, 590], "storag": [3, 11, 13, 16, 18, 26, 31, 32, 35, 36, 40, 81, 88, 97, 100, 106, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 225, 235, 237, 246, 247, 260, 264, 274, 565, 581, 585, 586, 587, 590], "store": [3, 6, 7, 8, 9, 13, 16, 24, 25, 26, 34, 35, 36, 37, 38, 40, 79, 91, 100, 103, 106, 111, 114, 143, 155, 158, 264, 554, 570, 572, 573, 580, 581, 586, 587, 588], "ct": [3, 6, 7, 8, 9, 29, 32, 35, 38, 110, 225, 237, 247, 580, 581, 585, 587, 590], "5962": [3, 6, 8, 9, 580], "20040119072730": [3, 6, 8, 9, 580], "12322": [3, 6, 8, 9, 580], "sub": [3, 6, 13, 14, 16, 18, 25, 26, 35, 36, 51, 52, 61, 73, 91, 100, 111, 141, 142, 154, 189, 191, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 216, 534, 549, 554, 560, 561, 563, 564, 571, 572], "oper": [3, 6, 11, 13, 14, 18, 25, 26, 35, 36, 88, 90, 91, 92, 94, 96, 97, 100, 101, 103, 106, 111, 112, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 198, 211, 216, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 534, 554, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 581, 586, 587, 588], "remain": [3, 6, 100, 110, 141, 142, 537, 581, 586, 590], "complet": [3, 6, 12, 13, 32, 88, 91, 100, 110, 111, 114, 141, 142, 238, 538, 539, 560, 561, 563, 564, 567, 571, 572, 578, 587, 588], "od": [3, 6, 8], "irectori": [3, 6, 7, 8], "directori": [3, 6, 7, 8, 9, 34, 35, 36, 37, 235, 580, 583], "object": [3, 6, 7, 8, 9, 11, 18, 40, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 110, 111, 112, 154, 155, 189, 191, 196, 197, 208, 213, 223, 224, 225, 237, 238, 260, 531, 532, 533, 539, 549, 554, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 586, 588], "ignor": [3, 6, 8, 16, 33, 36, 73, 81, 83, 90, 91, 98, 100, 109, 110, 164, 588], "don": [3, 6, 8, 27, 38, 79, 80, 580, 581, 587, 588], "sent": [3, 7, 13, 18, 25, 26, 30, 32, 33, 34, 35, 36, 37, 52, 74, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 150, 154, 189, 190, 191, 202, 213, 238, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 580, 581, 585, 586, 588], "comput": [3, 6, 7, 8, 9, 225, 247, 539, 581], "radiographi": [3, 6, 7, 8, 9, 225, 247], "digit": [3, 6, 7, 8, 9, 196, 197, 208, 225], "rai": [3, 6, 7, 8, 9, 225, 247], "mammographi": [3, 6, 7, 8, 9, 225, 247], "intra": [3, 6, 7, 8, 9, 225], "oral": [3, 6, 7, 8, 9, 225], "legaci": [3, 6, 7, 8, 9, 225], "ultrasound": [3, 6, 7, 8, 9, 225, 247], "mr": [3, 6, 7, 8, 9, 225, 247, 590], "spectroscopi": [3, 6, 7, 8, 9, 225, 247], "color": [3, 6, 7, 8, 9, 11, 16, 33, 40, 91, 98, 100, 111, 225, 228, 237, 240, 247, 256, 565, 570], "volum": [3, 6, 7, 8, 9, 225, 247], "secondari": [3, 6, 7, 8, 9, 108, 210, 224, 225, 247], "captur": [3, 6, 7, 8, 9, 225, 247], "bit": [3, 6, 7, 8, 9, 225, 247, 580, 581], "grayscal": [3, 6, 7, 8, 9, 16, 40, 111, 225, 240, 247, 570], "word": [3, 6, 7, 8, 9, 91, 100, 225, 247], "true": [3, 6, 7, 8, 9, 12, 13, 14, 35, 39, 74, 76, 77, 78, 79, 80, 81, 82, 83, 91, 98, 100, 106, 108, 109, 110, 111, 112, 114, 150, 151, 154, 155, 156, 157, 221, 224, 225, 238, 247, 252, 537, 539, 544, 546, 547, 548, 580, 585, 586, 590], "9": [3, 6, 7, 8, 9, 26, 70, 72, 91, 96, 98, 100, 106, 110, 111, 138, 166, 168, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 238, 247, 278, 279, 287, 290, 292, 302, 333, 334, 352, 353, 354, 366, 406, 451, 452, 469, 472, 478, 499, 520, 537, 548, 570, 574, 576, 581, 585, 587], "12": [3, 6, 7, 8, 9, 28, 32, 166, 197, 206, 225, 247, 348, 349, 460, 514, 528, 530, 576], "lead": [3, 6, 7, 8, 9, 191, 225, 247, 585], "ecg": [3, 6, 7, 8, 9, 225, 247], "waveform": [3, 6, 7, 8, 9, 38, 225, 247, 576], "ambulatori": [3, 6, 7, 8, 9, 225, 247], "hemodynam": [3, 6, 7, 8, 9, 225, 247], "cardiac": [3, 6, 7, 8, 9, 225, 245, 247], "electrophysiologi": [3, 6, 7, 8, 9, 225, 247], "voic": [3, 6, 7, 8, 9, 225, 247], "audio": [3, 6, 7, 8, 9, 26, 225, 247], "arteri": [3, 6, 7, 8, 9, 225, 247], "puls": [3, 6, 7, 8, 9, 225, 247], "respiratori": [3, 6, 7, 8, 9, 225, 247], "multichannel": [3, 7, 8, 9], "routin": [3, 7, 8, 9, 225, 247], "scalp": [3, 7, 8, 9, 225, 247], "sleepelectroencephalogram": [3, 7, 8, 9], "electromyogram": [3, 7, 8, 9, 225, 247], "electrooculogram": [3, 7, 8, 9, 225, 247], "sleep": [3, 7, 8, 9, 38, 225, 247, 586], "electroencephalogram": [3, 7, 8, 9, 225, 247], "8": [3, 6, 7, 8, 9, 18, 73, 108, 110, 111, 166, 174, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 224, 225, 238, 247, 277, 292, 377, 416, 448, 453, 524, 537, 574, 576, 585, 587], "bodi": [3, 7, 8, 9, 225, 247], "posit": [3, 7, 8, 9, 154, 210, 224, 225, 247, 586], "11": [3, 6, 7, 8, 9, 166, 168, 189, 191, 207, 277, 289, 291, 310, 314, 360, 361, 407, 443, 461, 476, 514, 520, 525, 576], "softcopi": [3, 6, 7, 8, 9, 40, 225], "state": [3, 6, 7, 8, 9, 12, 13, 26, 40, 78, 88, 89, 92, 99, 103, 111, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 225, 537, 539, 549, 578, 581, 588], "pseudo": [3, 6, 7, 8, 9, 225], "blend": [3, 6, 7, 8, 9, 225], "xa": [3, 6, 7, 8, 9, 225, 237, 247], "xrf": [3, 6, 7, 8, 9, 225, 247], "planar": [3, 6, 7, 8, 9, 225], "mpr": [3, 6, 7, 8, 9, 225], "volumetr": [3, 6, 7, 8, 9, 40, 225], "composit": [3, 6, 7, 8, 9, 11, 26, 40, 225, 243, 567, 571, 572, 587], "advanc": [3, 6, 7, 8, 9, 36, 225], "render": [3, 6, 7, 8, 9, 225], "10": [3, 6, 7, 8, 9, 13, 26, 32, 85, 88, 92, 94, 97, 101, 103, 110, 111, 114, 166, 176, 189, 191, 205, 206, 210, 396, 446, 455, 476, 539, 576, 581], "segment": [3, 6, 7, 8, 9, 225, 247], "angiograph": [3, 6, 7, 8, 9, 225, 247], "radiofluoroscop": [3, 6, 7, 8, 9, 225, 247], "13": [3, 6, 7, 8, 9, 12, 110, 111, 202, 203, 206, 294, 295, 296, 298, 526, 527, 549, 576], "3d": [3, 6, 7, 8, 9, 85, 225, 247], "craniofaci": [3, 6, 7, 8, 9, 225, 247], "breast": [3, 6, 7, 8, 9, 225, 245, 247], "tomosynthesi": [3, 6, 7, 8, 9, 225, 247], "project": [3, 6, 7, 8, 9, 11, 225, 247], "intravascular": [3, 6, 7, 8, 9, 225], "optic": [3, 6, 7, 8, 9, 225, 247], "coher": [3, 6, 7, 8, 9, 225, 247], "tomographi": [3, 6, 7, 8, 9, 225, 247], "20": [3, 6, 7, 8, 9, 320, 321, 322, 408, 470, 483, 484, 561, 575, 576, 586], "nuclear": [3, 6, 7, 8, 9, 225, 247], "medicin": [3, 6, 7, 8, 9, 225, 247], "parametr": [3, 6, 7, 8, 9, 225, 247], "map": [3, 6, 7, 8, 9, 225, 247], "66": [3, 6, 7, 8, 9, 11, 323, 466, 475, 479, 480, 495, 498, 576], "raw": [3, 6, 7, 8, 9, 26, 38, 79, 80, 105, 225, 247, 580], "spatial": [3, 6, 7, 8, 9, 225, 247], "registr": [3, 6, 7, 8, 9, 225, 247, 531], "fiduci": [3, 6, 7, 8, 9, 225, 247], "deform": [3, 6, 7, 8, 9, 225, 247], "surfac": [3, 6, 7, 8, 9, 225, 247], "tractographi": [3, 6, 7, 8, 9, 225, 247], "67": [3, 6, 7, 8, 9, 467, 529, 576], "real": [3, 6, 7, 8, 9, 33, 225, 247, 580, 587], "world": [3, 6, 7, 8, 9, 225, 247, 580, 587], "68": [3, 6, 7, 8, 9, 465, 493, 494, 576], "scan": [3, 6, 7, 8, 9, 225, 247, 587], "mesh": [3, 6, 7, 8, 9, 225, 247], "point": [3, 6, 7, 8, 9, 39, 225, 247, 581], "cloud": [3, 6, 7, 8, 9, 225, 247], "77": [3, 6, 7, 8, 9, 324, 410, 411, 412, 414, 416, 482, 509, 510, 511, 512, 513, 516, 517, 518, 521, 522, 576], "vl": [3, 6, 7, 8, 9, 225, 247], "endoscop": [3, 6, 7, 8, 9, 225, 247], "video": [3, 6, 7, 8, 9, 85, 225, 247], "microscop": [3, 6, 7, 8, 9, 225, 247], "slide": [3, 6, 7, 8, 9, 225, 247], "coordin": [3, 6, 7, 8, 9, 51, 225, 247], "photograph": [3, 6, 7, 8, 9, 225, 247], "ophthalm": [3, 6, 7, 8, 9, 40, 225, 247], "photographi": [3, 6, 7, 8, 9, 225, 247], "16": [3, 6, 7, 8, 9, 18, 37, 82, 189, 191, 200, 211, 213, 218, 225, 247, 431, 432, 457, 545, 570, 576, 585], "stereometr": [3, 6, 7, 8, 9, 225, 247], "relationship": [3, 6, 7, 8, 9, 32, 225, 247, 587], "wide": [3, 6, 7, 8, 9, 225, 247, 587], "field": [3, 6, 7, 8, 9, 52, 53, 54, 55, 56, 57, 58, 59, 61, 108, 139, 140, 141, 142, 143, 156, 157, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 224, 225, 239, 247], "stereograph": [3, 6, 7, 8, 9, 225, 247], "en": [3, 6, 7, 8, 9, 225, 247], "face": [3, 6, 7, 8, 9, 225, 247], "analysi": [3, 6, 7, 8, 9, 225, 247], "whole": [3, 6, 7, 8, 9, 225, 247], "microscopi": [3, 6, 7, 8, 9, 225, 247], "dermoscop": [3, 7, 8, 9, 225, 247], "78": [3, 6, 7, 8, 9, 280, 377, 385, 390, 409, 481, 489, 519, 576], "lensometri": [3, 6, 7, 8, 9, 225, 247], "measur": [3, 6, 7, 8, 9, 40, 225, 247], "autorefract": [3, 6, 7, 8, 9, 225, 247], "keratometri": [3, 6, 7, 8, 9, 225, 247], "subject": [3, 6, 7, 8, 9, 225, 247], "refract": [3, 6, 7, 8, 9, 40, 225, 247], "visual": [3, 6, 7, 8, 9, 225, 247], "acuiti": [3, 6, 7, 8, 9, 225, 247], "spectacl": [3, 6, 7, 8, 9, 225, 247], "prescript": [3, 6, 7, 8, 9, 225, 247], "report": [3, 6, 7, 8, 9, 11, 32, 33, 40, 88, 97, 111, 114, 147, 155, 158, 225, 247, 271, 272, 273, 274, 275, 576, 580, 586, 587, 588], "axial": [3, 6, 7, 8, 9, 225, 247], "intraocular": [3, 6, 7, 8, 9, 225, 247], "len": [3, 6, 7, 8, 9, 35, 36, 37, 110, 225, 247, 585], "calcul": [3, 6, 7, 8, 9, 91, 100, 111, 225, 247, 560, 561, 563, 564, 571, 572], "79": [3, 6, 7, 8, 9, 393, 576], "macular": [3, 6, 7, 8, 9, 225, 247], "grid": [3, 6, 7, 8, 9, 225, 247], "thick": [3, 6, 7, 8, 9, 225, 247], "static": [3, 6, 7, 8, 9, 192, 193, 225, 247], "perimetri": [3, 6, 7, 8, 9, 225, 247], "82": [3, 6, 7, 8, 9, 319, 576], "corneal": [3, 6, 7, 8, 9, 225, 247], "topographi": [3, 6, 7, 8, 9, 225, 247], "88": [3, 6, 7, 8, 9, 222, 276, 289, 304, 305, 315, 316, 346, 350, 351, 375, 386, 394, 418, 425, 427, 437, 465, 477, 529, 576], "text": [3, 6, 7, 8, 9, 26, 73, 139, 140, 141, 142, 143, 225, 247, 580, 581], "sr": [3, 6, 7, 8, 9, 225, 247], "22": [3, 6, 7, 8, 9, 194, 222, 346, 463, 576], "33": [3, 6, 7, 8, 9, 316, 376, 395, 566, 567, 576], "comprehens": [3, 6, 7, 8, 9, 225, 247], "35": [3, 6, 7, 8, 9, 351, 576], "extens": [3, 6, 7, 8, 9, 225, 247], "40": [3, 6, 7, 8, 9, 222, 331, 332, 435, 436, 437, 558, 562, 576], "procedur": [3, 6, 8, 9, 11, 14, 16, 31, 40, 88, 91, 92, 97, 98, 100, 101, 103, 111, 225, 226, 229, 236, 237, 241, 249, 257, 272, 275, 558, 565, 577, 580, 587], "cad": [3, 6, 7, 8, 9, 225, 247], "59": [3, 6, 7, 8, 9, 386, 576], "document": [3, 6, 7, 8, 9, 11, 30, 32, 34, 35, 36, 37, 38, 39, 40, 73, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 155, 223, 225, 534, 549, 580, 581, 585, 586, 588], "65": [3, 6, 7, 8, 9, 11, 304, 576], "chest": [3, 6, 7, 8, 9, 225, 247], "radiat": [3, 6, 7, 8, 9, 225, 247, 574], "dose": [3, 6, 7, 8, 9, 225, 247], "radiopharmaceut": [3, 6, 7, 8, 9, 225, 247], "69": [3, 6, 7, 8, 9, 305, 576], "colon": [3, 6, 7, 8, 9, 225, 247], "implant": [3, 6, 7, 8, 9, 11, 40, 91, 98, 100, 111, 225, 232, 237, 247, 259, 565], "plan": [3, 6, 7, 8, 9, 13, 14, 16, 18, 92, 111, 225, 247, 574], "71": [3, 6, 7, 8, 9, 13, 276, 576], "72": [3, 6, 7, 8, 9, 477, 576], "simplifi": [3, 6, 7, 8, 9, 11, 13, 225, 247], "adult": [3, 6, 7, 8, 9, 225, 247], "73": [3, 6, 7, 8, 9, 418, 576], "74": [3, 6, 7, 8, 9, 189, 191, 427, 576], "agent": [3, 6, 7, 8, 9, 225], "administr": [3, 6, 7, 8, 9, 11, 40, 88, 98, 111, 225, 226, 248, 265, 558, 565], "75": [3, 6, 7, 8, 9, 425, 576], "perform": [3, 6, 7, 8, 9, 12, 14, 15, 26, 31, 40, 63, 65, 83, 88, 90, 91, 99, 100, 109, 111, 112, 198, 213, 216, 225, 236, 241, 272, 547, 560, 561, 563, 564, 565, 571, 572, 578, 581], "76": [3, 7, 8, 9, 350, 576], "content": [3, 6, 7, 8, 9, 18, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 225, 581, 590], "assess": [3, 6, 7, 8, 9, 225], "bulk": [3, 7, 8, 9, 26, 40, 225, 243, 247, 572], "simpl": [3, 7, 8, 9, 225, 247, 576, 578, 580, 590], "annot": [3, 6, 7, 8, 9, 33, 225, 240, 247, 570], "104": [3, 6, 7, 8, 9, 85, 335, 336, 337, 338, 339, 576, 581], "encapsul": [3, 6, 7, 8, 9, 225, 247], "pdf": [3, 6, 7, 8, 9, 225, 247], "cda": [3, 6, 7, 8, 9, 225, 247], "128": [3, 6, 7, 8, 9, 11, 18, 38, 110, 155, 247, 389, 428, 576, 580, 585, 586, 587, 590], "positron": [3, 6, 7, 8, 9, 225, 247], "emiss": [3, 6, 7, 8, 9, 225, 247], "echoscp": [4, 18, 40, 581], "echoscu": [4, 18, 40], "findscu": [4, 18, 40], "getscu": [4, 18, 40], "movescu": [4, 18, 24, 40], "storescp": [4, 6, 7, 18, 24, 40, 581], "storescu": [4, 18, 40, 580], "option": [5, 18, 26, 33, 34, 38, 39, 52, 61, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 189, 191, 197, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 252, 531, 538, 539, 542, 546, 547, 549, 559, 560, 561, 563, 564, 567, 570, 571, 572, 578, 586, 587, 588, 590], "queri": [5, 11, 16, 20, 25, 26, 29, 31, 40, 91, 98, 100, 111, 228, 229, 231, 232, 242, 243, 245, 248, 249, 262, 263, 265, 565, 578, 586, 587, 590], "dicom": [5, 14, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 50, 52, 60, 61, 66, 73, 74, 79, 80, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 114, 138, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 537, 549, 576, 579, 584, 585, 589, 590], "retriev": [5, 11, 16, 25, 26, 29, 30, 31, 32, 33, 40, 91, 98, 100, 111, 148, 228, 229, 231, 232, 236, 240, 241, 242, 243, 262, 565, 566, 568, 570, 586, 587, 590], "syntax": [5, 15, 16, 18, 73, 81, 85, 86, 110, 111, 150, 151, 155, 189, 191, 196, 202, 203, 208, 220, 221, 223, 238, 251, 253, 254, 549, 580, 581, 585, 590], "move": [6, 7, 11, 13, 14, 16, 18, 25, 26, 31, 40, 76, 77, 89, 100, 111, 114, 142, 143, 155, 158, 228, 229, 231, 232, 242, 243, 531, 534, 554, 581, 584, 586, 588], "destin": [6, 7, 13, 18, 36, 100, 111, 142, 155, 534, 560, 561, 563, 564, 571, 572, 586], "aem": 6, "aetitl": 6, "you": [6, 29, 33, 34, 35, 36, 38, 39, 40, 100, 108, 110, 191, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590], "also": [6, 33, 36, 38, 39, 40, 81, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 110, 114, 537, 580, 581, 583, 584, 585, 586, 587, 590], "11113": [6, 36, 585, 586], "configur": [6, 14, 18, 26, 33, 36, 111, 240, 540, 549, 570, 581], "ort": [6, 7], "stl": [6, 7, 8, 9, 225, 247], "pet": [6, 7, 8, 9, 225, 247], "130": [6, 7, 8, 9, 344, 576], "131": [6, 7, 8, 9, 288, 576], "structur": [6, 7, 8, 9, 40, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 247, 559, 580], "displai": [6, 7, 8, 9, 11, 31, 32, 33, 40, 101, 225, 230, 268, 565], "200": [6, 7, 8, 9, 299, 301, 439, 440, 441, 442, 523, 524, 569, 571, 576], "protocol": [6, 7, 8, 9, 11, 16, 32, 40, 52, 61, 91, 98, 100, 109, 111, 172, 189, 191, 213, 225, 229, 231, 237, 242, 257, 258, 261, 565, 580, 581], "481": [6, 7, 8, 9, 297, 298, 341, 345, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 470, 471, 496, 497, 576], "rt": [6, 7, 8, 9, 16, 40, 88, 92, 94, 97, 101, 103, 111, 225, 244, 247, 273, 565], "treatment": [6, 7, 8, 9, 225, 247, 574, 577], "record": [6, 7, 8, 9, 88, 225, 247, 558], "brachi": [6, 7, 8, 9, 225, 247], "summari": [6, 7, 8, 9, 225, 247, 581], "ion": [6, 7, 8, 9, 225, 244, 247, 574], "physician": [6, 7, 8, 9, 225, 247], "intent": [6, 7, 8, 9, 225, 247], "arm": [6, 7, 8, 9, 225, 247], "photon": [6, 7, 8, 9, 225, 247], "electron": [6, 7, 8, 9, 225, 247], "deliveri": [6, 7, 8, 9, 225, 247, 574], "instruct": [6, 7, 8, 9, 225, 247, 567, 580, 581], "setup": [6, 7, 8, 9, 113, 188, 189, 190, 191, 192, 193, 194, 225, 247], "allow": [7, 8, 11, 12, 13, 16, 20, 26, 27, 30, 32, 34, 35, 36, 39, 40, 78, 80, 82, 100, 110, 191, 196, 199, 200, 201, 205, 206, 207, 208, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 547, 554, 566, 567, 576, 581, 583, 585, 587, 590], "its": [7, 14, 18, 33, 34, 35, 36, 37, 52, 92, 103, 110, 111, 154, 195, 204, 213, 221, 570, 580, 581, 585, 586, 587], "have": [7, 11, 14, 16, 18, 26, 32, 33, 36, 81, 110, 111, 112, 155, 195, 202, 204, 212, 213, 214, 215, 220, 580, 581, 583, 585, 586, 587, 588, 590], "some": [7, 32, 38, 40, 75, 155, 580, 581, 586, 587, 588], "attribut": [7, 11, 13, 28, 29, 30, 32, 33, 34, 35, 36, 37, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 534, 537, 538, 539, 540, 541, 542, 566, 567, 568, 570, 574, 578, 580, 588, 590], "sqlite": 7, "In": [7, 13, 26, 32, 33, 34, 36, 38, 91, 100, 111, 196, 208, 224, 580, 581, 583, 584, 585, 587, 590], "addit": [7, 18, 73, 110, 111, 583, 585, 587, 588], "current": [7, 18, 30, 32, 33, 37, 40, 85, 88, 91, 92, 98, 99, 111, 112, 114, 152, 154, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 238, 538, 544, 558, 574, 581, 583, 586], "return": [7, 12, 13, 18, 25, 26, 30, 32, 33, 34, 35, 36, 38, 39, 83, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 238, 251, 252, 253, 254, 266, 473, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 554, 569, 576, 580, 581, 584, 585, 586, 588, 590], "standard": [7, 14, 18, 26, 32, 33, 37, 73, 74, 75, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 114, 138, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 537, 580, 581, 584, 585, 587, 590], "requir": [7, 9, 11, 13, 14, 16, 18, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 79, 80, 81, 88, 91, 92, 94, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 112, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 223, 224, 544, 578, 580, 581, 583, 585, 586, 587, 588], "sqlalchemi": [7, 583], "packag": [7, 40, 583], "which": [7, 11, 13, 14, 16, 18, 33, 34, 35, 36, 38, 40, 90, 91, 100, 104, 105, 108, 110, 111, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 158, 202, 205, 221, 537, 538, 539, 580, 581, 583, 584, 585, 586, 587, 588, 590], "custom": [7, 110, 554], "my_config": 7, "ini": [7, 24], "config": 7, "ilenam": 7, "exit": [7, 33], "ba": 7, "bind": [7, 14, 18, 26, 27, 33, 39, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 538, 539, 542, 580, 588], "ddress": 7, "locat": [7, 32], "clean": [7, 26], "remov": [7, 11, 12, 13, 14, 16, 18, 26, 110, 112, 155, 585, 588], "all": [7, 11, 12, 13, 14, 18, 25, 26, 33, 34, 35, 36, 38, 75, 81, 85, 110, 112, 114, 219, 225, 544, 545, 580, 581, 585, 586, 587, 588], "entri": [7, 88, 558], "delet": [7, 11, 33, 40, 88, 94, 111, 114, 146, 271, 273, 578, 586, 588], "format": [7, 29, 30, 32, 34, 35, 36, 37, 38, 39, 52, 61, 79, 106, 155, 168, 195, 204, 545, 586], "compat": [7, 85], "configpars": 7, "modul": [7, 11, 13, 14, 32, 50, 84, 531, 549, 557, 584], "contain": [7, 9, 16, 18, 26, 30, 32, 33, 34, 36, 38, 52, 54, 56, 59, 61, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 139, 140, 141, 142, 143, 155, 158, 189, 191, 195, 204, 211, 213, 220, 222, 225, 238, 247, 538, 567, 570, 580, 581, 585, 586, 587], "itself": [7, 32, 39, 238, 531, 548, 580, 581, 587], "while": [7, 8, 18, 84, 114, 164, 165, 183, 189, 580, 581, 583, 585, 586, 587, 590], "other": [7, 12, 32, 34, 35, 36, 38, 40, 81, 91, 100, 108, 110, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 197, 199, 200, 217, 218, 238, 581, 584, 585, 586, 587, 588], "assum": [7, 33, 81, 110, 111, 238, 538, 544, 580, 585, 586, 590], "definit": [7, 14, 112, 154, 196, 213, 254], "our": [7, 29, 32, 34, 35, 36, 37, 38, 580], "ae_titl": [7, 12, 16, 36, 110, 112, 538, 542, 581, 585, 586], "size": [7, 33, 38, 80, 88, 103, 110, 111, 112, 201, 219, 570, 581], "unlimit": [7, 38, 90, 110, 219, 590], "max_pdu": [7, 110], "second": [7, 100, 109, 110, 111, 154, 537, 538, 539, 580], "acse_timeout": [7, 13, 109, 110, 111], "dimse_timeout": [7, 14, 110, 111, 114], "network_timeout": [7, 13, 110, 111, 154, 538], "interfac": [7, 11, 539], "If": [7, 12, 14, 18, 30, 32, 35, 36, 38, 39, 40, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 158, 159, 162, 163, 164, 165, 166, 187, 202, 213, 216, 217, 218, 219, 221, 222, 223, 224, 238, 253, 254, 531, 533, 537, 538, 539, 542, 544, 546, 547, 548, 580, 581, 583, 585, 586, 587, 588, 590], "unset": [7, 538], "bind_address": [7, 13, 14, 110, 585], "instance_loc": 7, "sqlite3": 7, "database_loc": 7, "ascii": [7, 26, 73, 110, 112, 543, 548, 585], "pacs_scp": 7, "192": [7, 12], "168": 7, "obj": [7, 8, 9, 225, 247], "mtl": [7, 8, 9, 225, 247], "tomotherapeut": [7, 8, 9, 225, 247], "15": [7, 8, 9, 84, 208, 209, 281, 471, 570, 576], "robot": [7, 8, 9, 225, 247], "17": [7, 8, 9, 32, 189, 433, 434, 458, 576], "salvag": [7, 8, 9, 225], "18": [7, 8, 9, 110, 283, 496, 570, 576], "19": [7, 8, 9, 297, 576], "21": [7, 8, 9, 190, 459, 576], "prepar": [7, 8, 9, 33, 225, 247], "model": [7, 34, 35, 36, 37, 111, 227, 228, 229, 231, 232, 242, 243, 246, 560, 561, 563, 564, 571, 572, 589], "affect": [8, 9, 16, 20, 32, 33, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 580], "prioriti": [8, 9, 111, 140, 141, 142, 143, 580], "low": [8, 9, 33, 111, 140, 141, 142, 143, 580], "unless": [8, 12, 108, 110, 266, 538, 548, 587, 590], "path": [9, 26, 33, 34, 35, 36, 37, 38, 79, 80, 106, 111, 155, 580], "unsupport": 9, "check": [9, 13, 15, 18, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 74, 109, 110, 154, 172, 189, 537, 548, 580, 581, 585, 586], "ctimagestorag": [9, 32, 35, 38, 110, 576, 580, 585, 586, 588, 590], "rsp": [9, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "Being": [9, 13, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155], "To": [9, 13, 33, 84, 110, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 580, 581, 583, 584, 585, 586, 590], "transmit": 9, "r": [9, 92, 111], "recurs": 9, "search": [9, 34], "given": [9, 16, 18, 33, 73, 109, 155, 168, 213, 533, 554, 580], "cx": [9, 35, 580, 590], "By": [9, 581, 585, 588], "upstream": 11, "break": [11, 26, 580], "195": 11, "typo": 11, "sop": [11, 14, 16, 18, 20, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 73, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 110, 111, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 205, 206, 207, 211, 221, 222, 223, 224, 225, 226, 230, 233, 234, 236, 240, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 531, 532, 533, 549, 580, 581, 582, 585, 586, 588, 590], "class": [11, 13, 14, 16, 18, 20, 26, 28, 30, 32, 33, 34, 35, 36, 38, 39, 43, 44, 52, 70, 73, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 233, 234, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 549, 554, 580, 581, 582, 585, 586, 590], "bad": [11, 34, 35, 36, 37], "role": [11, 13, 35, 73, 81, 110, 111, 112, 205, 211, 221, 238, 252, 253, 254, 581, 586, 587, 589], "negoti": [11, 13, 18, 26, 33, 35, 73, 75, 87, 90, 95, 104, 105, 108, 109, 110, 111, 112, 189, 190, 191, 196, 205, 206, 207, 211, 216, 217, 218, 219, 221, 222, 223, 224, 238, 252, 253, 254, 549, 580, 581, 588, 589], "requestor": [11, 12, 13, 16, 21, 26, 35, 90, 104, 105, 109, 110, 111, 112, 171, 191, 203, 209, 210, 211, 213, 221, 224, 238, 252, 253, 254, 538, 581, 585, 586, 587, 589], "v1": [11, 12, 13, 14, 16, 18, 40, 586], "should": [11, 12, 13, 16, 26, 32, 33, 34, 52, 73, 79, 80, 83, 91, 98, 100, 110, 111, 189, 213, 531, 538, 539, 542, 545, 580, 581, 582, 585, 586, 588, 590], "consist": [11, 33, 52, 61, 191, 220, 580, 587, 590], "applicationent": [11, 111, 538, 540, 542, 549], "renam": 11, "scu_supported_sop": 11, "scp_supported_sop": 11, "transfer_syntax": [11, 12, 110, 202, 203, 208, 238, 239, 251, 585, 590], "presentation_contexts_scu": 11, "presentation_contexts_scp": 11, "scu_sop_class": 11, "scp_sop_class": 11, "bind_addr": [11, 13], "argument": [11, 12, 13, 16, 18, 88, 92, 94, 96, 97, 100, 101, 103, 106, 110, 111, 538, 539, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "network": [11, 12, 18, 26, 40, 110, 111, 154, 580, 586, 587], "adapt": [11, 581], "add_supported_context": [11, 12, 30, 32, 34, 35, 36, 37, 38, 39, 110, 531, 580, 584, 585, 586, 588, 590], "supported_context": [11, 26, 35, 36, 38, 110, 112, 585, 590], "remove_supported_context": [11, 110], "add_requested_context": [11, 12, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 110, 581, 585, 586, 590], "requested_context": [11, 26, 36, 38, 39, 110, 112, 585, 586, 590], "remove_requested_context": [11, 110], "verificationsopclass": [11, 26], "storagesopclasslist": 11, "queryretrievesopclasslist": 11, "verificationpresentationcontext": [11, 39, 110], "storagepresentationcontext": [11, 18, 35, 36, 38, 110, 585, 586], "queryretrievepresentationcontext": 11, "basicworklistmanagmentpresentationcontext": 11, "replac": [11, 14], "them": [11, 33, 46, 111, 148, 580, 581, 587, 590], "service_class": [11, 473, 531, 532, 549, 580, 584], "servic": [11, 12, 13, 14, 16, 18, 31, 51, 53, 62, 63, 64, 66, 73, 81, 87, 88, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 206, 207, 212, 213, 222, 223, 224, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 531, 532, 539, 549, 554, 580, 581, 585, 589, 590], "sop_class": [11, 16, 18, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 110, 251, 252, 549, 580, 584, 585, 586, 588, 590], "three": [11, 32, 221, 584, 588, 590], "been": [11, 13, 14, 16, 20, 26, 32, 34, 35, 36, 46, 81, 88, 91, 92, 94, 97, 98, 99, 100, 103, 106, 108, 109, 110, 111, 112, 150, 155, 189, 190, 192, 193, 194, 195, 202, 204, 238, 533, 538, 559, 560, 561, 563, 564, 567, 570, 571, 572, 573, 577, 578, 580, 581, 584, 586, 590], "consolid": [11, 13], "basicworklistmanagementserviceclass": [11, 98, 111, 549], "reimplement": 11, "separ": [11, 196, 197, 208, 548, 580], "sopclass": [11, 110, 251, 252, 533], "now": [11, 12, 13, 14, 16, 18, 20, 26, 110, 111, 114, 580, 581, 583], "inherit": 11, "rather": [11, 12, 13, 14, 16, 18, 26, 110, 111, 539, 580], "than": [11, 12, 13, 14, 16, 18, 26, 37, 80, 84, 88, 103, 110, 111, 191, 216, 218, 219, 238, 537, 539, 570, 573, 580, 581, 585, 590], "util": [11, 12, 549], "presentationcontextmanag": 11, "maximumlengthnegoti": 11, "maximumlengthnotif": [11, 110, 112, 201, 211, 213], "implementationclassuidnegoti": 11, "implementationclassuidnotif": [11, 110, 112, 199, 211, 213], "implementationversionnamenegoti": 11, "implementationversionamenotif": 11, "serviceclass": [11, 13, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 531, 532], "refactor": 11, "do": [11, 254, 580, 581, 583, 586, 588], "work": [11, 13, 26, 40, 197, 581], "independ": [11, 574], "send_abort": [11, 109], "send_ap_abort": [11, 109], "send_reject": [11, 109], "send_releas": [11, 109], "send_request": [11, 109], "send_accept": [11, 109], "method": [11, 13, 14, 16, 18, 20, 33, 36, 49, 52, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 534, 537, 538, 539, 540, 541, 542, 581, 585, 586, 587, 588, 590], "negotiate_associ": [11, 109], "release_associ": [11, 12, 13], "serviceus": [11, 26, 109, 111, 549], "less": [11, 216], "acceptor": [11, 12, 13, 14, 16, 18, 26, 104, 109, 110, 111, 112, 171, 189, 190, 191, 202, 210, 211, 213, 221, 224, 238, 253, 254, 538, 540, 580, 581, 585, 586, 587, 589], "track": [11, 32, 568], "pynetdicom3": 11, "on_c_": 11, "callback": [11, 14], "45": [11, 371, 372, 373, 374, 564, 569, 576], "54": [11, 576], "106": [11, 85], "contribut": 11, "issu": [11, 111, 161, 162, 166, 167, 169, 170, 172, 173, 174, 176, 183, 224, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577], "pr": 11, "guid": [11, 549, 577, 580, 581, 587, 588], "pep8": 11, "conform": [11, 14, 16, 26, 28, 29, 33, 35, 38, 74, 88, 92, 97, 101, 103, 106, 155, 219, 580, 581], "pynetdicom_implementation_vers": [11, 155], "pynetdicom_implementation_uid": [11, 155], "variabl": [11, 14, 26, 52, 61, 189, 191, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 534, 549, 584], "old": [11, 14, 26], "ones": [11, 580], "implementation_version_nam": [11, 110, 112, 200, 211, 218], "implementation_class_uid": [11, 110, 112, 199, 211, 213, 217], "dure": [11, 13, 14, 16, 18, 26, 35, 110, 112, 155, 163, 181, 182, 217, 219, 551, 580, 581, 585, 587], "per": [11, 13, 14, 16, 18, 33, 38, 205, 206, 207, 223, 238, 254, 585, 586, 587], "api": [11, 581], "refer": [11, 33, 78, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 114, 138, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 537, 548, 558, 580, 581, 587], "49": [11, 576], "relev": [11, 31, 40, 98, 111, 245, 263, 265, 565, 581], "hang": [11, 40, 91, 98, 100, 111, 231, 237, 258, 565], "substanc": [11, 40, 98, 111, 226, 248, 265, 558, 565], "palett": [11, 40, 91, 98, 100, 111, 228, 237, 256, 565], "templat": [11, 37, 40, 88, 91, 98, 100, 111, 232, 237, 259, 558, 565, 573], "defin": [11, 14, 26, 30, 33, 37, 40, 78, 81, 91, 98, 100, 111, 112, 196, 197, 207, 208, 223, 229, 237, 257, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 587, 590], "system": [11, 14, 31, 32, 40, 101, 230, 268, 565, 574, 580, 581, 588], "event": [11, 13, 14, 16, 18, 20, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 75, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 147, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 217, 218, 226, 249, 267, 271, 272, 273, 274, 275, 534, 538, 539, 542, 549, 554, 565, 584, 585, 587, 589], "action": [11, 33, 40, 88, 92, 99, 103, 111, 114, 144, 155, 158, 167, 168, 169, 170, 171, 172, 173, 174, 187, 267, 270, 271, 273, 274, 275, 549, 586, 588], "full": [11, 88, 570, 587], "asynchron": [11, 90, 112, 198, 211, 216, 581, 586, 587, 588], "window": [11, 13, 26, 84, 90, 112, 198, 211, 216, 581, 586, 587], "howev": [11, 29, 75, 81, 84, 98, 100, 111, 580, 581, 586, 587, 590], "doe": [11, 12, 88, 91, 92, 98, 100, 103, 106, 110, 111, 558, 559, 560, 561, 563, 564, 570, 571, 572, 573, 574, 577, 578, 580], "ident": [11, 95, 105, 108, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 189, 209, 210, 211, 216, 221, 222, 223, 224, 580, 581, 587, 588, 589], "common": [11, 32, 33, 73, 104, 112, 206, 211, 222, 224, 534, 581, 586, 587, 588], "null": [11, 205, 206, 207], "trail": [11, 26, 82, 155, 191, 205, 206, 207, 585], "pad": [11, 18, 26, 82, 155, 191, 196, 197, 205, 206, 207, 208], "handl": [11, 12, 14, 16, 18, 22, 26, 30, 34, 35, 36, 37, 38, 39, 40, 41, 109, 155, 224, 538, 540, 556, 580, 586, 587], "longer": [12, 14, 18, 25, 26, 74, 81, 88, 103, 110, 111, 191, 218, 538, 578, 581], "list": [12, 13, 14, 18, 25, 26, 30, 32, 33, 34, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 140, 141, 142, 143, 145, 148, 149, 152, 154, 155, 158, 189, 191, 194, 201, 203, 206, 211, 213, 220, 222, 238, 251, 253, 254, 538, 542, 545, 549, 566, 567, 568, 570, 574, 578, 580, 581, 585, 586, 587, 588, 590], "keyword": [12, 13, 16, 18, 26, 33, 36, 100, 109, 110, 111, 150, 151, 531, 538, 539, 580, 581, 584, 585, 586, 588, 590], "build_context": [12, 38, 585, 586, 590], "length": [12, 14, 18, 28, 54, 56, 59, 82, 112, 114, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 219, 580, 587], "193": 12, "dimsemessag": [12, 13, 114], "subclass": [12, 251, 252, 532, 533, 538, 542, 581], "creation": [12, 16, 33, 40, 88, 92, 97, 101, 111, 234, 270, 551, 556, 565, 578, 585], "primitive_to_messag": 12, "thread": [12, 13, 14, 26, 110, 111, 154, 542, 544, 581, 586], "safe": 12, "137": 12, "collis": [12, 16, 183], "being": [12, 13, 14, 15, 16, 18, 26, 28, 52, 90, 93, 99, 104, 105, 108, 111, 114, 155, 531, 546, 547, 581, 587, 590], "correctli": [12, 18, 28, 580, 581, 587], "269": 12, "bug": [12, 18, 534, 583], "fsm": [12, 13, 14, 99, 154, 549], "ar_8": 12, "aa_7": 12, "dul": [12, 14, 26, 51, 87, 102, 109, 111, 114, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 213, 549, 588], "primit": [12, 13, 26, 41, 46, 51, 63, 65, 87, 95, 111, 112, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 167, 172, 184, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 539, 541, 549, 588], "270": 12, "endlessli": 12, "didn": 12, "close": [12, 13, 17, 18, 107, 114, 160, 161, 162, 163, 164, 165, 170, 178, 180, 538, 539, 581, 586, 588], "wa": [12, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 140, 141, 142, 143, 155, 224, 559, 560, 561, 563, 564, 571, 572, 578, 580, 581, 585], "still": [12, 75, 81, 581, 585], "read": [12, 26, 38, 88, 91, 92, 97, 98, 100, 103, 106, 111, 539, 580, 586], "272": 12, "select_timeout": [12, 539], "how": [12, 37, 223, 224, 580, 581, 582, 584, 585, 586, 587, 590], "long": [12, 213], "block": [12, 13, 33, 36, 38, 39, 110, 114, 154, 538, 539, 580, 581, 586], "260": 12, "improv": [12, 13, 16, 18, 110], "cpu": 12, "usag": [12, 33, 79, 80, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "idl": [12, 111, 154, 160, 161, 162, 163, 171, 178, 180], "60": [12, 38, 110, 576, 581], "quit": [12, 13], "deprec": [12, 13, 14, 16, 18], "stop": [12, 13, 14, 18, 36, 110, 154, 163, 172, 180, 537, 586], "context_id": [12, 111, 114, 195, 202, 203, 204, 238, 239, 590], "_global": 12, "frequent": [12, 581], "global": 12, "constant": [12, 534], "validate_ae_titl": 12, "require_calling_aet": [12, 110], "take": [12, 13, 14, 26, 99, 110, 114, 539, 580, 581, 584, 585, 590], "require_called_aet": [12, 110], "bool": [12, 74, 76, 77, 78, 79, 80, 81, 82, 83, 108, 109, 110, 111, 112, 114, 150, 151, 154, 155, 156, 157, 210, 221, 224, 238, 252, 253, 254, 537, 539, 546, 547, 548], "fals": [12, 13, 14, 33, 35, 36, 38, 74, 76, 77, 78, 79, 80, 81, 82, 91, 98, 100, 108, 109, 110, 111, 114, 150, 151, 154, 155, 156, 157, 221, 224, 238, 252, 537, 539, 547, 548, 580, 585, 586, 590], "184": 12, "is_releas": [12, 13, 111], "is_release_request": [12, 109], "negotiate_releas": [12, 109], "expir": [13, 18, 114, 154, 160, 537, 581, 586], "286": 13, "propag": 13, "actual": [13, 33, 34, 35, 111, 155, 580, 581], "timer": [13, 26, 84, 154, 160, 163, 166, 172, 180, 549], "properli": [13, 14, 17, 18], "within": [13, 33, 36, 52, 61, 88, 91, 92, 97, 98, 100, 101, 103, 106, 111, 114, 554, 574, 583, 586, 587, 588], "yield": [13, 16, 18, 34, 35, 36, 37, 91, 98, 100, 110, 111, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578, 588], "expect": [13, 26, 84, 581, 588], "119": 13, "befor": [13, 18, 26, 110, 154, 155, 196, 197, 208, 537, 580, 586, 588], "120": 13, "293": 13, "_config": [13, 14, 16, 18, 549, 588], "abil": [13, 18, 26, 100], "skip": [13, 32, 34, 35, 36, 38, 155, 546, 580], "decod": [13, 16, 18, 26, 38, 73, 79, 80, 88, 91, 92, 95, 97, 98, 100, 103, 106, 111, 114, 155, 158, 189, 543, 549, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 587, 588], "step": [13, 14, 16, 31, 33, 35, 38, 40, 88, 92, 97, 98, 101, 103, 111, 171, 236, 241, 249, 272, 275, 565, 585], "decode_store_dataset": [13, 14, 16], "282": 13, "robust": [13, 18], "transport": [13, 51, 107, 110, 111, 154, 167, 180, 549], "42": [13, 189, 191, 490, 491, 492, 558, 576, 577], "associationsocket": [13, 18, 26, 109, 111, 154, 549], "wrap": [13, 110, 154, 538, 539, 542, 544, 586], "client": [13, 110, 538, 540, 542, 556, 586], "socket": [13, 17, 18, 93, 109, 110, 111, 154, 538, 539, 540, 542, 585, 586], "integr": [13, 539], "machin": [13, 16, 26, 40, 88, 92, 94, 97, 99, 101, 103, 111, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 244, 273, 537, 539, 549, 565, 588], "particular": [13, 26, 36, 196, 208, 559, 580, 587], "emit": [13, 539], "evt17": [13, 162, 163, 180, 539, 541], "204": 13, "associationserv": [13, 14, 18, 26, 33, 110, 540, 542, 549, 588], "threadedassociationserv": [13, 110, 540, 549, 586], "ae_1": 13, "evt2": [13, 168, 541], "trivial": 13, "manner": [13, 91, 98, 111, 586], "start_serv": [13, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 110, 580, 584, 585, 586, 588, 590], "shutdown": [13, 36, 38, 110, 538, 539, 586], "server": [13, 17, 108, 110, 205, 209, 224, 538, 540, 542, 556, 585, 586], "mai": [13, 18, 29, 30, 32, 33, 35, 73, 84, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 189, 196, 208, 211, 216, 218, 221, 222, 223, 224, 238, 531, 537, 546, 547, 548, 566, 578, 580, 581, 583, 584, 585, 586, 587, 590], "tl": [13, 18, 21, 26, 110, 538, 539, 542, 581], "via": [13, 36, 88, 91, 100, 110, 111, 578, 580, 586, 590], "tls_arg": [13, 110, 539, 586], "ssl_context": [13, 110, 538, 542, 586], "175": 13, "over": [13, 18, 33, 35, 36, 38, 39, 91, 93, 100, 111, 581], "181": 13, "dimseserviceprovid": [13, 14, 16, 46, 111], "get_msg": [13, 114], "receive_primit": [13, 114], "peek_msg": [13, 114], "msg_queue": [13, 114], "significantli": 13, "cancel": [13, 26, 34, 35, 36, 88, 91, 98, 100, 111, 114, 138, 155, 534, 559, 560, 561, 563, 564, 567, 571, 572, 573, 577, 578], "is_cancel": [13, 34, 35, 36, 91, 98, 100, 155, 158], "whether": [13, 18, 36, 110, 224, 581, 585, 587], "ha": [13, 20, 26, 30, 32, 34, 35, 36, 37, 39, 46, 52, 83, 88, 91, 92, 94, 97, 98, 99, 100, 103, 106, 108, 109, 110, 111, 112, 114, 150, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 253, 254, 533, 537, 538, 539, 559, 560, 561, 563, 564, 567, 569, 570, 571, 572, 573, 576, 577, 578, 580, 581, 586, 587, 588], "pass": [13, 16, 18, 26, 27, 36, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 158, 538, 542, 544, 586, 588], "on_c_get": [13, 16], "on_c_find": [13, 16], "on_c_mov": [13, 16], "callabl": [13, 83, 110, 111, 158, 538, 542, 544, 580, 588], "function": [13, 14, 18, 30, 33, 37, 40, 83, 110, 111, 114, 158, 213, 224, 538, 542, 544, 549, 580, 584, 585, 588, 590], "threadtyp": 13, "timestamp": [13, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 155, 588], "build_rol": [13, 35, 586, 590], "properti": [13, 14, 16, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 109, 110, 111, 112, 114, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 473, 537, 538, 539, 540, 541, 581, 585, 586, 587, 588], "local_socket": [13, 14], "active_associ": [13, 110, 538], "activ": [13, 84, 110, 581, 583, 586], "synchron": 13, "until": [13, 111, 114, 154, 155, 537, 538, 539, 581, 586], "108": [13, 85], "receive_msg": 13, "send_c_cancel_get": [13, 14], "send_c_cancel_find": [13, 14], "send_c_cancel_mov": [13, 14], "send_c_cancel": [13, 26, 111], "on_c_get_cancel": 13, "on_c_find_cancel": 13, "on_c_move_cancel": 13, "except": [14, 16, 26, 36, 88, 91, 92, 97, 98, 100, 103, 106, 114, 155, 158, 534, 547, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581, 585, 588, 590], "rais": [14, 16, 88, 91, 92, 94, 97, 98, 100, 103, 106, 109, 110, 111, 112, 155, 158, 187, 195, 204, 216, 217, 218, 219, 221, 222, 223, 224, 533, 547, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 585, 586, 588], "gener": [14, 30, 32, 37, 73, 111, 112, 206, 222, 224, 225, 232, 237, 245, 247, 537, 541, 554, 564, 580, 581, 585, 586, 587, 590], "aa_4": 14, "aa_8": 14, "iter": [14, 91, 98, 100, 111], "just": [14, 18, 33, 38, 580, 581, 586], "re": [14, 35, 38, 40, 74, 155, 196, 208, 580, 581, 585, 586, 587, 590], "315": 14, "nullhandl": 14, "321": 14, "unifi": [14, 16, 40, 88, 92, 97, 98, 101, 103, 111, 249, 275, 565], "memori": [14, 26, 79, 80, 92, 103, 111, 570], "leak": [14, 26], "caus": [14, 62, 66, 580], "keep": [14, 581, 583], "around": [14, 38, 84], "thei": [14, 74, 106, 112, 196, 197, 205, 208, 221, 554, 580, 581, 585, 587, 590], "di": 14, "328": 14, "handler": [14, 16, 18, 24, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 155, 158, 266, 538, 540, 542, 549, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 585, 589], "_handler": 14, "unbind": [14, 111, 538, 586, 588], "get_handl": [14, 18, 111, 538], "get_ev": [14, 111, 538], "assoc": [14, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 154, 155, 158, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 539, 581, 585, 586, 588, 590], "enforce_uid_conform": [14, 548, 549], "determin": [14, 18, 34, 35, 111, 539, 580], "meet": [14, 26, 29, 37, 585], "rule": [14, 196, 197, 203, 205, 206, 207, 208, 238, 548, 581, 587, 590], "316": 14, "322": 14, "56": [14, 576], "init": 14, "maximum_pdu_s": [14, 38, 110, 114], "due": [15, 16, 18, 26, 64, 91, 98, 100, 110, 111, 224, 534, 581], "valid": [15, 18, 26, 73, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 112, 187, 213, 266, 531, 546, 547, 548, 549, 554, 560, 561, 563, 564, 571, 572, 578, 585, 587], "transfer": [15, 16, 18, 28, 34, 35, 38, 73, 85, 86, 110, 111, 150, 151, 155, 185, 186, 189, 191, 202, 203, 208, 220, 238, 251, 253, 254, 549, 558, 569, 576, 580, 581, 585, 590], "342": [15, 16], "were": [16, 18, 91, 98, 100, 111, 148, 571, 572, 581, 585], "failur": [16, 25, 26, 32, 34, 35, 36, 37, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 224, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 586], "checkpoint": 16, "reactor": [16, 26, 111, 154, 540], "prevent": 16, "race": [16, 18], "condit": [16, 18, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 212, 213, 214, 215, 220, 585], "send_": [16, 18, 581], "move_destin": [16, 36, 100, 155], "evt": [16, 18, 30, 32, 33, 34, 35, 36, 37, 38, 39, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 155, 266, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 584, 585, 586, 588], "evt_c_mov": [16, 18, 36, 100, 156, 554, 560, 561, 563, 564, 571, 572, 586, 588], "action_typ": [16, 88, 111, 155], "evt_n_act": [16, 88, 156, 586, 588], "event_typ": [16, 97, 111, 155], "evt_n_event_report": [16, 33, 97, 156, 586, 588], "353": 16, "meta_uid": [16, 33, 111], "send_n_": [16, 20], "meta": [16, 33, 35, 38, 80, 106, 111, 155, 205, 221, 240, 580, 590], "approv": [16, 40, 91, 98, 100, 111, 237, 242, 248, 261, 565], "327": 16, "notif": [16, 32, 33, 36, 39, 40, 92, 97, 111, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 217, 218, 219, 233, 236, 241, 538, 549, 565, 568, 580, 589], "media": [16, 40, 88, 92, 97, 101, 111, 155, 234, 235, 270, 565, 580], "verif": [16, 26, 31, 40, 88, 92, 94, 96, 97, 101, 103, 110, 111, 244, 250, 251, 266, 273, 565, 581, 585, 586, 587, 588, 590], "commit": [16, 40, 88, 97, 246, 274, 565], "361": 16, "invalid": [16, 29, 30, 32, 34, 35, 36, 37, 38, 39, 88, 91, 92, 94, 97, 100, 101, 103, 106, 109, 111, 143, 159, 165, 166, 214, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 587], "0000": [16, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 155, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581], "1030": 16, "origin": [16, 25, 26, 91, 100, 111, 143, 254, 544, 571, 572], "on_c_stor": 16, "on_c_echo": 16, "on_n_get": 16, "on_async_ops_window": 16, "on_sop_class_common_extend": 16, "on_sop_class_extend": 16, "on_user_ident": 16, "on_association_accept": 16, "on_association_reject": 16, "on_association_releas": 16, "on_association_abort": 16, "on_send_dimse_messag": 16, "on_receive_dimse_messag": 16, "send_c_find": [16, 18, 29, 34, 37, 98, 111, 586], "send_c_get": [16, 18, 35, 91, 111, 586], "send_c_mov": [16, 18, 36, 100, 111, 586], "query_model": [16, 26, 111], "string": [16, 18, 73, 108, 110, 111, 112, 142, 152, 153, 189, 195, 196, 197, 200, 202, 204, 208, 210, 213, 224, 238, 543, 545, 546, 580], "348": 16, "descript": [16, 32, 139, 140, 141, 142, 143, 156, 157, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 588], "382": [17, 18], "last": [18, 196, 197, 208, 580], "seriou": 18, "year": 18, "394": 18, "abl": [18, 208, 580, 581, 584, 587, 590], "414": 18, "implantationplansrdocumentstorag": 18, "implantationplansrstorag": [18, 576], "436": 18, "exchang": [18, 46, 52, 61, 66, 206, 207, 222, 223, 224, 580, 581, 587, 588], "435": 18, "propos": [18, 35, 110, 112, 203, 213, 238, 252, 253, 581, 585, 586, 587, 590], "445": 18, "worklist": [18, 31, 32, 40, 98, 111, 227, 255, 565, 578], "462": 18, "invalideventerror": 18, "two": [18, 33, 43, 44, 63, 65, 110, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 213, 217, 218, 254, 580, 581, 585, 587, 588], "trigger": [18, 87, 89, 93, 99, 102, 107, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 549, 580], "460": 18, "encod": [18, 38, 52, 60, 73, 80, 95, 105, 108, 111, 114, 150, 154, 155, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 543, 549, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578, 580, 581, 587, 588, 590], "482": 18, "use_short_dimse_aet": [18, 549], "charact": [18, 74, 139, 140, 141, 142, 143, 152, 191, 196, 197, 200, 208, 213, 218, 548, 585, 587], "403": 18, "hasn": [18, 110, 584, 587, 588], "rj": [18, 26, 51, 52, 170, 172, 174, 190, 213, 581], "408": 18, "message_id": [18, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 155], "well": [18, 30, 33, 549, 581, 586, 587, 588, 590], "intervent": [18, 111, 156, 158, 538, 549, 580, 586, 589], "2019e": 18, "424": 18, "allstoragepresentationcontext": [18, 38, 580, 585], "overhaul": 18, "app": [18, 24, 28, 213], "toi": [18, 30, 32, 34, 35, 36, 37, 586], "invok": [18, 90, 111, 112, 198, 216], "command": [18, 26, 33, 195, 204, 581, 583], "line": [18, 580, 581], "appnam": 18, "g": [18, 33, 208, 587], "extra": [18, 35, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 538, 542, 586, 588], "evt_nam": 18, "arg": [18, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 538, 542, 586], "447": 18, "make_serv": [18, 110], "453": 18, "request_handl": [18, 538, 542], "hook": [18, 158], "455": 18, "customis": [18, 26, 73, 83, 100, 534], "conveni": [18, 112, 585, 590], "compar": [18, 110], "454": 18, "requesthandl": [18, 549], "prefer": 18, "exact": [18, 80, 98, 110, 111], "472": 18, "log_request_identifi": [18, 549], "log_response_identifi": [18, 549], "control": [18, 36, 41, 52, 61, 109, 111, 195, 204, 585], "pretty_dataset": 18, "pretty_el": 18, "pretti": [18, 152, 153, 580], "output": [18, 545, 580, 581], "kwarg": [18, 36, 100, 110], "dict": [18, 36, 83, 100, 104, 105, 111, 112, 114, 155, 158, 211, 253, 254], "initi": [18, 26, 33, 53, 92, 100, 111, 172, 191, 193, 213, 214, 567, 581, 587], "directli": [18, 26, 38, 580, 590], "offici": [18, 587], "immedi": [18, 154], "430": 18, "abort_typ": [18, 109], "is_abort": [18, 109, 111], "tupl": [18, 27, 73, 83, 88, 90, 92, 97, 98, 100, 101, 103, 108, 110, 111, 112, 114, 213, 220, 238, 253, 254, 538, 539, 540, 541, 542, 580, 585, 586, 588], "encode_el": 18, "default_transfer_syntax": [18, 110], "openssl": [18, 586], "364": 18, "switch": 19, "493": 19, "push": [20, 246, 249, 578], "watch": [20, 249, 578], "509": 20, "ssl": [21, 26, 110, 538, 539, 542, 586], "528": [21, 26], "reserv": [22, 28, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 587], "0x01": [22, 52, 109, 189, 191, 238, 254], "561": 22, "previou": [23, 26, 32, 92, 103, 111, 155, 570, 580], "final": [23, 25, 26, 32, 88, 91, 95, 98, 100, 111, 578, 580, 590], "571": [23, 26], "579": 24, "581": 24, "miss": [24, 32, 92, 103, 111, 534, 566, 567, 568, 570, 574, 578, 580], "583": 24, "577": [25, 26], "541": [25, 26], "major": 26, "simpli": [26, 33], "space": [26, 82, 155, 189, 191, 585], "strip": 26, "overlai": 26, "sampl": 26, "curv": 26, "608": 26, "636": 26, "681": 26, "682": 26, "garbag": 26, "collect": [26, 111, 580], "669": 26, "721": 26, "653": 26, "send_c_stor": [26, 38, 80, 106, 111, 581, 586], "517": 26, "pars": [26, 155], "554": 26, "592": 26, "connection_timeout": [26, 110], "616": 26, "2021e": 26, "hint": 26, "diagnost": [26, 109, 188, 190, 213], "633": 26, "make": [26, 28, 34, 63, 81, 114, 254, 541, 575, 580, 581, 583, 586, 587], "easier": [26, 28, 254, 590], "535": 26, "codec": [26, 549], "611": 26, "515": 26, "549": 26, "windows_timer_resolut": [26, 549], "resolut": [26, 84], "620": 26, "pass_contextvar": [26, 544, 549], "contextu": [26, 78], "behavior": [26, 78], "store_send_chunked_dataset": [26, 111, 549], "chunk": [26, 79, 80], "reduc": [26, 38, 110], "store_recv_chunked_dataset": [26, 28, 106, 155, 549], "unrestricted_storage_servic": [26, 549], "unrestrict": 26, "505": 26, "651": 26, "network_timeout_respons": [26, 111], "normal": [26, 33, 109, 111], "expiri": [26, 111, 537], "619": 26, "minimum": [26, 33, 84, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 110, 111, 112, 570, 580, 588], "680": [26, 587], "dulserviceprovid": [26, 51, 109, 111, 114, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "t_connect": [26, 27, 539, 549], "revert": 27, "test": [28, 32, 33, 189, 254, 581, 586], "746": 28, "756": 28, "785": 28, "sanit": 28, "filenam": [28, 35, 38], "823": 28, "register_uid": [28, 584], "regist": [28, 40, 196, 208, 531, 582, 587], "privat": [28, 81, 196, 208, 531, 584, 587, 590], "public": [28, 81, 531, 584], "799": 28, "preliminari": 28, "mechan": [29, 32, 34, 35, 36, 37, 38, 46, 575, 587], "access": [29, 37, 155, 559, 560, 561, 562, 563, 564, 571, 580, 581, 585, 588, 589], "anoth": [29, 39, 566, 569, 576, 580], "accomplish": [29, 34, 35, 36, 37, 38, 579, 587, 590], "utilis": [29, 33, 38], "ctscanner": 29, "5th": 29, "octob": 29, "2018": 29, "chang": [29, 80, 84, 88, 89, 100, 109, 110, 111, 112, 114, 150, 151, 155, 538, 539, 578, 580, 581, 583, 586], "statement": [29, 33, 581], "approach": [29, 34, 35, 36, 585], "veri": [29, 34, 35, 36, 37, 580, 581, 590], "similar": [29, 581, 585, 586], "bwm": 29, "differ": [29, 88, 110, 213, 266, 558, 581, 585, 586, 587, 588, 590], "import": [29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 155, 216, 217, 218, 221, 222, 223, 224, 251, 531, 534, 580, 581, 584, 585, 586, 588, 589, 590], "debug_logg": [29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 580, 581, 586], "modalityworklistinformationfind": [29, 559], "scheduledprocedurestepsequ": 29, "scheduledstationaetitl": 29, "scheduledprocedurestepstartd": 29, "20181005": 29, "is_establish": [29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 110, 111, 581, 586], "0x": [29, 30, 32, 34, 35, 36, 37, 38, 39], "04x": [29, 30, 32, 34, 35, 36, 37, 38, 39], "els": [29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 544, 581], "out": [29, 30, 32, 34, 35, 36, 37, 38, 39, 91, 92, 98, 100, 103, 106, 111, 114, 154, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581], "never": [29, 30, 32, 34, 35, 36, 37, 38, 39, 537, 538, 539, 581], "subsystem": 30, "displaysystem": [30, 562], "displaysysteminst": 30, "code_to_categori": [30, 32, 549], "attributelist": [30, 145, 148, 149], "attr_list": [30, 32, 33], "send_n_get": [30, 33, 101, 111, 586], "0x0008": 30, "0x0070": 30, "known": [30, 33, 36, 100, 111, 549, 581], "succeed": [30, 32, 38, 39, 541], "categori": [30, 32, 88, 91, 92, 97, 98, 101, 103, 111, 535, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581], "repres": [30, 32, 34, 35, 36, 37, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 198, 208, 580, 587, 590], "0070": 30, "evt_n_get": [30, 101, 156, 586, 588], "my_cod": [30, 585], "create_attribute_list": 30, "def": [30, 32, 33, 34, 35, 36, 37, 38, 39, 83, 534, 580, 584, 585, 586, 588], "handle_get": [30, 35], "attr": [30, 155, 158], "attributeidentifierlist": [30, 148], "outsid": [30, 37, 92, 103, 111, 224, 570, 585], "scope": [30, 37, 224, 585, 587], "we": [30, 33, 34, 35, 36, 38, 39, 159, 254, 580, 581, 583, 586, 588], "pretend": 30, "evt_handl": [30, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 538, 542, 580, 584, 585, 586, 588], "through": [32, 34, 35, 36, 37, 63, 65, 213, 580, 581, 585, 586, 587, 588, 590], "notifi": [32, 210, 566, 580, 581, 588], "usual": [32, 36, 81, 111, 189, 580, 581, 583, 587, 588, 590], "combin": [32, 88, 103, 111, 570, 585, 587], "ri": 32, "pac": 32, "typic": [32, 581, 590], "generate_uid": [32, 33], "modalityperformedprocedurestep": [32, 568], "ct_study_uid": 32, "mpps_instance_uid": 32, "build_attr_list": 32, "scheduledstepattributessequ": 32, "step_seq": 32, "studyinstanceuid": [32, 34, 35, 36], "referencedstudysequ": 32, "accessionnumb": 32, "requestedprocedureid": 32, "requestedproceduredescript": 32, "scheduledprocedurestepid": 32, "scheduledprocedurestepdescript": 32, "scheduledprocedureprotocolcodesequ": 32, "123456": 32, "patientbirthd": 32, "20000101": 32, "patientsex": 32, "referencedpatientsequ": 32, "performedprocedurestepid": 32, "performedstationaetitl": 32, "somea": 32, "performedstationnam": 32, "station": 32, "performedloc": 32, "performedprocedurestepstartd": 32, "performedprocedurestepstarttim": 32, "1200": 32, "performedprocedurestepstatu": 32, "IN": [32, 88, 103, 111, 578], "progress": [32, 88, 103, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 567, 578, 581], "performedprocedurestepdescript": 32, "performedproceduretypedescript": 32, "performedprocedurecodesequ": 32, "performedprocedurestependd": 32, "performedprocedurestependtim": 32, "studyid": 32, "performedprotocolcodesequ": 32, "performedseriessequ": 32, "send_n_creat": [32, 33, 92, 111, 586], "modif": [32, 92, 103, 111, 149, 155, 158, 578], "0040": 32, "0252": 32, "continu": [32, 91, 98, 100, 111, 225, 247, 534, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578, 580, 581], "seri": [32, 34, 35, 36, 587], "ten": 32, "ct_series_uid": 32, "ct_instance_uid": 32, "ii": [32, 91, 98, 100, 111], "rang": [32, 92, 103, 111, 554, 566, 567, 568, 570, 574, 578, 580], "build_mod_list": 32, "series_inst": 32, "sop_inst": 32, "series_seq": 32, "performingphysiciannam": 32, "protocolnam": 32, "operatornam": 32, "seriesinstanceuid": [32, 35, 36], "seriesdescript": 32, "referencedimagesequ": 32, "img_seq": 32, "img_d": 32, "referencedsopclassuid": [32, 33], "referencedsopinstanceuid": [32, 33], "append": [32, 34, 35, 36, 37, 155, 238, 545, 586], "referencednonimagecompositesopinstancesequ": 32, "final_d": 32, "1300": 32, "again": [32, 581], "send_n_set": [32, 33, 103, 111, 586], "evt_n_creat": [32, 92, 156, 586, 588], "evt_n_set": [32, 103, 156, 586, 588], "managed_inst": 32, "handle_cr": 32, "must": [32, 33, 36, 37, 54, 56, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 110, 111, 114, 211, 213, 215, 217, 219, 224, 531, 580, 581, 584, 585, 586, 587, 588, 590], "req": [32, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 213, 238, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 580], "affectedsopinstanceuid": [32, 38, 143, 144, 145, 146, 147, 148, 149, 580], "0x0106": [32, 92, 103, 111, 566, 567, 568, 570, 574, 578], "duplic": [32, 88, 92, 94, 96, 97, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "0x0111": [32, 92, 566, 567, 568, 570, 574, 578], "attribute_list": [32, 92, 111, 155, 158], "0x0120": [32, 92, 566, 567, 568, 570, 574, 578], "upper": [32, 52, 60, 61, 64, 111, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 212, 537, 549, 581], "annex": [32, 37, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 111, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 221, 222, 223, 224, 238, 576, 581, 585], "sopclassuid": [32, 33], "sopinstanceuid": [32, 33, 35, 38, 580, 584], "handle_set": 32, "requestedsopinstanceuid": [32, 144, 146, 148, 149], "0x0112": [32, 88, 94, 97, 101, 103, 111, 558, 562, 567, 568, 570, 574, 575, 578], "mod_list": 32, "facilit": [33, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 581], "There": [33, 37, 92, 103, 111, 570, 580, 581, 585, 586, 587, 590], "shall": [33, 34, 35, 54, 56, 59, 62, 63, 64, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 189, 196, 197, 200, 208, 212, 213, 214, 215, 220, 221, 224, 587], "film": [33, 88, 92, 103, 111, 240, 570, 587], "session": [33, 88, 92, 103, 111, 213, 240, 570], "box": [33, 88, 92, 103, 111, 240, 570], "greyscal": 33, "printer": [33, 92, 103, 111, 240, 570], "describ": [33, 190, 202, 581], "sheet": 33, "area": [33, 580], "colour": 33, "monitor": [33, 537, 581], "under": [33, 34, 35, 36, 37, 88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 114, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 558, 580, 583], "job": [33, 88, 240, 570, 587], "execut": [33, 187], "automat": [33, 580, 581], "characterist": [33, 248], "lut": [33, 225, 240, 570], "each": [33, 34, 35, 52, 110, 111, 195, 199, 200, 201, 204, 205, 213, 217, 218, 219, 220, 221, 222, 223, 238, 253, 538, 542, 545, 548, 559, 580, 581, 585, 587, 588, 590], "termin": [33, 91, 98, 100, 111, 534, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578, 580, 581], "hierarchi": [33, 88, 570], "next": [33, 36, 99, 114, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "evt_n_report": 33, "bound": [33, 39, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 158, 266, 538, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 586, 588], "minim": [33, 585], "manual": [33, 585], "mandatori": [33, 52, 53, 54, 55, 56, 57, 58, 59, 61, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 212, 213, 214, 215, 220, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "onto": 33, "a4": 33, "page": [33, 88, 570, 580, 585], "life": 33, "would": [33, 110, 581, 586], "medium": [33, 111, 140, 141, 142, 143], "layout": 33, "etc": [33, 75, 155, 208, 576, 587], "alwai": [33, 52, 60, 81, 90, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 266, 537, 580, 586, 590], "sy": 33, "dcmread": [33, 34, 35, 36, 37, 38, 111], "basicgrayscaleprintmanagementmeta": [33, 570], "basicfilmsess": [33, 570], "basicfilmbox": [33, 570], "basicgrayscaleimagebox": [33, 570], "printerinst": 33, "build_sess": 33, "numberofcopi": 33, "printprior": 33, "mediumtyp": 33, "paper": 33, "filmdestin": 33, "somewher": 33, "filmsessionlabel": 33, "lo": 33, "memoryalloc": 33, "ownerid": 33, "sh": 33, "build_film_box": 33, "imagedisplayformat": 33, "filmorient": 33, "portrait": 33, "filmsizeid": 33, "referencedfilmsessionsequ": 33, "build_image_box": 33, "im": 33, "imageboxposit": 33, "zero": 33, "referencedimageboxsequ": 33, "samplesperpixel": 33, "photometricinterpret": 33, "row": 33, "bitsalloc": 33, "bitsstor": 33, "highbit": 33, "pixelrepresent": 33, "handle_n_": 33, "2110": 33, "ensur": [33, 35, 38, 74, 580], "0x21100010": 33, "0x21100020": 33, "getattr": [33, 580], "printerstatu": 33, "readi": [33, 216, 217, 218, 219, 221, 222, 223, 224, 538, 539], "film_sess": 33, "film_box": 33, "image_box": 33, "action_repli": [33, 111], "send_n_act": [33, 88, 111, 586], "occur": [33, 35, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 155, 158, 538, 542, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 580, 581, 586, 588], "send_n_delet": [33, 94, 111, 586], "tabl": [34, 110, 111, 168, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 588, 590], "specif": [34, 88, 92, 97, 98, 101, 103, 110, 111, 155, 196, 203, 206, 207, 223, 538, 554, 573, 580, 581, 587], "effect": [34, 35, 110], "individu": [34, 35, 587], "patientrootqueryretrieveinformationmodelfind": [34, 572], "variou": [34, 581], "1234567": [34, 35, 36, 37], "sopclassesinstudi": 34, "wai": [34, 35, 36, 37, 110, 580, 583, 585, 587, 588], "realiti": [34, 35, 36, 37], "probabl": [34, 35, 36, 37], "best": [34, 35, 36, 37], "databas": [34, 35, 36, 37], "taken": [34, 35, 36, 114, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220], "evt_c_find": [34, 37, 98, 156, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578, 586, 588], "handle_find": [34, 37], "fdir": [34, 35, 36, 37], "fpath": [34, 35, 36, 37], "listdir": [34, 35, 36, 37], "join": [34, 35, 36, 37, 580], "0xc000": [34, 35, 36, 91, 98, 100, 106, 111, 534, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581], "inst": [34, 35, 36, 37], "0xfe00": [34, 35, 36, 91, 98, 100, 111, 534, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "vice": 35, "versa": 35, "belong": [35, 36, 81, 585], "go": [35, 38, 178, 180, 581], "recommend": [35, 38, 581, 583], "evt_c_stor": [35, 36, 38, 79, 106, 111, 155, 156, 554, 569, 576, 580, 584, 586, 588], "patientrootqueryretrieveinformationmodelget": [35, 572, 586], "handle_stor": [35, 36, 38, 534, 580, 584, 586, 588], "file_meta": [35, 38, 106, 155, 580, 584], "save": [35, 38, 106, 155, 580, 581], "save_a": [35, 38, 155, 534, 580, 584], "write_like_origin": [35, 38, 155, 580], "scp_role": [35, 110, 205, 221, 238, 252, 585, 586, 590], "suppli": [35, 91, 98, 110, 111, 539, 585, 586, 590], "uniqu": [35, 36, 580, 587], "abov": [35, 238, 585, 586], "ext_neg": [35, 110, 211, 586, 590], "evt_c_get": [35, 91, 156, 554, 560, 561, 563, 564, 571, 572, 586, 588], "total": [35, 36, 91, 196, 197, 208, 585, 587], "scu_rol": [35, 110, 205, 221, 238, 252, 585, 590], "know": [36, 580], "0xa801": [36, 100, 111, 534, 560, 561, 563, 564, 571, 572], "store_scp": [36, 586], "patientrootqueryretrieveinformationmodelmov": [36, 572], "rememb": [36, 581], "11120": 36, "our_store_scp": 36, "handle_mov": 36, "get_known_aet": 36, "known_aet_dict": 36, "try": [36, 110, 534, 539, 580, 581], "keyerror": 36, "unknown": [36, 81, 88, 100, 111, 534, 535, 560, 561, 563, 564, 571, 572, 578], "tailor": 36, "generalrelevantpatientinformationqueri": [37, 573], "contenttemplatesequ": 37, "tid": 37, "9007": 37, "9000": 37, "mappingresourc": 37, "dcmr": 37, "templateidentifi": 37, "Its": 37, "note": [37, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 238, 531, 586], "Not": [37, 94, 96, 100, 101, 106, 111, 212, 213, 214, 215, 220, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 574, 576, 578], "good": [37, 586], "everyth": [37, 581], "base": [37, 91, 100, 111, 532, 571, 572, 587], "off": [37, 114], "create_templ": 37, "elif": 37, "0xc100": [37, 111, 573], "essenc": 38, "want": [38, 254, 580, 581, 583, 586, 587], "look": [38, 580, 581], "Of": 38, "cours": 38, "rare": 38, "someon": 38, "inbuilt": [38, 39, 110], "mani": [38, 79, 80, 581, 587], "basi": [38, 585, 586], "mrimagestorag": [38, 576, 585, 590], "ct_context": 38, "mr_context": 38, "optimis": 38, "speed": 38, "increas": [38, 110, 253, 254], "25": [38, 192, 454], "decreas": 38, "filewrit": [38, 155, 580], "write_file_meta_info": [38, 155, 580], "open": [38, 107, 155, 580, 581, 586, 588], "wb": [38, 155, 580], "preambl": [38, 580], "prefix": [38, 545, 580, 581], "dicm": [38, 155, 580], "getvalu": [38, 155, 580], "As": [38, 80, 90, 111, 238, 580, 581, 585, 587, 590], "interest": [38, 581, 583, 586], "anyth": [38, 580, 581, 586, 588], "zzzz": 38, "commun": [39, 110, 111, 154, 196, 199, 200, 205, 208, 217, 218, 219, 539, 556, 578, 579, 581, 587], "between": [39, 44, 46, 51, 52, 61, 63, 65, 111, 213, 217, 218, 223, 238, 579, 580, 581, 587, 588, 590], "mostli": 39, "troubleshoot": 39, "particularli": 39, "fundament": 39, "evt_pdu_recv": [39, 102, 157, 588], "evt_data_recv": [39, 93, 157, 588], "send_c_echo": [39, 96, 111, 581, 586], "reli": [39, 217, 218, 580], "evt_c_echo": [39, 96, 155, 156, 266, 586, 588], "your": [39, 40, 582, 583, 584, 585, 586], "own": [39, 195, 204, 581, 584, 585, 586, 587, 588], "handle_echo": [39, 588], "pure": 40, "easi": [40, 580], "instal": [40, 580, 581, 582], "intend": [40, 217, 218, 238, 581, 585, 586, 590], "overview": 40, "pynetdcom": 40, "concept": [40, 589], "cover": 40, "mpp": 40, "bundl": 40, "v2": 40, "task": [41, 559], "made": [41, 53, 54, 55, 56, 57, 58, 59, 78, 84, 111, 206, 580, 585, 586, 587], "represent": [43, 44, 111, 155, 156, 157, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 216, 217, 218, 219, 221, 222, 223, 224, 238, 239, 580, 585], "main": [43, 44, 85, 89, 111, 154, 580, 590], "dimse_primit": [46, 114, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 549], "c_cancel": [46, 114], "c_echo": [46, 96, 111, 114, 266], "c_find": [46, 98, 111, 114, 255, 262, 263, 265, 275], "c_get": [46, 91, 111, 114, 262], "c_move": [46, 100, 111, 114, 262], "c_store": [46, 106, 111, 114, 264], "n_action": [46, 88, 111, 114, 267, 270, 271, 273, 274, 275], "n_creat": [46, 92, 111, 114, 269, 270, 271, 272, 273, 275], "n_delet": [46, 94, 111, 114, 271, 273], "n_event_report": [46, 97, 111, 114, 271, 272, 273, 274, 275], "n_get": [46, 101, 111, 114, 268, 270, 271, 272, 273, 275], "n_set": [46, 103, 111, 114, 271, 272, 273, 275], "dimse_messag": [46, 114, 549], "c_cancel_rq": [46, 114], "c_echo_rq": [46, 95, 114], "c_echo_rsp": [46, 95, 114], "c_find_rq": [46, 95, 114], "c_find_rsp": [46, 95, 114], "c_get_rq": [46, 95, 114], "c_get_rsp": [46, 95, 114], "c_move_rq": [46, 95, 114], "c_move_rsp": [46, 95, 114], "c_store_rq": [46, 95, 114], "c_store_rsp": [46, 95, 114], "n_action_rq": [46, 95, 114], "n_action_rsp": [46, 95, 114], "n_create_rq": [46, 95, 114], "n_create_rsp": [46, 95, 114], "n_delete_rq": [46, 95, 114], "n_delete_rsp": [46, 95, 114], "n_event_report_rq": [46, 95, 114], "n_event_report_rsp": [46, 95, 114], "n_get_rq": [46, 95, 114], "n_get_rsp": [46, 95, 114], "n_set_rq": [46, 95, 114], "n_set_rsp": [46, 95, 114], "interact": 51, "pdu_primit": [51, 112, 114, 154, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 205, 206, 207, 209, 210, 252, 541, 549, 586, 590], "tf": [51, 52, 181, 182, 185, 186, 194], "rp": [51, 52, 176, 192], "pdu_item": [51, 189, 191, 216, 217, 218, 219, 221, 222, 223, 224, 549], "applicationcontextitem": 51, "presentationcontextitemrq": [51, 191, 254], "presentationcontextitemac": [51, 189, 254], "userinformationitem": [51, 189, 191], "abstractsyntaxsubitem": 51, "transfersyntaxsubitem": 51, "maximumlengthsubitem": [51, 219], "implementationclassuidsubitem": [51, 217], "implementationversionnamesubitem": [51, 218], "scp_scu_roleselectionsubitem": [51, 211, 221], "asynchronousoperationswindowsubitem": [51, 211, 216], "useridentitysubitemrq": [51, 211, 224], "useridentitysubitemac": [51, 211, 224], "sopclassextendednegotiationsubitem": [51, 211, 223], "sopclasscommonextendednegotiationsubitem": [51, 211, 222], "presentationdatavalueitem": [51, 194], "unit": [52, 61], "layer": [52, 60, 61, 64, 111, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 212, 537, 549, 581], "construct": [52, 61], "fix": [52, 61, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 580], "seven": 52, "binari": 52, "prior": [52, 111, 112, 574, 590], "0x02": [52, 109, 189, 238, 254], "0x03": [52, 109, 190, 238, 254], "0x04": [52, 109, 194, 238, 254], "0x05": [52, 109, 193], "0x06": [52, 109, 188, 192], "0x07": [52, 109, 188], "exist": [54, 56, 88, 92, 98, 101, 103, 110, 111, 570, 574, 578, 580, 585, 586], "abnorm": [62, 64, 109], "indic": [63, 65, 90, 100, 108, 111, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 161, 166, 172, 177, 181, 183, 186, 189, 190, 212, 213, 214, 215, 219, 220, 224, 545, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 580, 581, 585, 590], "confirm": [63, 65, 108, 114, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 168, 169, 170, 176, 178, 192, 213, 215, 580, 585], "signal": [64, 202], "problem": [64, 217, 218], "below": [64, 588], "grace": 65, "finit": 69, "826": [70, 72, 581, 587], "3680043": [70, 72, 581, 587], "3811": [70, 72, 581, 587], "0002": [70, 71, 111, 155, 580, 590], "0012": [70, 155, 580], "pynetdicom_210": 71, "0013": [71, 155], "iso": [73, 196, 197, 200, 208, 543, 548, 585, 587], "646": [73, 196, 197, 200, 208, 543, 548, 585], "fallback": 73, "unexpect": [73, 109, 214], "behaviour": [73, 581], "abstract": [73, 81, 110, 191, 196, 202, 203, 208, 220, 221, 223, 238, 251, 253, 254, 580, 581, 585, 590], "appear": 73, "utf": [73, 108, 224], "enforc": 74, "otherwis": [74, 82, 83, 91, 98, 100, 108, 109, 110, 111, 112, 114, 154, 202, 221, 224, 238, 252, 253, 254, 537, 538, 539, 542, 546, 547, 548, 586], "64": [74, 139, 140, 141, 142, 143, 196, 197, 208, 548, 576, 587], "certain": [75, 554, 588], "concurr": [78, 79, 80], "contextvar": [78, 544], "caller": 78, "modifi": [78, 149, 580, 581], "could": [78, 172, 581], "filter": 78, "logger": [78, 586], "extern": 78, "minimis": [79, 80], "temporari": [79, 109, 213], "dataset_path": [79, 106, 155], "amount": [79, 80, 110], "larg": [79, 80, 110], "larger": [80, 88, 103, 111, 570], "load": 80, "necessari": [81, 91, 98, 100, 197, 585, 587, 590], "appli": [81, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 546, 547, 548, 583], "treat": 81, "short": [82, 584], "validate_a": 83, "ui": [83, 580], "validate_ui": 83, "signatur": 83, "func": 83, "msg": [83, 586], "feedback": 83, "about": [83, 99, 111, 112, 213, 577, 580, 581, 587, 590], "why": 83, "my_valid": 83, "microsoft": 84, "millisecond": 84, "mean": [84, 110, 537, 581, 586], "slower": 84, "counteract": 84, "ctype": 84, "94": 85, "95": 85, "100": 85, "101": 85, "102": 85, "103": 85, "105": 85, "107": 85, "retir": [85, 86], "jpip": 85, "referenc": [85, 92, 103, 111, 574], "mpeg2": 85, "profil": 85, "high": [85, 111, 140, 141, 142, 143], "mpeg": 85, "avc": 85, "h": [85, 88, 92, 94, 97, 101, 103, 111], "264": 85, "bd": 85, "2d": 85, "stereo": 85, "hevc": 85, "265": 85, "evt_acse_recv": [87, 157, 588], "evt_acse_s": [87, 157, 588], "notificationev": [87, 89, 93, 95, 99, 102, 107, 110, 111, 155, 158, 538, 542, 549], "a_associ": [87, 112, 154, 189, 190, 191, 541], "a_releas": [87, 154, 192, 193], "a_abort": [87, 154, 188], "a_p_abort": [87, 154, 188], "datetim": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 155, 588], "0x0110": [88, 92, 94, 97, 101, 103, 111, 562, 566, 567, 568, 570, 574, 575, 578], "0x0114": [88, 97, 111, 558, 567, 568, 570, 574, 575, 578], "0x0115": [88, 97, 111, 558, 567, 568, 570, 574, 575, 578], "0x0117": [88, 92, 94, 97, 101, 103, 106, 111, 558, 562, 566, 567, 568, 569, 570, 574, 575, 576, 578], "0x0118": [88, 92, 94, 97, 101, 103, 111, 558, 562, 566, 567, 568, 570, 574, 575, 578], "0x0119": [88, 94, 97, 101, 103, 111, 558, 562, 567, 568, 570, 574, 575, 578], "conflict": [88, 94, 97, 101, 103, 111, 558, 562, 567, 568, 570, 574, 575, 578], "0x0123": [88, 111, 558, 567, 570, 574, 575, 578], "0x0124": [88, 92, 94, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578], "authoris": [88, 92, 94, 100, 101, 103, 106, 111, 224, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578], "0x0210": [88, 92, 94, 96, 97, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "invoc": [88, 90, 92, 94, 96, 97, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "0x0211": [88, 92, 94, 96, 97, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "unrecognis": [88, 92, 94, 96, 97, 100, 101, 103, 106, 109, 111, 214, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "0x0212": [88, 92, 94, 96, 97, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "mistyp": [88, 92, 94, 96, 97, 100, 101, 103, 106, 111, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579], "0x0213": [88, 92, 94, 97, 101, 103, 111, 558, 562, 566, 567, 568, 570, 574, 575, 578], "resourc": [88, 91, 92, 94, 97, 98, 100, 101, 103, 106, 111, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "0xc101": [88, 558], "0xc102": [88, 558], "0xc103": [88, 558], "cannot": [88, 92, 106, 111, 142, 213, 238, 558, 567, 569, 574, 576, 578, 580, 581], "0xc104": [88, 558], "inconsist": [88, 558], "0xc10e": [88, 558], "medic": [88, 558, 580, 587], "0xc110": [88, 558], "admiss": [88, 558], "0038": [88, 558], "0xc111": [88, 558], "0xc112": [88, 101, 103, 111, 574], "0xc300": [88, 103, 111, 554, 578], "0xc301": [88, 103, 111, 578], "transact": [88, 103, 111, 578], "0xc302": [88, 578], "alreadi": [88, 92, 110, 111, 567, 574, 578, 580, 581], "0xc303": [88, 578], "schedul": [88, 92, 111, 578], "0xc304": [88, 578], "met": [88, 544, 578], "0xc307": [88, 101, 103, 111, 578], "0xc308": [88, 578], "0xc310": [88, 103, 111, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "yet": [88, 112, 537, 578, 584], "0xc311": [88, 98, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "0xc312": [88, 554, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "contact": [88, 578], "0xc313": [88, 578], "choos": [88, 578, 590], "0xc314": [88, 578], "0xc315": [88, 578], "0xc600": [88, 570], "0xc601": [88, 570], "queue": [88, 114, 154, 539, 570], "0xc602": [88, 570], "0xc603": [88, 103, 111, 570], "0xc613": [88, 103, 111, 570], "0xb101": [88, 558], "synchronis": [88, 558], "0xb102": [88, 558], "coercion": [88, 106, 111, 558, 576], "0xb104": [88, 558], "0xb301": [88, 578], "lock": [88, 111, 578], "grant": [88, 578], "0xb304": [88, 578], "0xb306": [88, 578], "0xb601": [88, 570], "collat": [88, 570], "0xb602": [88, 570], "0xb603": [88, 570], "0xb604": [88, 103, 111, 570], "demagnifi": [88, 103, 111, 570], "0xb609": [88, 103, 111, 570], "crop": [88, 103, 111, 570], "fit": [88, 103, 111, 570], "0xb60a": [88, 103, 111, 570], "decim": [88, 103, 111, 570], "presentationcontexttupl": [88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 238], "interventionev": [88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 155, 158, 538, 542, 549], "action_inform": [88, 155, 158], "defer": [88, 91, 92, 97, 98, 100, 103, 106, 155, 580], "0900": [88, 91, 92, 94, 96, 97, 98, 100, 101, 103, 106, 111, 554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580, 581], "repli": [88, 90, 97, 108, 111, 144, 147, 159, 238, 581], "notimplementederror": [88, 92, 94, 97, 103, 106, 195, 204, 533, 580], "applicationeventloggingserviceclass": [88, 111, 549], "mediacreationmanagementserviceclass": [88, 92, 101, 111, 549], "printmanagementserviceclass": [88, 92, 94, 97, 101, 103, 111, 549], "rtmachineverificationserviceclass": [88, 92, 94, 97, 101, 103, 111, 549], "storagecommitmentserviceclass": [88, 97, 111, 549], "unifiedprocedurestepserviceclass": [88, 92, 97, 98, 101, 103, 111, 549], "j": [88, 97, 111], "cc": [88, 92, 97, 98, 101, 103, 111], "dd": [88, 92, 94, 97, 101, 103, 111], "evt_accept": [89, 157, 586, 588], "evt_establish": [89, 157, 588], "evt_reject": [89, 157, 588], "evt_request": [89, 157, 588], "evt_releas": [89, 157, 588], "evt_abort": [89, 157, 588], "evt_async_op": [90, 156, 588], "regardless": 90, "0xc411": [91, 554, 560, 561, 563, 564, 571, 572], "0xa701": [91, 100, 111, 560, 561, 563, 564, 571, 572], "0xa702": [91, 100, 111, 560, 561, 563, 564, 571, 572], "0xa900": [91, 98, 100, 106, 111, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578], "0xaa00": [91, 100, 111, 571, 572], "0xaa01": [91, 100, 111, 571, 572], "0xaa02": [91, 100, 111, 571, 572], "extract": [91, 100, 111, 571, 572], "0xaa03": [91, 100, 111, 571, 572], "0xaa04": [91, 100, 111, 571, 572], "0xcfff": [91, 98, 100, 106, 111, 559, 560, 561, 563, 564, 571, 572, 576, 577, 578, 580], "0xb000": [91, 106, 111, 560, 561, 563, 564, 571, 572, 576], "0058": [91, 100, 111], "although": [91, 100, 224], "queryretrieveserviceclass": [91, 98, 100, 111, 531, 549, 584], "hangingprotocolqueryretrieveserviceclass": [91, 98, 100, 111, 549], "definedprocedureprotocolqueryretrieveserviceclass": [91, 98, 100, 111, 549], "colorpalettequeryretrieveserviceclass": [91, 98, 100, 111, 549], "implanttemplatequeryretrieveserviceclass": [91, 98, 100, 111, 549], "protocolapprovalqueryretrieveserviceclass": [91, 98, 100, 111, 549], "y": [91, 100, 111], "z": [91, 111], "bb": [91, 98, 100, 111], "hh": [91, 98, 100, 111], "0x0105": [92, 103, 111, 566, 567, 568, 570, 574, 578], "0x0107": [92, 101, 111, 562, 566, 567, 568, 570, 574, 578], "0x0116": [92, 103, 111, 566, 567, 568, 570, 574, 578], "0x0121": [92, 103, 111, 566, 567, 568, 570, 574, 578], "0xa510": [92, 111, 567], "0xc221": [92, 111, 574], "fraction": [92, 103, 111, 574], "0xc222": [92, 111, 574], "0xc223": [92, 111, 574], "0xc227": [92, 111, 574], "0xc309": [92, 111, 578], "0xc616": [92, 103, 111, 570], "0xb300": [92, 111, 578], "THE": [92, 111], "0xb600": [92, 103, 111, 570], "alloc": [92, 103, 111, 570], "0xb605": [92, 103, 111, 570], "min": [92, 103, 111, 570], "densiti": [92, 103, 111, 570], "respect": [92, 103, 111, 217, 218, 570], "instanceavailabilitynotificationserviceclass": [92, 111, 549], "procedurestepserviceclass": [92, 97, 101, 103, 111, 549], "evt_data_s": [93, 157, 588], "evt_n_delet": [94, 156, 586, 588], "evt_dimse_recv": [95, 157, 588], "evt_dimse_s": [95, 157, 588], "0x0122": [96, 100, 106, 111, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579], "verificationserviceclass": [96, 111, 549], "0x0113": [97, 111, 568, 570, 574, 575, 578], "event_inform": [97, 155, 158], "send_n_event_report": [97, 111, 586], "0xa700": [98, 106, 111, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578], "0xff01": [98, 111, 559, 560, 561, 563, 564, 571, 572, 578], "vual": 98, "relevantpatientinformationqueryserviceclass": [98, 111, 549], "substanceadministrationqueryserviceclass": [98, 111, 549], "evt_fsm_transit": [99, 157, 588], "current_st": [99, 187], "fsm_event": 99, "transit": [99, 187, 588], "next_stat": 99, "0xc511": [100, 554, 560, 561, 563, 564, 571, 572], "noth": [100, 581], "0x0001": [101, 103, 111, 155, 567, 578], "attribute_identifi": [101, 155], "basetag": [101, 111, 148, 155], "displaysystemmanagementserviceclass": [101, 111, 549], "ee": [101, 111], "evt_pdu_s": [102, 157, 588], "a_associate_rq": 102, "a_associate_rj": 102, "a_associate_ac": 102, "a_release_rq": 102, "a_release_rp": 102, "a_abort_rq": 102, "p_data_tf": 102, "0xc224": [103, 111, 574], "0xc225": [103, 111, 574], "accessori": [103, 111, 574], "0xc226": [103, 111, 574], "0xc605": [103, 111, 570], "insuffici": [103, 111, 570], "0xb305": [103, 111, 578], "coerc": [103, 111, 578], "modification_list": [103, 155, 158], "sopclasscommonextendednegoti": [104, 110, 112, 206, 211, 213], "evt_sop_common": [104, 156, 588], "evt_sop_extend": [105, 156, 588], "app_info": [105, 207], "0xc211": [106, 554, 569, 576, 580], "0xb006": [106, 111, 576], "discard": [106, 111, 576], "0xb007": [106, 111, 576], "0xa7ff": [106, 111, 576], "0xa9ff": [106, 111, 576], "understand": [106, 111, 569, 576, 580, 581], "pathlib": [106, 111, 155], "storageserviceclass": [106, 111, 531, 549, 584], "nonpatientobjectstorageserviceclass": [106, 111, 549], "gg": [106, 111], "evt_conn_open": [107, 157, 586, 588], "evt_conn_clos": [107, 157, 586, 588], "host": [107, 110, 538, 539, 540, 542, 585, 586], "evt_user_id": [108, 156, 585, 588], "even": [108, 580, 581, 585], "primary_field": [108, 224, 586], "primari": [108, 210, 224], "usernam": [108, 224, 585, 586], "kerbero": [108, 224, 585], "ticket": [108, 224, 585], "json": [108, 224, 585], "web": [108, 224, 585], "token": [108, 224, 585], "user_id_typ": 108, "secondary_field": [108, 224, 586], "Will": [108, 155, 191, 266], "form": [108, 196, 197, 206, 208, 585, 587], "passcod": [108, 224], "saml": [108, 224, 585], "assert": [108, 224, 585, 588], "is_verifi": [108, 585], "wish": [108, 110, 191, 581, 585, 588, 590], "proce": [108, 224], "__init__": [109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 238, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 473, 534, 537, 538, 539, 540, 541, 542], "parent": [109, 111, 112, 114, 154, 538, 539, 540, 542, 586], "0x00": [109, 206, 238, 254], "valueerror": [109, 110, 111, 187, 216, 217, 218, 219, 221, 222, 223, 224, 547, 581, 585, 586], "transient": [109, 213], "congest": [109, 213], "exceed": [109, 213, 581], "is_respons": 109, "union": [110, 154, 587], "abstract_syntax": [110, 196, 203, 238, 239, 251, 580, 586, 590], "presentationcontext": [110, 111, 112, 202, 203, 213, 239, 251, 253, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 538, 542, 585, 590], "implicitvrlittleendian": [110, 585, 590], "explicitvrlittleendian": [110, 580, 585], "explicitvrbigendian": [110, 585], "implementationversionnamenotif": [110, 112, 200, 211, 213], "asynchronousoperationswindownegoti": [110, 112, 198, 211, 213], "scp_scu_roleselectionnegoti": [110, 112, 205, 211, 213, 252, 253, 590], "sopclassextendednegoti": [110, 112, 207, 211, 213], "useridentitynegoti": [110, 112, 209, 210, 211, 213, 586], "sslcontext": [110, 538, 539, 542, 586], "pdv": [110, 112, 195, 204, 220], "16832": 110, "userinform": 110, "server_hostnam": [110, 539, 586], "wrap_socket": [110, 538, 539, 586], "evt_": 110, "At": [110, 112], "runtimeerror": [110, 111, 112, 586], "settimeout": [110, 538], "phase": [110, 581], "server_class": 110, "_t": 110, "constructor": 110, "maximum_associ": 110, "simultan": 110, "throughput": 110, "overhead": 110, "alon": 110, "entir": [110, 581, 585], "kept": 110, "least": [110, 111, 112, 213, 580, 581, 588, 590], "require_match": 110, "is_reject": 111, "won": [111, 590], "begin": [111, 112], "assign": [111, 554], "set_socket": 111, "accepted_context": 111, "namedtupl": [111, 155, 238, 239, 538, 588], "is_acceptor": [111, 112], "is_requestor": [111, 112], "kill": [111, 154], "allocate_lock": 111, "rejected_context": 111, "run_reactor": [111, 154], "msg_id": 111, "65535": 111, "inclus": [111, 548, 590], "shouldn": [111, 585], "0xc200": [111, 554, 573], "come": [111, 580, 581, 584, 587, 588], "guarante": [111, 189, 191, 587], "move_aet": 111, "henc": 111, "nomin": 111, "originator_aet": 111, "originator_id": 111, "attributeerror": [111, 155], "0016": 111, "0018": [111, 580], "class_uid": 111, "instance_uid": 111, "1008": [111, 155], "0003": [111, 155, 580], "1001": 111, "1000": 111, "1002": [111, 155], "event_repli": 111, "identifier_list": 111, "1005": [111, 155], "suffici": 112, "consid": [112, 548, 590], "maximum_length": [112, 211], "necessarili": 112, "accepted_common_extend": 112, "identif": [112, 199, 200, 206, 217, 218, 222, 586, 587], "add_negotiation_item": 112, "serviceparamet": 112, "typeerror": [112, 216, 218, 219, 221, 222, 223, 224], "asynchronous_oper": 112, "extended_negoti": 112, "get_context": 112, "cx_type": 112, "pcdl": 112, "pcdrl": 112, "remove_negotiation_item": 112, "reset_negotiation_item": 112, "clear": [112, 114, 585, 586], "role_select": [112, 211], "sop_class_common_extend": 112, "sop_class_extend": 112, "user_ident": [112, 211, 586], "user_inform": [112, 189, 191, 213], "writeabl": 112, "cancel_rq": 114, "messageidbeingrespondedto": [114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "hold": 114, "period": 114, "p_data": [114, 154, 194], "split": [114, 581], "sequenti": 114, "send_msg": 114, "ind": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "equal": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 219, 224], "left": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 538], "mf": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 212, 213, 214, 215, 220], "uf": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 212, 213, 214, 215, 220], "conf": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "comment": [139, 140, 141, 142, 143], "messageid": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "distinguish": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "outstand": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 216], "affectedsopclassuid": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "errorcom": [139, 140, 141, 142, 143], "detect": [139, 140, 141, 142, 143], "offend": [140, 141, 142, 143], "offendingel": [140, 141, 142, 143], "bytesio": [140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 545], "io": [140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 545], "op": [141, 142], "numberofcompletedsuboper": [141, 142], "suboper": [141, 142], "numberoffailedsuboper": [141, 142], "numberofremainingsuboper": [141, 142], "numberofwarningsuboper": [141, 142], "movedestin": 142, "moveoriginatorapplicationentitytitl": 143, "th": 143, "moveoriginatormessageid": 143, "actioninform": 144, "actionrepli": 144, "actiontypeid": 144, "requestedsopclassuid": [144, 146, 148, 149], "eventinform": 147, "eventrepli": 147, "eventtypeid": 147, "modificationlist": 149, "bytestr": [150, 545], "is_implicit_vr": [150, 151], "is_little_endian": [150, 151], "byestr": 150, "scheme": [151, 587], "indent": 152, "indent_char": 152, "beautifi": [152, 153], "elem": 153, "datael": 153, "dataelem": 153, "artim_tim": 154, "artim": [154, 160, 163, 166, 171, 172, 180, 537], "to_provider_queu": 154, "to_user_queu": 154, "event_queu": [154, 539], "queu": 154, "state_machin": 154, "statemachin": 154, "idle_timer_expir": 154, "kill_dul": 154, "peek_next_pdu": 154, "receive_pdu": 154, "most": [154, 580], "loop": [154, 538], "constantli": 154, "categoris": 154, "send_pdu": 154, "place": [154, 195, 204], "stop_dul": 154, "sta1": [154, 160, 161, 162, 163, 167, 170, 171, 178, 180, 187], "dynam": 155, "slightli": [155, 580], "therefor": [155, 585, 587], "proper": 155, "filemetadataset": 155, "0001": [155, 580], "suitabl": [155, 542, 586, 587], "0110": 155, "0600": 155, "is_intervent": [156, 157], "is_notif": [156, 157], "alia": [156, 157, 239], "special": [158, 581], "_is_cancel": 158, "caught": [158, 588], "aa": [159, 160, 161, 162, 163, 164, 165, 166], "sta2": [159, 160, 163, 171, 172], "evt3": [159, 164, 166, 169], "evt4": [159, 164, 166, 170], "evt10": [159, 164, 166, 181, 186], "evt12": [159, 164, 166, 177, 183], "evt13": [159, 164, 166, 176, 178], "evt19": [159, 165, 166, 187], "sta3": [159, 161, 162, 166, 172, 173, 174], "sta5": [159, 161, 162, 168, 169, 170], "sta6": [159, 161, 162, 169, 173, 175, 177, 185, 186], "sta7": [159, 161, 162, 175, 178, 181, 183], "sta8": [159, 161, 162, 177, 179, 182], "sta9": [159, 161, 162, 183, 184], "sta10": [159, 161, 162, 176, 183], "sta11": [159, 161, 162, 178, 184], "sta12": [159, 161, 162, 176, 179], "evt15": [159, 160], "sta13": [159, 160, 164, 165, 166, 172, 174, 179, 180, 187], "On": [160, 161, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 581], "evt16": [160, 161], "evt18": 160, "sta4": [160, 162, 167, 168], "evt6": [165, 166, 172], "evt1": [167, 187], "stream": 168, "evt5": 171, "evt7": 173, "evt8": 174, "evt11": 175, "back": [178, 180, 253, 590], "evt14": [179, 184], "evt9": [182, 185], "do_act": 187, "pdu_typ": [188, 189, 190, 191, 192, 193, 194], "reason_diagnost": [188, 190], "26": [188, 189, 191, 576], "offset": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "shown": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 581, 585], "from_primit": [188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 216, 217, 218, 219, 221, 222, 223, 224], "pdu_length": [188, 189, 190, 191, 192, 193, 194], "reason_str": [188, 190, 213], "source_str": [188, 190, 213], "to_primit": [188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211], "protocol_vers": [189, 191], "variable_item": [189, 191], "0x10": [189, 191, 197], "0x21": [189, 191, 202], "0x40": [189, 191, 202, 203, 208], "0x50": [189, 191, 211], "32": [189, 191, 576], "application_context_nam": [189, 191, 197, 213], "called_ae_titl": [189, 191, 213], "sai": [189, 581], "calling_ae_titl": [189, 191, 213], "presentation_context": [189, 191], "reserved_aec": 189, "27": [189, 576], "reserved_aet": 189, "unsuccess": 190, "result_str": [190, 202, 213], "0x30": [191, 196, 203], "part08": 191, "sect_9": 191, "html": [191, 566, 567, 568], "0x20": [191, 203, 585], "signific": [191, 238, 585], "truncat": [191, 213], "0x00000004": 192, "24": [193, 195, 204, 341], "presentation_data_value_item": 194, "fragment": [195, 204], "item_length": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "item_typ": [195, 204], "message_control_header_byt": [195, 204], "header": [195, 204, 580], "agre": [196, 208, 581, 586, 587], "osi": [196, 197, 208, 587], "8824": [196, 197, 208, 587], "1990": [196, 197, 200, 208, 548], "g0": [196, 197, 200, 208, 548, 585], "0x2e": [196, 197, 208], "exce": [196, 197, 208], "iec": [196, 197, 208, 585, 587], "2015": [196, 197, 208], "abstract_syntax_nam": 196, "explicitli": 197, "inter": 197, "0x53": 198, "max_operations_invok": 198, "max_operations_perform": 198, "0x52": 199, "0x55": 200, "0x51": [201, 205], "ttem": 202, "ie": [205, 206, 207], "NO": [205, 206, 207], "sop_class_uid": [205, 206, 207, 221, 222, 223, 590], "uid_length": 205, "0x57": 206, "related_general_sop_class_identif": [206, 222], "related_general_sop_class_identification_length": 206, "service_class_uid": [206, 222], "service_class_uid_length": 206, "sop_class_uid_length": [206, 207], "0x56": 207, "unambigu": [208, 587], "techniqu": [208, 587], "transfer_syntax_nam": 208, "0x59": 209, "server_response_length": 209, "0x58": 210, "id_typ": 210, "id_type_str": 210, "primary_field_length": 210, "response_request": 210, "secondary_field_length": 210, "async_ops_window": 211, "common_ext_neg": 211, "_userinformationprimitivetyp": 211, "nu": [212, 213, 214, 215, 220], "abort_sourc": 212, "deconvert": 213, "pre": [213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 549, 580, 585], "contxt": 213, "resp": 213, "sess": 213, "called_presentation_address": 213, "calling_presentation_address": 213, "result_sourc": 213, "ul": [213, 224, 580], "maximum_length_receiv": [213, 219], "presentation_context_definition_list": 213, "value_list": 213, "presentation_context_definition_results_list": 213, "presentation_requir": 213, "kernel": 213, "responding_ae_titl": 213, "responding_presentation_address": 213, "session_requir": 213, "provider_reason": 214, "affirm": 215, "maximum_number_operations_invok": 216, "maximum_number_operations_perform": 216, "ambigu": [217, 218], "encount": [217, 218], "node": [217, 218], "piec": [217, 218, 587, 590], "some_nam": 218, "v3": 219, "val": [219, 238, 473], "greater": [219, 537], "31682": 219, "neg": [219, 537, 588], "presentation_data_value_list": 220, "serv": 221, "absent": 221, "uid_list": 222, "aren": [222, 585], "service_class_application_inform": 223, "x01": 223, "ps3": 223, "possibli": 224, "decid": [224, 585, 590], "authent": 224, "user_identity_typ": [224, 586], "positive_response_request": 224, "server_respons": 224, "password": [224, 585, 586], "channel": [225, 247, 581], "built": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 549, 580], "assembli": [232, 237, 564], "inventori": 237, "odd": [238, 590], "integ": [238, 590], "255": [238, 539, 590], "presentent": 238, "outcom": [238, 254, 581, 585, 590], "acc": 238, "seen": [238, 580, 581, 590], "neither": [238, 590], "add_transfer_syntax": 238, "as_scp": 238, "as_scu": 238, "as_tupl": [238, 580], "repositori": [243, 583], "convent": [244, 574], "product": 248, "rq_context": [253, 254], "ac_context": [253, 254], "sort": [253, 254], "thing": [254, 580, 581], "nice": [254, 539, 545], "_qr": [255, 262, 265], "_mcm": 270, "_pj": [271, 273], "_p": 272, "_sc": 274, "_up": 275, "37": [293, 303, 355, 573, 576], "39": [306, 307, 308, 309, 560, 569, 576], "23": [345, 429, 570], "43": [356, 357, 358, 359, 564, 569, 576], "38": [362, 363, 364, 365, 563, 569, 576], "44": [367, 368, 369, 370, 564, 569], "201": [380, 381, 382, 383, 384, 468, 485], "376": [432, 433, 570], "41": [438, 576, 577], "dimse_msg_typ": [531, 584], "246": [531, 584], "352": [531, 584], "foostorag": 531, "isn": [532, 581], "sphinx": 534, "unable_to_process": 534, "temp": 534, "65024": 534, "move_destination_unknown": 534, "43009": 534, "65280": 534, "classmethod": 534, "purpos": [537, 586, 588], "impli": 537, "sinc": [537, 580, 581], "restart": [537, 580], "reset": 537, "baserequesthandl": [538, 542], "serve_forev": 538, "poll_interv": 538, "poll": [538, 539], "request_queue_s": 538, "server_address": 538, "get_request": 538, "client_socket": [538, 539], "process_request": 538, "client_address": [538, 540, 542], "server_bind": 538, "so_reuseaddr": 538, "server_clos": 538, "service_act": 538, "wrapper": 539, "newli": 539, "get_local_addr": 539, "provider_queu": 539, "_queuetyp": 539, "recv": 539, "nr_byte": 539, "bytearrai": 539, "bytestream": [539, 545], "unaccept": 540, "process_request_thread": 542, "encoded_valu": 543, "target_fn": 544, "thunk": 544, "target": 544, "delimit": 545, "items_per_lin": 545, "max_siz": 545, "512": 545, "suffix": [545, 587], "turn": 545, "insert": 545, "everi": [545, 580, 581, 587], "allow_empti": [546, 547], "allow_non": [546, 547], "validate_uid": [547, 549], "intern": [548, 554], "dev0": 549, "nov": 549, "2023": 549, "log_handler_level": [549, 588], "dsutil": 549, "miscellan": 549, "service_class_n": 549, "status": [549, 580], "code_to_statu": 549, "decode_byt": 549, "make_target": 549, "pretty_byt": 549, "set_a": 549, "set_uid": 549, "lai": 554, "help": [554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 581], "aid": [554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577], "0xc0ff": 554, "0xc001": [554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580], "0xc002": [554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578], "0xc2ff": 554, "0xc210": [554, 569, 576], "unhandl": [554, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 580], "0xc3ff": 554, "0xc400": 554, "0xc4ff": 554, "0xc410": [554, 560, 561, 563, 564, 571, 572], "0xc413": [554, 560, 561, 563, 564, 571, 572], "0xc500": 554, "0xc5ff": 554, "0xc510": [554, 560, 561, 563, 564, 571, 572], "0xc513": [554, 560, 561, 563, 564, 571, 572], "0xc514": [554, 560, 561, 563, 564, 571, 572], "0xc515": [554, 560, 561, 563, 564, 571, 572], "proceduraleventlog": 558, "substanceadministrationlog": 558, "hex": [558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585], "colorpaletteinformationmodelfind": 560, "colorpaletteinformationmodelmov": 560, "colorpaletteinformationmodelget": 560, "definedprocedureprotocolinformationmodelfind": 561, "definedprocedureprotocolinformationmodelmov": 561, "definedprocedureprotocolinformationmodelget": 561, "hangingprotocolinformationmodelfind": 563, "hangingprotocolinformationmodelmov": 563, "hangingprotocolinformationmodelget": 563, "genericimplanttemplateinformationmodelfind": 564, "implantassemblytemplateinformationmodelfind": 564, "implanttemplategroupinformationmodelfind": 564, "genericimplanttemplateinformationmodelmov": 564, "implantassemblytemplateinformationmodelmov": 564, "implanttemplategroupinformationmodelmov": 564, "genericimplanttemplateinformationmodelget": 564, "implantassemblytemplateinformationmodelget": 564, "implanttemplategroupinformationmodelget": 564, "part04": [566, 567, 568], "chapter_r": 566, "presenc": 566, "instanceavailabilitynotif": 566, "chapter_": 567, "interchang": 567, "mediacreationmanag": 567, "0xc201": 567, "0xc202": 567, "interrupt": [567, 580, 581], "0xc203": 567, "deni": 567, "unspecifi": 567, "chapter_f": 568, "modalityperformedprocedurestepretriev": 568, "modalityperformedprocedurestepnotif": 568, "hangingprotocolstorag": 569, "colorpalettestorag": 569, "genericimplanttemplatestorag": 569, "implantassemblytemplatestorag": 569, "implanttemplategroupstorag": 569, "ctdefinedprocedureprotocolstorag": 569, "protocolapprovalstorag": 569, "xadefinedprocedureprotocolstorag": 569, "basiccolorimagebox": 570, "printjob": 570, "basicannotationbox": 570, "printerconfigurationretriev": 570, "basiccolorprintmanagementmeta": 570, "presentationlut": 570, "protocolapprovalinformationfind": 571, "protocolapprovalinformationmov": 571, "protocolapprovalinformationget": 571, "studyrootqueryretrieveinformationmodelfind": 572, "patientstudyonlyqueryretrieveinformationmodelfind": 572, "studyrootqueryretrieveinformationmodelmov": 572, "patientstudyonlyqueryretrieveinformationmodelmov": 572, "compositeinstancerootretrievemov": 572, "studyrootqueryretrieveinformationmodelget": 572, "patientstudyonlyqueryretrieveinformationmodelget": 572, "compositeinstanceretrievewithoutbulkdataget": 572, "compositeinstancerootretrieveget": 572, "breastimagingrelevantpatientinformationqueri": 573, "cardiacrelevantpatientinformationqueri": 573, "geometr": 574, "dosimetr": 574, "rtconventionalmachineverif": 574, "rtionmachineverif": 574, "safekeep": 575, "storagecommitmentpushmodel": 575, "computedradiographyimagestorag": 576, "digitalxrayimagestorageforpresent": 576, "digitalxrayimagestorageforprocess": 576, "digitalmammographyxrayimagestorageforpresent": 576, "digitalmammographyxrayimagestorageforprocess": 576, "digitalintraoralxrayimagestorageforpresent": 576, "28": 576, "digitalintraoralxrayimagestorageforprocess": 576, "enhancedctimagestorag": 576, "legacyconvertedenhancedctimagestorag": 576, "ultrasoundmultiframeimagestorag": 576, "enhancedmrimagestorag": 576, "36": 576, "mrspectroscopystorag": 576, "enhancedmrcolorimagestorag": 576, "legacyconvertedenhancedmrimagestorag": 576, "ultrasoundimagestorag": 576, "enhancedusvolumestorag": 576, "secondarycaptureimagestorag": 576, "multiframesinglebitsecondarycaptureimagestorag": 576, "multiframegrayscalebytesecondarycaptureimagestorag": 576, "multiframegrayscalewordsecondarycaptureimagestorag": 576, "multiframetruecolorsecondarycaptureimagestorag": 576, "twelveleadecgwaveformstorag": 576, "generalecgwaveformstorag": 576, "ambulatoryecgwaveformstorag": 576, "hemodynamicwaveformstorag": 576, "cardiacelectrophysiologywaveformstorag": 576, "basicvoiceaudiowaveformstorag": 576, "generalaudiowaveformstorag": 576, "arterialpulsewaveformstorag": 576, "respiratorywaveformstorag": 576, "multichannelrespiratorywaveformstorag": 576, "routinescalpelectroencephalogramwaveformstorag": 576, "electromyogramwaveformstorag": 576, "electrooculogramwaveformstorag": 576, "sleepelectroencephalogramwaveformstorag": 576, "bodypositionwaveformstorag": 576, "grayscalesoftcopypresentationstatestorag": 576, "colorsoftcopypresentationstatestorag": 576, "pseudocolorsoftcopypresentationstagestorag": 576, "blendingsoftcopypresentationstatestorag": 576, "xaxrfgrayscalesoftcopypresentationstatestorag": 576, "grayscaleplanarmprvolumetricpresentationstatestorag": 576, "compositingplanarmprvolumetricpresentationstatestorag": 576, "advancedblendingpresentationstatestorag": 576, "volumerenderingvolumetricpresentationstatestorag": 576, "segmentedvolumerenderingvolumetricpresentationstatestorag": 576, "multiplevolumerenderingvolumetricpresentationstatestorag": 576, "xrayangiographicimagestorag": 576, "enhancedxaimagestorag": 576, "47": 576, "xrayradiofluoroscopicimagestorag": 576, "enhancedxrfimagestorag": 576, "48": 576, "xray3dangiographicimagestorag": 576, "53": 576, "xray3dcraniofacialimagestorag": 576, "breasttomosynthesisimagestorag": 576, "55": 576, "breastprojectionxrayimagestorageforpresent": 576, "breastprojectionxrayimagestorageforprocess": 576, "intravascularopticalcoherencetomographyimagestorageforpresent": 576, "intravascularopticalcoherencetomographyimagestorageforprocess": 576, "nuclearmedicineimagestorag": 576, "parametricmapstorag": 576, "rawdatastorag": 576, "spatialregistrationstorag": 576, "spatialfiducialsstorag": 576, "deformablespatialregistrationstorag": 576, "segmentationstorag": 576, "surfacesegmentationstorag": 576, "tractographyresultsstorag": 576, "realworldvaluemappingstorag": 576, "46": 576, "surfacescanmeshstorag": 576, "surfacescanpointcloudstorag": 576, "vlendoscopicimagestorag": 576, "videoendoscopicimagestorag": 576, "vlmicroscopicimagestorag": 576, "videomicroscopicimagestorag": 576, "vlslidecoordinatesmicroscopicimagestorag": 576, "vlphotographicimagestorag": 576, "videophotographicimagestorag": 576, "ophthalmicphotography8bitimagestorag": 576, "ophthalmicphotography16bitimagestorag": 576, "stereometricrelationshipstorag": 576, "ophthalmictomographyimagestorag": 576, "52": 576, "widefieldophthalmicphotographystereographicprojectionimagestorag": 576, "widefieldophthalmicphotography3dcoordinatesimagestorag": 576, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 576, "83": 576, "ophthlamicopticalcoherencetomographybscanvolumeanalysisstorag": 576, "84": 576, "vlwholeslidemicroscopyimagestorag": 576, "dermoscopicphotographyimagestorag": 576, "lensometrymeasurementsstorag": 576, "autorefractionmeasurementsstorag": 576, "keratometrymeasurementsstorag": 576, "subjectiverefractionmeasurementsstorag": 576, "visualacuitymeasurementsstorag": 576, "spectacleprescriptionreportstorag": 576, "ophthalmicaxialmeasurementsstorag": 576, "intraocularlenscalculationsstorag": 576, "maculargridthicknessandvolumereportstorag": 576, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 576, "ophthalmicthicknessmapstorag": 576, "cornealtopographymapstorag": 576, "basictextsrstorag": 576, "enhancedsrstorag": 576, "comprehensivesrstorag": 576, "comprehensive3dsrstorag": 576, "extensiblesrstorag": 576, "procedurelogstorag": 576, "mammographycadsrstorag": 576, "keyobjectselectiondocumentstorag": 576, "chestcadsrstorag": 576, "xrayradiationdosesrstorag": 576, "radiopharmaceuticalradiationdosesrstorag": 576, "coloncadsrstorag": 576, "acquisitioncontextsrstorag": 576, "simplifiedadultechosrstorag": 576, "patientradiationdosesrstorag": 576, "plannedimagingagentadministrationsrstorag": 576, "performedimagingagentadministrationsrstorag": 576, "enhancedxrayradiationdosesrstorag": 576, "contentassessmentresultsstorag": 576, "microscopybulksimpleannotationsstorag": 576, "87": 576, "encapsulatedpdfstorag": 576, "encapsulatedcdastorag": 576, "encapsulatedstlstorag": 576, "85": 576, "encapsulatedobjstorag": 576, "encapsulatedmtlstorag": 576, "positronemissiontomographyimagestorag": 576, "legacyconvertedenhancedpetimagestorag": 576, "enhancedpetimagestorag": 576, "basicstructureddisplaystorag": 576, "ctperformedprocedureprotocolstorag": 576, "xaperformedprocedureprotocolstorag": 576, "rtimagestorag": 576, "rtdosestorag": 576, "rtstructuresetstorag": 576, "rtbeamstreatmentrecordstorag": 576, "29": 576, "rtplanstorag": 576, "rtbrachytreatmentrecordstorag": 576, "rttreatmentsummaryrecordstorag": 576, "rtionplanstorag": 576, "rtionbeamstreatmentrecordstorag": 576, "rtphysicianintentstorag": 576, "86": 576, "rtsegmentannotationstorag": 576, "rtradiationsetstorag": 576, "carmphotonelectronradiationstorag": 576, "tomotherapeuticradiationstorag": 576, "roboticarmradiationstorag": 576, "rtradiationrecordsetstorag": 576, "rtradiationsalvagerecordstorag": 576, "tomotherapeuticradiationrecordstorag": 576, "carmphotonelectronradiationrecordstorag": 576, "roboticarmradiationrecordstorag": 576, "rtradiationsetdeliveryinstructionstorag": 576, "rttreatmentpreparationstorag": 576, "rtbeamsdeliveryinstructionstorag": 576, "rtbrachyapplicationsetupdeliveryinstructionsstorag": 576, "obtain": [577, 587], "productcharacteristicsqueri": 577, "substanceapprovalqueri": 577, "unifiedproceduresteppush": 578, "unifiedprocedurestepwatch": 578, "unifiedproceduresteppul": 578, "unifiedprocedurestepev": 578, "unifiedprocedurestepqueri": 578, "un": 578, "subscrib": 578, "tutori": [580, 581, 583, 584], "peopl": [580, 581], "who": [580, 581], "learn": [580, 581, 584], "pleas": [580, 585, 586], "slice": [580, 587], "undergon": 580, "put": 580, "provis": [580, 587], "comfort": 580, "let": [580, 581], "my_scp": 580, "editor": [580, 581], "down": [580, 581], "And": [580, 581, 590], "fall": 580, "traceback": 580, "recent": [580, 584], "1406": 580, "212": 580, "820": 580, "_c_store_handl": 580, "better": 580, "give": [580, 585, 588, 590], "interven": 580, "idea": [580, 586], "worri": [580, 581, 590], "saw": [580, 581], "stage": [580, 581], "ctrl": [580, 581], "though": 580, "written": [580, 581], "0x4449434d": 580, "small": 580, "difficult": 580, "fortun": [580, 581], "coupl": [580, 581, 590], "awar": 580, "deal": 580, "suppos": 580, "easiest": 580, "handi": 580, "moment": 580, "technic": 580, "all_transfer_syntax": 580, "storage_sop_class": 580, "uncompress": [580, 590], "faster": 580, "cost": 580, "complex": 580, "storage_dir": 580, "makedir": 580, "exist_ok": 580, "dir": 580, "fname": 580, "ve": [580, 581, 586], "demonstr": [580, 586], "third": [580, 581, 583, 586, 588], "gracefulli": 580, "realli": 580, "That": 580, "might": [580, 581, 583], "tell": 581, "earlier": 581, "upgrad": [581, 583], "term": 581, "govern": [581, 587], "goe": 581, "upon": [581, 586], "wonder": 581, "answer": 581, "li": 581, "sole": [581, 588], "label": [581, 587], "shorten": 581, "acknowledg": 581, "reachabl": 581, "firewal": 581, "ok": 581, "enough": 581, "simpler": 581, "parti": [581, 583], "dcmtk": 581, "accordingli": 581, "press": 581, "background": 581, "rest": 581, "feel": 581, "my_scu": 581, "lot": 581, "few": 581, "later": 581, "localhost": [581, 584], "148": 581, "155": 581, "behind": 581, "scene": 581, "mention": 581, "hand": 581, "whatev": 581, "further": 581, "yourself": [581, 585], "sure": [581, 583], "pynetdicom_200": 581, "broken": 581, "traffic": 581, "familiar": 581, "too": 581, "unusu": 581, "afterward": [581, 585], "secur": 581, "hopefulli": 581, "introduct": [581, 589], "cheat": 581, "visibl": 581, "addition": 581, "mix": 581, "congratul": 581, "Then": [582, 590], "virtual": 583, "environ": 583, "isol": 583, "admin": 583, "privileg": 583, "pypi": 583, "softwar": 583, "simplest": 583, "forg": 583, "snapshot": 583, "latest": 583, "master": 583, "branch": 583, "github": 583, "git": 583, "http": 583, "com": 583, "stabl": 583, "undocu": 583, "clone": 583, "poetri": 583, "cd": 583, "dev": 583, "download": 583, "occasion": 584, "across": [584, 587], "perhap": 584, "privatertplanstorag": 584, "privatequeryfind": 584, "my_ae_titl": 585, "Or": 585, "repertoir": 585, "1991": 585, "exclud": [585, 586], "backslash": 585, "0x5c": 585, "done": 585, "prebuilt": 585, "almost": 585, "context_a": 585, "context_b": 585, "reiter": 585, "aim": 585, "some_user_funct": 585, "handle_user_id": 585, "hit": 586, "singular": 586, "plu": 586, "room": 586, "negotiation_item": 586, "getlogg": 586, "handle_open": 586, "handle_accept": 586, "arg1": [586, 588], "arg2": [586, 588], "unbound": [586, 588], "handle_clos": 586, "disconnect": 586, "vari": 586, "ssl_cx": 586, "create_default_context": 586, "client_auth": 586, "cafil": 586, "crt": 586, "verify_mod": 586, "cert_requir": 586, "load_cert_chain": 586, "certfil": 586, "keyfil": 586, "potenti": 586, "someth": [586, 590], "outlin": 586, "finish": 586, "supported_cx": 586, "futur": 586, "unaffect": 586, "load_verify_loc": 586, "0g": 586, "maximum_vers": 586, "tlsversion": 586, "tlsv1_2": 586, "varieti": [587, 590], "countri": 587, "site": 587, "vendor": 587, "equip": 587, "itu": 587, "compos": 587, "org": 587, "organis": 587, "portion": 587, "free": 587, "websit": 587, "08": 587, "orient": 587, "share": 587, "normalis": 587, "deriv": 587, "especi": 587, "along": 587, "involv": 587, "featur": 587, "condition": 587, "fulli": 590, "With": 590, "freeli": 590, "jpegbaselin": 590, "decompress": 590, "unlik": 590, "offer": 590, "cr": 590, "wrinkl": 590, "scratch": 590, "role_a": 590, "role_b": 590}, "objects": {"": [[549, 0, 0, "-", "pynetdicom"]], "pynetdicom": [[70, 1, 1, "", "PYNETDICOM_IMPLEMENTATION_UID"], [71, 1, 1, "", "PYNETDICOM_IMPLEMENTATION_VERSION"], [72, 1, 1, "", "PYNETDICOM_UID_PREFIX"], [45, 0, 0, "-", "_config"], [41, 0, 0, "-", "acse"], [43, 0, 0, "-", "ae"], [44, 0, 0, "-", "association"], [113, 2, 1, "", "debug_logger"], [49, 0, 0, "-", "dimse"], [47, 0, 0, "-", "dimse_messages"], [48, 0, 0, "-", "dimse_primitives"], [50, 0, 0, "-", "dsutils"], [67, 0, 0, "-", "dul"], [68, 0, 0, "-", "events"], [69, 0, 0, "-", "fsm"], [52, 0, 0, "-", "pdu"], [60, 0, 0, "-", "pdu_items"], [61, 0, 0, "-", "pdu_primitives"], [551, 0, 0, "-", "presentation"], [552, 0, 0, "-", "service_class"], [553, 0, 0, "-", "sop_class"], [554, 0, 0, "-", "status"], [555, 0, 0, "-", "timer"], [556, 0, 0, "-", "transport"], [557, 0, 0, "-", "utils"]], "pynetdicom._config": [[73, 1, 1, "", "CODECS"], [74, 1, 1, "", "ENFORCE_UID_CONFORMANCE"], [75, 1, 1, "", "LOG_HANDLER_LEVEL"], [76, 1, 1, "", "LOG_REQUEST_IDENTIFIERS"], [77, 1, 1, "", "LOG_RESPONSE_IDENTIFIERS"], [78, 1, 1, "", "PASS_CONTEXTVARS"], [79, 1, 1, "", "STORE_RECV_CHUNKED_DATASET"], [80, 1, 1, "", "STORE_SEND_CHUNKED_DATASET"], [81, 1, 1, "", "UNRESTRICTED_STORAGE_SERVICE"], [82, 1, 1, "", "USE_SHORT_DIMSE_AET"], [83, 1, 1, "", "VALIDATORS"], [84, 1, 1, "", "WINDOWS_TIMER_RESOLUTION"]], "pynetdicom._globals": [[85, 1, 1, "", "ALL_TRANSFER_SYNTAXES"], [86, 1, 1, "", "DEFAULT_TRANSFER_SYNTAXES"]], "pynetdicom._handlers": [[87, 2, 1, "", "doc_handle_acse"], [88, 2, 1, "", "doc_handle_action"], [89, 2, 1, "", "doc_handle_assoc"], [90, 2, 1, "", "doc_handle_async"], [91, 2, 1, "", "doc_handle_c_get"], [92, 2, 1, "", "doc_handle_create"], [93, 2, 1, "", "doc_handle_data"], [94, 2, 1, "", "doc_handle_delete"], [95, 2, 1, "", "doc_handle_dimse"], [96, 2, 1, "", "doc_handle_echo"], [97, 2, 1, "", "doc_handle_event_report"], [98, 2, 1, "", "doc_handle_find"], [99, 2, 1, "", "doc_handle_fsm"], [100, 2, 1, "", "doc_handle_move"], [101, 2, 1, "", "doc_handle_n_get"], [102, 2, 1, "", "doc_handle_pdu"], [103, 2, 1, "", "doc_handle_set"], [104, 2, 1, "", "doc_handle_sop_common"], [105, 2, 1, "", "doc_handle_sop_extended"], [106, 2, 1, "", "doc_handle_store"], [107, 2, 1, "", "doc_handle_transport"], [108, 2, 1, "", "doc_handle_userid"]], "pynetdicom.acse": [[109, 3, 1, "", "ACSE"]], "pynetdicom.acse.ACSE": [[109, 4, 1, "", "__init__"], [109, 5, 1, "", "acceptor"], [109, 5, 1, "", "acse_timeout"], [109, 5, 1, "", "assoc"], [109, 5, 1, "", "dul"], [109, 4, 1, "", "is_aborted"], [109, 4, 1, "", "is_release_requested"], [109, 4, 1, "", "negotiate_association"], [109, 4, 1, "", "negotiate_release"], [109, 5, 1, "", "requestor"], [109, 4, 1, "", "send_abort"], [109, 4, 1, "", "send_accept"], [109, 4, 1, "", "send_ap_abort"], [109, 4, 1, "", "send_reject"], [109, 4, 1, "", "send_release"], [109, 4, 1, "", "send_request"], [109, 5, 1, "", "socket"]], "pynetdicom.ae": [[110, 3, 1, "", "ApplicationEntity"]], "pynetdicom.ae.ApplicationEntity": [[110, 4, 1, "", "__init__"], [110, 5, 1, "", "acse_timeout"], [110, 5, 1, "", "active_associations"], [110, 4, 1, "", "add_requested_context"], [110, 4, 1, "", "add_supported_context"], [110, 5, 1, "", "ae_title"], [110, 4, 1, "", "associate"], [110, 5, 1, "", "connection_timeout"], [110, 5, 1, "", "dimse_timeout"], [110, 5, 1, "", "implementation_class_uid"], [110, 5, 1, "", "implementation_version_name"], [110, 4, 1, "", "make_server"], [110, 5, 1, "", "maximum_associations"], [110, 5, 1, "", "maximum_pdu_size"], [110, 5, 1, "", "network_timeout"], [110, 4, 1, "", "remove_requested_context"], [110, 4, 1, "", "remove_supported_context"], [110, 5, 1, "", "requested_contexts"], [110, 5, 1, "", "require_called_aet"], [110, 5, 1, "", "require_calling_aet"], [110, 4, 1, "", "shutdown"], [110, 4, 1, "", "start_server"], [110, 5, 1, "", "supported_contexts"]], "pynetdicom.association": [[111, 3, 1, "", "Association"], [112, 3, 1, "", "ServiceUser"]], "pynetdicom.association.Association": [[111, 4, 1, "", "__init__"], [111, 4, 1, "", "abort"], [111, 5, 1, "", "accepted_contexts"], [111, 6, 1, "", "acceptor"], [111, 6, 1, "", "acse"], [111, 5, 1, "", "acse_timeout"], [111, 5, 1, "", "ae"], [111, 4, 1, "", "bind"], [111, 6, 1, "", "dimse"], [111, 5, 1, "", "dimse_timeout"], [111, 6, 1, "", "dul"], [111, 4, 1, "", "get_events"], [111, 4, 1, "", "get_handlers"], [111, 6, 1, "", "is_aborted"], [111, 5, 1, "", "is_acceptor"], [111, 6, 1, "", "is_established"], [111, 6, 1, "", "is_rejected"], [111, 6, 1, "", "is_released"], [111, 5, 1, "", "is_requestor"], [111, 4, 1, "", "kill"], [111, 5, 1, "", "local"], [111, 5, 1, "", "lock"], [111, 5, 1, "", "mode"], [111, 5, 1, "", "network_timeout"], [111, 6, 1, "", "network_timeout_response"], [111, 5, 1, "", "rejected_contexts"], [111, 4, 1, "", "release"], [111, 5, 1, "", "remote"], [111, 4, 1, "", "request"], [111, 6, 1, "", "requestor"], [111, 4, 1, "", "run_reactor"], [111, 4, 1, "", "send_c_cancel"], [111, 4, 1, "", "send_c_echo"], [111, 4, 1, "", "send_c_find"], [111, 4, 1, "", "send_c_get"], [111, 4, 1, "", "send_c_move"], [111, 4, 1, "", "send_c_store"], [111, 4, 1, "", "send_n_action"], [111, 4, 1, "", "send_n_create"], [111, 4, 1, "", "send_n_delete"], [111, 4, 1, "", "send_n_event_report"], [111, 4, 1, "", "send_n_get"], [111, 4, 1, "", "send_n_set"], [111, 4, 1, "", "set_socket"], [111, 4, 1, "", "unbind"]], "pynetdicom.association.ServiceUser": [[112, 4, 1, "", "__init__"], [112, 5, 1, "", "accepted_common_extended"], [112, 4, 1, "", "add_negotiation_item"], [112, 6, 1, "", "address"], [112, 5, 1, "", "ae_title"], [112, 5, 1, "", "asynchronous_operations"], [112, 5, 1, "", "extended_negotiation"], [112, 4, 1, "", "get_contexts"], [112, 5, 1, "", "implementation_class_uid"], [112, 5, 1, "", "implementation_version_name"], [112, 5, 1, "", "info"], [112, 5, 1, "", "is_acceptor"], [112, 5, 1, "", "is_requestor"], [112, 5, 1, "", "maximum_length"], [112, 5, 1, "", "mode"], [112, 6, 1, "", "port"], [112, 6, 1, "", "primitive"], [112, 4, 1, "", "remove_negotiation_item"], [112, 5, 1, "", "requested_contexts"], [112, 4, 1, "", "reset_negotiation_items"], [112, 5, 1, "", "role_selection"], [112, 5, 1, "", "sop_class_common_extended"], [112, 5, 1, "", "sop_class_extended"], [112, 5, 1, "", "supported_contexts"], [112, 5, 1, "", "user_identity"], [112, 5, 1, "", "user_information"], [112, 5, 1, "", "writeable"]], "pynetdicom.dimse": [[114, 3, 1, "", "DIMSEServiceProvider"]], "pynetdicom.dimse.DIMSEServiceProvider": [[114, 4, 1, "", "__init__"], [114, 5, 1, "", "assoc"], [114, 6, 1, "", "cancel_rq"], [114, 5, 1, "", "dimse_timeout"], [114, 5, 1, "", "dul"], [114, 4, 1, "", "get_msg"], [114, 5, 1, "", "maximum_pdu_size"], [114, 6, 1, "", "message"], [114, 6, 1, "", "msg_queue"], [114, 4, 1, "", "peek_msg"], [114, 4, 1, "", "receive_primitive"], [114, 4, 1, "", "send_msg"]], "pynetdicom.dimse_messages": [[115, 3, 1, "", "C_CANCEL_RQ"], [116, 3, 1, "", "C_ECHO_RQ"], [117, 3, 1, "", "C_ECHO_RSP"], [118, 3, 1, "", "C_FIND_RQ"], [119, 3, 1, "", "C_FIND_RSP"], [120, 3, 1, "", "C_GET_RQ"], [121, 3, 1, "", "C_GET_RSP"], [122, 3, 1, "", "C_MOVE_RQ"], [123, 3, 1, "", "C_MOVE_RSP"], [124, 3, 1, "", "C_STORE_RQ"], [125, 3, 1, "", "C_STORE_RSP"], [126, 3, 1, "", "N_ACTION_RQ"], [127, 3, 1, "", "N_ACTION_RSP"], [128, 3, 1, "", "N_CREATE_RQ"], [129, 3, 1, "", "N_CREATE_RSP"], [130, 3, 1, "", "N_DELETE_RQ"], [131, 3, 1, "", "N_DELETE_RSP"], [132, 3, 1, "", "N_EVENT_REPORT_RQ"], [133, 3, 1, "", "N_EVENT_REPORT_RSP"], [134, 3, 1, "", "N_GET_RQ"], [135, 3, 1, "", "N_GET_RSP"], [136, 3, 1, "", "N_SET_RQ"], [137, 3, 1, "", "N_SET_RSP"]], "pynetdicom.dimse_messages.C_CANCEL_RQ": [[115, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_ECHO_RQ": [[116, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_ECHO_RSP": [[117, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_FIND_RQ": [[118, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_FIND_RSP": [[119, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_GET_RQ": [[120, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_GET_RSP": [[121, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_MOVE_RQ": [[122, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_MOVE_RSP": [[123, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_STORE_RQ": [[124, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_STORE_RSP": [[125, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_ACTION_RQ": [[126, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_ACTION_RSP": [[127, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_CREATE_RQ": [[128, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_CREATE_RSP": [[129, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_DELETE_RQ": [[130, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_DELETE_RSP": [[131, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ": [[132, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP": [[133, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_GET_RQ": [[134, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_GET_RSP": [[135, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_SET_RQ": [[136, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_SET_RSP": [[137, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives": [[138, 3, 1, "", "C_CANCEL"], [139, 3, 1, "", "C_ECHO"], [140, 3, 1, "", "C_FIND"], [141, 3, 1, "", "C_GET"], [142, 3, 1, "", "C_MOVE"], [143, 3, 1, "", "C_STORE"], [144, 3, 1, "", "N_ACTION"], [145, 3, 1, "", "N_CREATE"], [146, 3, 1, "", "N_DELETE"], [147, 3, 1, "", "N_EVENT_REPORT"], [148, 3, 1, "", "N_GET"], [149, 3, 1, "", "N_SET"]], "pynetdicom.dimse_primitives.C_CANCEL": [[138, 5, 1, "", "MessageIDBeingRespondedTo"], [138, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_ECHO": [[139, 6, 1, "", "AffectedSOPClassUID"], [139, 6, 1, "", "ErrorComment"], [139, 6, 1, "", "MessageID"], [139, 6, 1, "", "MessageIDBeingRespondedTo"], [139, 6, 1, "", "Status"], [139, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_FIND": [[140, 6, 1, "", "AffectedSOPClassUID"], [140, 6, 1, "", "ErrorComment"], [140, 5, 1, "", "Identifier"], [140, 6, 1, "", "MessageID"], [140, 6, 1, "", "MessageIDBeingRespondedTo"], [140, 6, 1, "", "OffendingElement"], [140, 5, 1, "", "Priority"], [140, 6, 1, "", "Status"], [140, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_GET": [[141, 6, 1, "", "AffectedSOPClassUID"], [141, 6, 1, "", "ErrorComment"], [141, 5, 1, "", "Identifier"], [141, 6, 1, "", "MessageID"], [141, 6, 1, "", "MessageIDBeingRespondedTo"], [141, 5, 1, "", "NumberOfCompletedSuboperations"], [141, 5, 1, "", "NumberOfFailedSuboperations"], [141, 5, 1, "", "NumberOfRemainingSuboperations"], [141, 5, 1, "", "NumberOfWarningSuboperations"], [141, 6, 1, "", "OffendingElement"], [141, 5, 1, "", "Priority"], [141, 6, 1, "", "Status"], [141, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_MOVE": [[142, 6, 1, "", "AffectedSOPClassUID"], [142, 6, 1, "", "ErrorComment"], [142, 5, 1, "", "Identifier"], [142, 6, 1, "", "MessageID"], [142, 6, 1, "", "MessageIDBeingRespondedTo"], [142, 5, 1, "", "MoveDestination"], [142, 5, 1, "", "NumberOfCompletedSuboperations"], [142, 5, 1, "", "NumberOfFailedSuboperations"], [142, 5, 1, "", "NumberOfRemainingSuboperations"], [142, 5, 1, "", "NumberOfWarningSuboperations"], [142, 6, 1, "", "OffendingElement"], [142, 5, 1, "", "Priority"], [142, 6, 1, "", "Status"], [142, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_STORE": [[143, 6, 1, "", "AffectedSOPClassUID"], [143, 5, 1, "", "AffectedSOPInstanceUID"], [143, 5, 1, "", "DataSet"], [143, 6, 1, "", "ErrorComment"], [143, 6, 1, "", "MessageID"], [143, 6, 1, "", "MessageIDBeingRespondedTo"], [143, 5, 1, "", "MoveOriginatorApplicationEntityTitle"], [143, 5, 1, "", "MoveOriginatorMessageID"], [143, 6, 1, "", "OffendingElement"], [143, 5, 1, "", "Priority"], [143, 6, 1, "", "Status"], [143, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_ACTION": [[144, 5, 1, "", "ActionInformation"], [144, 5, 1, "", "ActionReply"], [144, 5, 1, "", "ActionTypeID"], [144, 6, 1, "", "AffectedSOPClassUID"], [144, 5, 1, "", "AffectedSOPInstanceUID"], [144, 6, 1, "", "MessageID"], [144, 6, 1, "", "MessageIDBeingRespondedTo"], [144, 5, 1, "", "RequestedSOPClassUID"], [144, 5, 1, "", "RequestedSOPInstanceUID"], [144, 6, 1, "", "Status"], [144, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_CREATE": [[145, 6, 1, "", "AffectedSOPClassUID"], [145, 5, 1, "", "AffectedSOPInstanceUID"], [145, 5, 1, "", "AttributeList"], [145, 6, 1, "", "MessageID"], [145, 6, 1, "", "MessageIDBeingRespondedTo"], [145, 6, 1, "", "Status"], [145, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_DELETE": [[146, 6, 1, "", "AffectedSOPClassUID"], [146, 5, 1, "", "AffectedSOPInstanceUID"], [146, 6, 1, "", "MessageID"], [146, 6, 1, "", "MessageIDBeingRespondedTo"], [146, 5, 1, "", "RequestedSOPClassUID"], [146, 5, 1, "", "RequestedSOPInstanceUID"], [146, 6, 1, "", "Status"], [146, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_EVENT_REPORT": [[147, 6, 1, "", "AffectedSOPClassUID"], [147, 5, 1, "", "AffectedSOPInstanceUID"], [147, 5, 1, "", "EventInformation"], [147, 5, 1, "", "EventReply"], [147, 5, 1, "", "EventTypeID"], [147, 6, 1, "", "MessageID"], [147, 6, 1, "", "MessageIDBeingRespondedTo"], [147, 6, 1, "", "Status"], [147, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_GET": [[148, 6, 1, "", "AffectedSOPClassUID"], [148, 5, 1, "", "AffectedSOPInstanceUID"], [148, 5, 1, "", "AttributeIdentifierList"], [148, 5, 1, "", "AttributeList"], [148, 6, 1, "", "MessageID"], [148, 6, 1, "", "MessageIDBeingRespondedTo"], [148, 5, 1, "", "RequestedSOPClassUID"], [148, 5, 1, "", "RequestedSOPInstanceUID"], [148, 6, 1, "", "Status"], [148, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_SET": [[149, 6, 1, "", "AffectedSOPClassUID"], [149, 5, 1, "", "AffectedSOPInstanceUID"], [149, 5, 1, "", "AttributeList"], [149, 6, 1, "", "MessageID"], [149, 6, 1, "", "MessageIDBeingRespondedTo"], [149, 5, 1, "", "ModificationList"], [149, 5, 1, "", "RequestedSOPClassUID"], [149, 5, 1, "", "RequestedSOPInstanceUID"], [149, 6, 1, "", "Status"], [149, 4, 1, "", "__init__"]], "pynetdicom.dsutils": [[150, 2, 1, "", "decode"], [151, 2, 1, "", "encode"], [152, 2, 1, "", "pretty_dataset"], [153, 2, 1, "", "pretty_element"]], "pynetdicom.dul": [[154, 3, 1, "", "DULServiceProvider"]], "pynetdicom.dul.DULServiceProvider": [[154, 4, 1, "", "__init__"], [154, 6, 1, "", "artim_timer"], [154, 5, 1, "", "assoc"], [154, 6, 1, "", "event_queue"], [154, 4, 1, "", "idle_timer_expired"], [154, 4, 1, "", "kill_dul"], [154, 5, 1, "", "network_timeout"], [154, 4, 1, "", "peek_next_pdu"], [154, 4, 1, "", "receive_pdu"], [154, 4, 1, "", "run_reactor"], [154, 4, 1, "", "send_pdu"], [154, 6, 1, "", "socket"], [154, 6, 1, "", "state_machine"], [154, 4, 1, "", "stop_dul"], [154, 6, 1, "", "to_provider_queue"], [154, 6, 1, "", "to_user_queue"]], "pynetdicom.events": [[155, 3, 1, "", "Event"], [156, 3, 1, "", "InterventionEvent"], [157, 3, 1, "", "NotificationEvent"], [158, 2, 1, "", "trigger"]], "pynetdicom.events.Event": [[155, 4, 1, "", "__init__"], [155, 5, 1, "", "action_information"], [155, 5, 1, "", "action_type"], [155, 6, 1, "", "assoc"], [155, 5, 1, "", "attribute_identifiers"], [155, 5, 1, "", "attribute_list"], [155, 5, 1, "", "dataset"], [155, 5, 1, "", "dataset_path"], [155, 5, 1, "", "event"], [155, 5, 1, "", "event_information"], [155, 5, 1, "", "event_type"], [155, 5, 1, "", "file_meta"], [155, 5, 1, "", "identifier"], [155, 5, 1, "", "is_cancelled"], [155, 5, 1, "", "message_id"], [155, 5, 1, "", "modification_list"], [155, 5, 1, "", "move_destination"], [155, 6, 1, "", "timestamp"]], "pynetdicom.events.InterventionEvent": [[156, 4, 1, "", "__init__"], [156, 6, 1, "", "description"], [156, 6, 1, "", "is_intervention"], [156, 6, 1, "", "is_notification"], [156, 6, 1, "", "name"]], "pynetdicom.events.NotificationEvent": [[157, 4, 1, "", "__init__"], [157, 6, 1, "", "description"], [157, 6, 1, "", "is_intervention"], [157, 6, 1, "", "is_notification"], [157, 6, 1, "", "name"]], "pynetdicom.fsm": [[159, 2, 1, "", "AA_1"], [160, 2, 1, "", "AA_2"], [161, 2, 1, "", "AA_3"], [162, 2, 1, "", "AA_4"], [163, 2, 1, "", "AA_5"], [164, 2, 1, "", "AA_6"], [165, 2, 1, "", "AA_7"], [166, 2, 1, "", "AA_8"], [167, 2, 1, "", "AE_1"], [168, 2, 1, "", "AE_2"], [169, 2, 1, "", "AE_3"], [170, 2, 1, "", "AE_4"], [171, 2, 1, "", "AE_5"], [172, 2, 1, "", "AE_6"], [173, 2, 1, "", "AE_7"], [174, 2, 1, "", "AE_8"], [175, 2, 1, "", "AR_1"], [176, 2, 1, "", "AR_10"], [177, 2, 1, "", "AR_2"], [178, 2, 1, "", "AR_3"], [179, 2, 1, "", "AR_4"], [180, 2, 1, "", "AR_5"], [181, 2, 1, "", "AR_6"], [182, 2, 1, "", "AR_7"], [183, 2, 1, "", "AR_8"], [184, 2, 1, "", "AR_9"], [185, 2, 1, "", "DT_1"], [186, 2, 1, "", "DT_2"], [187, 3, 1, "", "StateMachine"]], "pynetdicom.fsm.StateMachine": [[187, 4, 1, "", "__init__"], [187, 6, 1, "", "current_state"], [187, 4, 1, "", "do_action"], [187, 6, 1, "", "dul"], [187, 4, 1, "", "transition"]], "pynetdicom.pdu": [[188, 3, 1, "", "A_ABORT_RQ"], [189, 3, 1, "", "A_ASSOCIATE_AC"], [190, 3, 1, "", "A_ASSOCIATE_RJ"], [191, 3, 1, "", "A_ASSOCIATE_RQ"], [192, 3, 1, "", "A_RELEASE_RP"], [193, 3, 1, "", "A_RELEASE_RQ"], [194, 3, 1, "", "P_DATA_TF"], [195, 3, 1, "", "PresentationDataValueItem"]], "pynetdicom.pdu.A_ABORT_RQ": [[188, 4, 1, "", "__init__"], [188, 4, 1, "", "from_primitive"], [188, 5, 1, "", "pdu_length"], [188, 6, 1, "", "pdu_type"], [188, 6, 1, "", "reason_diagnostic"], [188, 5, 1, "", "reason_str"], [188, 6, 1, "", "source"], [188, 5, 1, "", "source_str"], [188, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.A_ASSOCIATE_AC": [[189, 4, 1, "", "__init__"], [189, 5, 1, "", "application_context_name"], [189, 5, 1, "", "called_ae_title"], [189, 5, 1, "", "calling_ae_title"], [189, 4, 1, "", "from_primitive"], [189, 5, 1, "", "pdu_length"], [189, 6, 1, "", "pdu_type"], [189, 5, 1, "", "presentation_context"], [189, 6, 1, "", "protocol_version"], [189, 5, 1, "", "reserved_aec"], [189, 5, 1, "", "reserved_aet"], [189, 4, 1, "", "to_primitive"], [189, 5, 1, "", "user_information"], [189, 6, 1, "", "variable_items"]], "pynetdicom.pdu.A_ASSOCIATE_RJ": [[190, 4, 1, "", "__init__"], [190, 4, 1, "", "from_primitive"], [190, 5, 1, "", "pdu_length"], [190, 6, 1, "", "pdu_type"], [190, 6, 1, "", "reason_diagnostic"], [190, 5, 1, "", "reason_str"], [190, 6, 1, "", "result"], [190, 5, 1, "", "result_str"], [190, 6, 1, "", "source"], [190, 5, 1, "", "source_str"], [190, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.A_ASSOCIATE_RQ": [[191, 4, 1, "", "__init__"], [191, 5, 1, "", "application_context_name"], [191, 5, 1, "", "called_ae_title"], [191, 5, 1, "", "calling_ae_title"], [191, 4, 1, "", "from_primitive"], [191, 5, 1, "", "pdu_length"], [191, 6, 1, "", "pdu_type"], [191, 5, 1, "", "presentation_context"], [191, 6, 1, "", "protocol_version"], [191, 4, 1, "", "to_primitive"], [191, 5, 1, "", "user_information"], [191, 6, 1, "", "variable_items"]], "pynetdicom.pdu.A_RELEASE_RP": [[192, 4, 1, "", "__init__"], [192, 4, 1, "", "from_primitive"], [192, 5, 1, "", "pdu_length"], [192, 6, 1, "", "pdu_type"], [192, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.A_RELEASE_RQ": [[193, 4, 1, "", "__init__"], [193, 4, 1, "", "from_primitive"], [193, 5, 1, "", "pdu_length"], [193, 6, 1, "", "pdu_type"], [193, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.P_DATA_TF": [[194, 4, 1, "", "__init__"], [194, 4, 1, "", "from_primitive"], [194, 5, 1, "", "pdu_length"], [194, 6, 1, "", "pdu_type"], [194, 6, 1, "", "presentation_data_value_items"], [194, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.PresentationDataValueItem": [[195, 4, 1, "", "__init__"], [195, 5, 1, "", "context_id"], [195, 5, 1, "", "data"], [195, 5, 1, "", "item_length"], [195, 5, 1, "", "item_type"], [195, 5, 1, "", "message_control_header_byte"]], "pynetdicom.pdu_items": [[196, 3, 1, "", "AbstractSyntaxSubItem"], [197, 3, 1, "", "ApplicationContextItem"], [198, 3, 1, "", "AsynchronousOperationsWindowSubItem"], [199, 3, 1, "", "ImplementationClassUIDSubItem"], [200, 3, 1, "", "ImplementationVersionNameSubItem"], [201, 3, 1, "", "MaximumLengthSubItem"], [202, 3, 1, "", "PresentationContextItemAC"], [203, 3, 1, "", "PresentationContextItemRQ"], [204, 3, 1, "", "PresentationDataValueItem"], [205, 3, 1, "", "SCP_SCU_RoleSelectionSubItem"], [206, 3, 1, "", "SOPClassCommonExtendedNegotiationSubItem"], [207, 3, 1, "", "SOPClassExtendedNegotiationSubItem"], [208, 3, 1, "", "TransferSyntaxSubItem"], [209, 3, 1, "", "UserIdentitySubItemAC"], [210, 3, 1, "", "UserIdentitySubItemRQ"], [211, 3, 1, "", "UserInformationItem"]], "pynetdicom.pdu_items.AbstractSyntaxSubItem": [[196, 4, 1, "", "__init__"], [196, 5, 1, "", "abstract_syntax"], [196, 5, 1, "", "abstract_syntax_name"], [196, 5, 1, "", "item_length"]], "pynetdicom.pdu_items.ApplicationContextItem": [[197, 4, 1, "", "__init__"], [197, 5, 1, "", "application_context_name"], [197, 5, 1, "", "item_length"]], "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem": [[198, 4, 1, "", "__init__"], [198, 4, 1, "", "from_primitive"], [198, 5, 1, "", "item_length"], [198, 5, 1, "", "max_operations_invoked"], [198, 5, 1, "", "max_operations_performed"], [198, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.ImplementationClassUIDSubItem": [[199, 4, 1, "", "__init__"], [199, 4, 1, "", "from_primitive"], [199, 5, 1, "", "implementation_class_uid"], [199, 5, 1, "", "item_length"], [199, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.ImplementationVersionNameSubItem": [[200, 4, 1, "", "__init__"], [200, 4, 1, "", "from_primitive"], [200, 5, 1, "", "implementation_version_name"], [200, 5, 1, "", "item_length"], [200, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.MaximumLengthSubItem": [[201, 4, 1, "", "__init__"], [201, 4, 1, "", "from_primitive"], [201, 5, 1, "", "item_length"], [201, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.PresentationContextItemAC": [[202, 4, 1, "", "__init__"], [202, 5, 1, "", "context_id"], [202, 4, 1, "", "from_primitive"], [202, 5, 1, "", "item_length"], [202, 5, 1, "", "result"], [202, 5, 1, "", "result_str"], [202, 4, 1, "", "to_primitive"], [202, 5, 1, "", "transfer_syntax"]], "pynetdicom.pdu_items.PresentationContextItemRQ": [[203, 4, 1, "", "__init__"], [203, 5, 1, "", "abstract_syntax"], [203, 5, 1, "", "context_id"], [203, 4, 1, "", "from_primitive"], [203, 5, 1, "", "item_length"], [203, 4, 1, "", "to_primitive"], [203, 5, 1, "", "transfer_syntax"]], "pynetdicom.pdu_items.PresentationDataValueItem": [[204, 4, 1, "", "__init__"], [204, 5, 1, "", "context_id"], [204, 5, 1, "", "data"], [204, 5, 1, "", "item_length"], [204, 5, 1, "", "item_type"], [204, 5, 1, "", "message_control_header_byte"]], "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem": [[205, 4, 1, "", "__init__"], [205, 4, 1, "", "from_primitive"], [205, 5, 1, "", "item_length"], [205, 5, 1, "", "scp"], [205, 5, 1, "", "scp_role"], [205, 5, 1, "", "scu"], [205, 5, 1, "", "scu_role"], [205, 5, 1, "", "sop_class_uid"], [205, 4, 1, "", "to_primitive"], [205, 5, 1, "", "uid"], [205, 5, 1, "", "uid_length"]], "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem": [[206, 4, 1, "", "__init__"], [206, 4, 1, "", "from_primitive"], [206, 5, 1, "", "item_length"], [206, 5, 1, "", "related_general_sop_class_identification"], [206, 5, 1, "", "related_general_sop_class_identification_length"], [206, 5, 1, "", "service_class_uid"], [206, 5, 1, "", "service_class_uid_length"], [206, 5, 1, "", "sop_class_uid"], [206, 5, 1, "", "sop_class_uid_length"], [206, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem": [[207, 4, 1, "", "__init__"], [207, 5, 1, "", "app_info"], [207, 4, 1, "", "from_primitive"], [207, 5, 1, "", "item_length"], [207, 5, 1, "", "sop_class_uid"], [207, 5, 1, "", "sop_class_uid_length"], [207, 4, 1, "", "to_primitive"], [207, 5, 1, "", "uid"]], "pynetdicom.pdu_items.TransferSyntaxSubItem": [[208, 4, 1, "", "__init__"], [208, 5, 1, "", "item_length"], [208, 5, 1, "", "transfer_syntax"], [208, 5, 1, "", "transfer_syntax_name"]], "pynetdicom.pdu_items.UserIdentitySubItemAC": [[209, 4, 1, "", "__init__"], [209, 4, 1, "", "from_primitive"], [209, 5, 1, "", "item_length"], [209, 5, 1, "", "response"], [209, 5, 1, "", "server_response_length"], [209, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.UserIdentitySubItemRQ": [[210, 4, 1, "", "__init__"], [210, 4, 1, "", "from_primitive"], [210, 5, 1, "", "id_type"], [210, 5, 1, "", "id_type_str"], [210, 5, 1, "", "item_length"], [210, 5, 1, "", "primary"], [210, 5, 1, "", "primary_field_length"], [210, 5, 1, "", "response_requested"], [210, 5, 1, "", "secondary"], [210, 5, 1, "", "secondary_field_length"], [210, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.UserInformationItem": [[211, 4, 1, "", "__init__"], [211, 5, 1, "", "async_ops_window"], [211, 5, 1, "", "common_ext_neg"], [211, 5, 1, "", "ext_neg"], [211, 4, 1, "", "from_primitive"], [211, 5, 1, "", "implementation_class_uid"], [211, 5, 1, "", "implementation_version_name"], [211, 5, 1, "", "item_length"], [211, 5, 1, "", "maximum_length"], [211, 5, 1, "", "role_selection"], [211, 4, 1, "", "to_primitive"], [211, 5, 1, "", "user_identity"]], "pynetdicom.pdu_primitives": [[212, 3, 1, "", "A_ABORT"], [213, 3, 1, "", "A_ASSOCIATE"], [214, 3, 1, "", "A_P_ABORT"], [215, 3, 1, "", "A_RELEASE"], [216, 3, 1, "", "AsynchronousOperationsWindowNegotiation"], [217, 3, 1, "", "ImplementationClassUIDNotification"], [218, 3, 1, "", "ImplementationVersionNameNotification"], [219, 3, 1, "", "MaximumLengthNotification"], [220, 3, 1, "", "P_DATA"], [221, 3, 1, "", "SCP_SCU_RoleSelectionNegotiation"], [222, 3, 1, "", "SOPClassCommonExtendedNegotiation"], [223, 3, 1, "", "SOPClassExtendedNegotiation"], [224, 3, 1, "", "UserIdentityNegotiation"]], "pynetdicom.pdu_primitives.A_ABORT": [[212, 4, 1, "", "__init__"], [212, 5, 1, "", "abort_source"]], "pynetdicom.pdu_primitives.A_ASSOCIATE": [[213, 4, 1, "", "__init__"], [213, 5, 1, "", "application_context_name"], [213, 5, 1, "", "called_ae_title"], [213, 5, 1, "", "called_presentation_address"], [213, 5, 1, "", "calling_ae_title"], [213, 5, 1, "", "calling_presentation_address"], [213, 5, 1, "", "diagnostic"], [213, 5, 1, "", "implementation_class_uid"], [213, 5, 1, "", "maximum_length_received"], [213, 5, 1, "", "mode"], [213, 5, 1, "", "presentation_context_definition_list"], [213, 5, 1, "", "presentation_context_definition_results_list"], [213, 5, 1, "", "presentation_requirements"], [213, 5, 1, "", "reason_str"], [213, 5, 1, "", "responding_ae_title"], [213, 5, 1, "", "responding_presentation_address"], [213, 5, 1, "", "result"], [213, 5, 1, "", "result_source"], [213, 5, 1, "", "result_str"], [213, 5, 1, "", "session_requirements"], [213, 5, 1, "", "source_str"], [213, 5, 1, "", "user_information"]], "pynetdicom.pdu_primitives.A_P_ABORT": [[214, 4, 1, "", "__init__"], [214, 5, 1, "", "provider_reason"]], "pynetdicom.pdu_primitives.A_RELEASE": [[215, 4, 1, "", "__init__"], [215, 5, 1, "", "reason"], [215, 5, 1, "", "result"]], "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation": [[216, 4, 1, "", "__init__"], [216, 4, 1, "", "from_primitive"], [216, 5, 1, "", "maximum_number_operations_invoked"], [216, 5, 1, "", "maximum_number_operations_performed"]], "pynetdicom.pdu_primitives.ImplementationClassUIDNotification": [[217, 4, 1, "", "__init__"], [217, 4, 1, "", "from_primitive"], [217, 5, 1, "", "implementation_class_uid"]], "pynetdicom.pdu_primitives.ImplementationVersionNameNotification": [[218, 4, 1, "", "__init__"], [218, 4, 1, "", "from_primitive"], [218, 5, 1, "", "implementation_version_name"]], "pynetdicom.pdu_primitives.MaximumLengthNotification": [[219, 4, 1, "", "__init__"], [219, 4, 1, "", "from_primitive"], [219, 5, 1, "", "maximum_length_received"]], "pynetdicom.pdu_primitives.P_DATA": [[220, 4, 1, "", "__init__"], [220, 5, 1, "", "presentation_data_value_list"]], "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation": [[221, 4, 1, "", "__init__"], [221, 4, 1, "", "from_primitive"], [221, 5, 1, "", "scp_role"], [221, 5, 1, "", "scu_role"], [221, 5, 1, "", "sop_class_uid"]], "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation": [[222, 4, 1, "", "__init__"], [222, 4, 1, "", "from_primitive"], [222, 5, 1, "", "related_general_sop_class_identification"], [222, 5, 1, "", "service_class_uid"], [222, 5, 1, "", "sop_class_uid"]], "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation": [[223, 4, 1, "", "__init__"], [223, 4, 1, "", "from_primitive"], [223, 5, 1, "", "service_class_application_information"], [223, 5, 1, "", "sop_class_uid"]], "pynetdicom.pdu_primitives.UserIdentityNegotiation": [[224, 4, 1, "", "__init__"], [224, 4, 1, "", "from_primitive"], [224, 5, 1, "", "positive_response_requested"], [224, 5, 1, "", "primary_field"], [224, 5, 1, "", "secondary_field"], [224, 5, 1, "", "server_response"], [224, 5, 1, "", "user_identity_type"]], "pynetdicom.presentation": [[225, 1, 1, "", "AllStoragePresentationContexts"], [226, 1, 1, "", "ApplicationEventLoggingPresentationContexts"], [227, 1, 1, "", "BasicWorklistManagementPresentationContexts"], [228, 1, 1, "", "ColorPalettePresentationContexts"], [229, 1, 1, "", "DefinedProcedureProtocolPresentationContexts"], [230, 1, 1, "", "DisplaySystemPresentationContexts"], [231, 1, 1, "", "HangingProtocolPresentationContexts"], [232, 1, 1, "", "ImplantTemplatePresentationContexts"], [233, 1, 1, "", "InstanceAvailabilityPresentationContexts"], [234, 1, 1, "", "MediaCreationManagementPresentationContexts"], [235, 1, 1, "", "MediaStoragePresentationContexts"], [236, 1, 1, "", "ModalityPerformedPresentationContexts"], [237, 1, 1, "", "NonPatientObjectPresentationContexts"], [238, 3, 1, "", "PresentationContext"], [239, 3, 1, "", "PresentationContextTuple"], [240, 1, 1, "", "PrintManagementPresentationContexts"], [241, 1, 1, "", "ProcedureStepPresentationContexts"], [242, 1, 1, "", "ProtocolApprovalPresentationContexts"], [243, 1, 1, "", "QueryRetrievePresentationContexts"], [244, 1, 1, "", "RTMachineVerificationPresentationContexts"], [245, 1, 1, "", "RelevantPatientInformationPresentationContexts"], [246, 1, 1, "", "StorageCommitmentPresentationContexts"], [247, 1, 1, "", "StoragePresentationContexts"], [248, 1, 1, "", "SubstanceAdministrationPresentationContexts"], [249, 1, 1, "", "UnifiedProcedurePresentationContexts"], [250, 1, 1, "", "VerificationPresentationContexts"], [251, 2, 1, "", "build_context"], [252, 2, 1, "", "build_role"], [253, 2, 1, "", "negotiate_as_acceptor"], [254, 2, 1, "", "negotiate_as_requestor"]], "pynetdicom.presentation.PresentationContext": [[238, 4, 1, "", "__init__"], [238, 5, 1, "", "abstract_syntax"], [238, 4, 1, "", "add_transfer_syntax"], [238, 5, 1, "", "as_scp"], [238, 5, 1, "", "as_scu"], [238, 5, 1, "", "as_tuple"], [238, 5, 1, "", "context_id"], [238, 6, 1, "", "result"], [238, 5, 1, "", "scp_role"], [238, 5, 1, "", "scu_role"], [238, 5, 1, "", "status"], [238, 5, 1, "", "transfer_syntax"]], "pynetdicom.presentation.PresentationContextTuple": [[239, 4, 1, "", "__init__"], [239, 6, 1, "", "abstract_syntax"], [239, 6, 1, "", "context_id"], [239, 6, 1, "", "transfer_syntax"]], "pynetdicom.service_class": [[255, 3, 1, "", "BasicWorklistManagementServiceClass"], [256, 3, 1, "", "ColorPaletteQueryRetrieveServiceClass"], [257, 3, 1, "", "DefinedProcedureProtocolQueryRetrieveServiceClass"], [258, 3, 1, "", "HangingProtocolQueryRetrieveServiceClass"], [259, 3, 1, "", "ImplantTemplateQueryRetrieveServiceClass"], [260, 3, 1, "", "NonPatientObjectStorageServiceClass"], [261, 3, 1, "", "ProtocolApprovalQueryRetrieveServiceClass"], [262, 3, 1, "", "QueryRetrieveServiceClass"], [263, 3, 1, "", "RelevantPatientInformationQueryServiceClass"], [264, 3, 1, "", "StorageServiceClass"], [265, 3, 1, "", "SubstanceAdministrationQueryServiceClass"], [266, 3, 1, "", "VerificationServiceClass"]], "pynetdicom.service_class.BasicWorklistManagementServiceClass": [[255, 4, 1, "", "SCP"], [255, 4, 1, "", "__init__"]], "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass": [[256, 4, 1, "", "__init__"]], "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass": [[257, 4, 1, "", "__init__"]], "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass": [[258, 4, 1, "", "__init__"]], "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass": [[259, 4, 1, "", "__init__"]], "pynetdicom.service_class.NonPatientObjectStorageServiceClass": [[260, 4, 1, "", "__init__"]], "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass": [[261, 4, 1, "", "__init__"]], "pynetdicom.service_class.QueryRetrieveServiceClass": [[262, 4, 1, "", "SCP"], [262, 4, 1, "", "__init__"]], "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass": [[263, 4, 1, "", "SCP"], [263, 4, 1, "", "__init__"]], "pynetdicom.service_class.StorageServiceClass": [[264, 4, 1, "", "SCP"], [264, 4, 1, "", "__init__"]], "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass": [[265, 4, 1, "", "SCP"], [265, 4, 1, "", "__init__"]], "pynetdicom.service_class.VerificationServiceClass": [[266, 4, 1, "", "SCP"], [266, 4, 1, "", "__init__"]], "pynetdicom.service_class_n": [[267, 3, 1, "", "ApplicationEventLoggingServiceClass"], [268, 3, 1, "", "DisplaySystemManagementServiceClass"], [269, 3, 1, "", "InstanceAvailabilityNotificationServiceClass"], [270, 3, 1, "", "MediaCreationManagementServiceClass"], [271, 3, 1, "", "PrintManagementServiceClass"], [272, 3, 1, "", "ProcedureStepServiceClass"], [273, 3, 1, "", "RTMachineVerificationServiceClass"], [274, 3, 1, "", "StorageCommitmentServiceClass"], [275, 3, 1, "", "UnifiedProcedureStepServiceClass"]], "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass": [[267, 4, 1, "", "SCP"], [267, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.DisplaySystemManagementServiceClass": [[268, 4, 1, "", "SCP"], [268, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass": [[269, 4, 1, "", "SCP"], [269, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.MediaCreationManagementServiceClass": [[270, 4, 1, "", "SCP"], [270, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.PrintManagementServiceClass": [[271, 4, 1, "", "SCP"], [271, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.ProcedureStepServiceClass": [[272, 4, 1, "", "SCP"], [272, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.RTMachineVerificationServiceClass": [[273, 4, 1, "", "SCP"], [273, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.StorageCommitmentServiceClass": [[274, 4, 1, "", "SCP"], [274, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass": [[275, 4, 1, "", "SCP"], [275, 4, 1, "", "__init__"]], "pynetdicom.sop_class": [[276, 1, 1, "", "AcquisitionContextSRStorage"], [277, 1, 1, "", "AdvancedBlendingPresentationStateStorage"], [278, 1, 1, "", "AmbulatoryECGWaveformStorage"], [279, 1, 1, "", "ArterialPulseWaveformStorage"], [280, 1, 1, "", "AutorefractionMeasurementsStorage"], [281, 1, 1, "", "BasicAnnotationBox"], [282, 1, 1, "", "BasicColorImageBox"], [283, 1, 1, "", "BasicColorPrintManagementMeta"], [284, 1, 1, "", "BasicFilmBox"], [285, 1, 1, "", "BasicFilmSession"], [286, 1, 1, "", "BasicGrayscaleImageBox"], [287, 1, 1, "", "BasicGrayscalePrintManagementMeta"], [288, 1, 1, "", "BasicStructuredDisplayStorage"], [289, 1, 1, "", "BasicTextSRStorage"], [290, 1, 1, "", "BasicVoiceAudioWaveformStorage"], [291, 1, 1, "", "BlendingSoftcopyPresentationStateStorage"], [292, 1, 1, "", "BodyPositionWaveformStorage"], [293, 1, 1, "", "BreastImagingRelevantPatientInformationQuery"], [294, 1, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [295, 1, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [296, 1, 1, "", "BreastTomosynthesisImageStorage"], [297, 1, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [298, 1, 1, "", "CArmPhotonElectronRadiationStorage"], [299, 1, 1, "", "CTDefinedProcedureProtocolStorage"], [300, 1, 1, "", "CTImageStorage"], [301, 1, 1, "", "CTPerformedProcedureProtocolStorage"], [302, 1, 1, "", "CardiacElectrophysiologyWaveformStorage"], [303, 1, 1, "", "CardiacRelevantPatientInformationQuery"], [304, 1, 1, "", "ChestCADSRStorage"], [305, 1, 1, "", "ColonCADSRStorage"], [306, 1, 1, "", "ColorPaletteInformationModelFind"], [307, 1, 1, "", "ColorPaletteInformationModelGet"], [308, 1, 1, "", "ColorPaletteInformationModelMove"], [309, 1, 1, "", "ColorPaletteStorage"], [310, 1, 1, "", "ColorSoftcopyPresentationStateStorage"], [311, 1, 1, "", "CompositeInstanceRetrieveWithoutBulkDataGet"], [312, 1, 1, "", "CompositeInstanceRootRetrieveGet"], [313, 1, 1, "", "CompositeInstanceRootRetrieveMove"], [314, 1, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [315, 1, 1, "", "Comprehensive3DSRStorage"], [316, 1, 1, "", "ComprehensiveSRStorage"], [317, 1, 1, "", "ComputedRadiographyImageStorage"], [318, 1, 1, "", "ContentAssessmentResultsStorage"], [319, 1, 1, "", "CornealTopographyMapStorage"], [320, 1, 1, "", "DefinedProcedureProtocolInformationModelFind"], [321, 1, 1, "", "DefinedProcedureProtocolInformationModelGet"], [322, 1, 1, "", "DefinedProcedureProtocolInformationModelMove"], [323, 1, 1, "", "DeformableSpatialRegistrationStorage"], [324, 1, 1, "", "DermoscopicPhotographyImageStorage"], [325, 1, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [326, 1, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [327, 1, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [328, 1, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [329, 1, 1, "", "DigitalXRayImageStorageForPresentation"], [330, 1, 1, "", "DigitalXRayImageStorageForProcessing"], [331, 1, 1, "", "DisplaySystem"], [332, 1, 1, "", "DisplaySystemInstance"], [333, 1, 1, "", "ElectromyogramWaveformStorage"], [334, 1, 1, "", "ElectrooculogramWaveformStorage"], [335, 1, 1, "", "EncapsulatedCDAStorage"], [336, 1, 1, "", "EncapsulatedMTLStorage"], [337, 1, 1, "", "EncapsulatedOBJStorage"], [338, 1, 1, "", "EncapsulatedPDFStorage"], [339, 1, 1, "", "EncapsulatedSTLStorage"], [340, 1, 1, "", "EnhancedCTImageStorage"], [341, 1, 1, "", "EnhancedContinuousRTImageStorage"], [342, 1, 1, "", "EnhancedMRColorImageStorage"], [343, 1, 1, "", "EnhancedMRImageStorage"], [344, 1, 1, "", "EnhancedPETImageStorage"], [345, 1, 1, "", "EnhancedRTImageStorage"], [346, 1, 1, "", "EnhancedSRStorage"], [347, 1, 1, "", "EnhancedUSVolumeStorage"], [348, 1, 1, "", "EnhancedXAImageStorage"], [349, 1, 1, "", "EnhancedXRFImageStorage"], [350, 1, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [351, 1, 1, "", "ExtensibleSRStorage"], [352, 1, 1, "", "General32bitECGWaveformStorage"], [353, 1, 1, "", "GeneralAudioWaveformStorage"], [354, 1, 1, "", "GeneralECGWaveformStorage"], [355, 1, 1, "", "GeneralRelevantPatientInformationQuery"], [356, 1, 1, "", "GenericImplantTemplateInformationModelFind"], [357, 1, 1, "", "GenericImplantTemplateInformationModelGet"], [358, 1, 1, "", "GenericImplantTemplateInformationModelMove"], [359, 1, 1, "", "GenericImplantTemplateStorage"], [360, 1, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [361, 1, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [362, 1, 1, "", "HangingProtocolInformationModelFind"], [363, 1, 1, "", "HangingProtocolInformationModelGet"], [364, 1, 1, "", "HangingProtocolInformationModelMove"], [365, 1, 1, "", "HangingProtocolStorage"], [366, 1, 1, "", "HemodynamicWaveformStorage"], [367, 1, 1, "", "ImplantAssemblyTemplateInformationModelFind"], [368, 1, 1, "", "ImplantAssemblyTemplateInformationModelGet"], [369, 1, 1, "", "ImplantAssemblyTemplateInformationModelMove"], [370, 1, 1, "", "ImplantAssemblyTemplateStorage"], [371, 1, 1, "", "ImplantTemplateGroupInformationModelFind"], [372, 1, 1, "", "ImplantTemplateGroupInformationModelGet"], [373, 1, 1, "", "ImplantTemplateGroupInformationModelMove"], [374, 1, 1, "", "ImplantTemplateGroupStorage"], [375, 1, 1, "", "ImplantationPlanSRStorage"], [376, 1, 1, "", "InstanceAvailabilityNotification"], [377, 1, 1, "", "IntraocularLensCalculationsStorage"], [378, 1, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [379, 1, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [380, 1, 1, "", "InventoryCreation"], [381, 1, 1, "", "InventoryFind"], [382, 1, 1, "", "InventoryGet"], [383, 1, 1, "", "InventoryMove"], [384, 1, 1, "", "InventoryStorage"], [385, 1, 1, "", "KeratometryMeasurementsStorage"], [386, 1, 1, "", "KeyObjectSelectionDocumentStorage"], [387, 1, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [388, 1, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [389, 1, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [390, 1, 1, "", "LensometryMeasurementsStorage"], [391, 1, 1, "", "MRImageStorage"], [392, 1, 1, "", "MRSpectroscopyStorage"], [393, 1, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [394, 1, 1, "", "MammographyCADSRStorage"], [395, 1, 1, "", "MediaCreationManagement"], [396, 1, 1, "", "MediaStorageDirectoryStorage"], [397, 1, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [398, 1, 1, "", "ModalityPerformedProcedureStep"], [399, 1, 1, "", "ModalityPerformedProcedureStepNotification"], [400, 1, 1, "", "ModalityPerformedProcedureStepRetrieve"], [401, 1, 1, "", "ModalityWorklistInformationFind"], [402, 1, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [403, 1, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [404, 1, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [405, 1, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [406, 1, 1, "", "MultichannelRespiratoryWaveformStorage"], [407, 1, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [408, 1, 1, "", "NuclearMedicineImageStorage"], [409, 1, 1, "", "OphthalmicAxialMeasurementsStorage"], [410, 1, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [411, 1, 1, "", "OphthalmicPhotography16BitImageStorage"], [412, 1, 1, "", "OphthalmicPhotography8BitImageStorage"], [413, 1, 1, "", "OphthalmicThicknessMapStorage"], [414, 1, 1, "", "OphthalmicTomographyImageStorage"], [415, 1, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [416, 1, 1, "", "OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [417, 1, 1, "", "ParametricMapStorage"], [418, 1, 1, "", "PatientRadiationDoseSRStorage"], [419, 1, 1, "", "PatientRootQueryRetrieveInformationModelFind"], [420, 1, 1, "", "PatientRootQueryRetrieveInformationModelGet"], [421, 1, 1, "", "PatientRootQueryRetrieveInformationModelMove"], [422, 1, 1, "", "PatientStudyOnlyQueryRetrieveInformationModelFind"], [423, 1, 1, "", "PatientStudyOnlyQueryRetrieveInformationModelGet"], [424, 1, 1, "", "PatientStudyOnlyQueryRetrieveInformationModelMove"], [425, 1, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [426, 1, 1, "", "PhotoacousticImageStorage"], [427, 1, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [428, 1, 1, "", "PositronEmissionTomographyImageStorage"], [429, 1, 1, "", "PresentationLUT"], [430, 1, 1, "", "PrintJob"], [431, 1, 1, "", "Printer"], [432, 1, 1, "", "PrinterConfigurationRetrieval"], [433, 1, 1, "", "PrinterConfigurationRetrievalInstance"], [434, 1, 1, "", "PrinterInstance"], [435, 1, 1, "", "ProceduralEventLogging"], [436, 1, 1, "", "ProceduralEventLoggingInstance"], [437, 1, 1, "", "ProcedureLogStorage"], [438, 1, 1, "", "ProductCharacteristicsQuery"], [439, 1, 1, "", "ProtocolApprovalInformationModelFind"], [440, 1, 1, "", "ProtocolApprovalInformationModelGet"], [441, 1, 1, "", "ProtocolApprovalInformationModelMove"], [442, 1, 1, "", "ProtocolApprovalStorage"], [443, 1, 1, "", "PseudoColorSoftcopyPresentationStageStorage"], [444, 1, 1, "", "RTBeamsDeliveryInstructionStorage"], [445, 1, 1, "", "RTBeamsTreatmentRecordStorage"], [446, 1, 1, "", "RTBrachyApplicationSetupDeliveryInstructionsStorage"], [447, 1, 1, "", "RTBrachyTreatmentRecordStorage"], [448, 1, 1, "", "RTConventionalMachineVerification"], [449, 1, 1, "", "RTDoseStorage"], [450, 1, 1, "", "RTImageStorage"], [451, 1, 1, "", "RTIonBeamsTreatmentRecordStorage"], [452, 1, 1, "", "RTIonMachineVerification"], [453, 1, 1, "", "RTIonPlanStorage"], [454, 1, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [455, 1, 1, "", "RTPhysicianIntentStorage"], [456, 1, 1, "", "RTPlanStorage"], [457, 1, 1, "", "RTRadiationRecordSetStorage"], [458, 1, 1, "", "RTRadiationSalvageRecordStorage"], [459, 1, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [460, 1, 1, "", "RTRadiationSetStorage"], [461, 1, 1, "", "RTSegmentAnnotationStorage"], [462, 1, 1, "", "RTStructureSetStorage"], [463, 1, 1, "", "RTTreatmentPreparationStorage"], [464, 1, 1, "", "RTTreatmentSummaryRecordStorage"], [465, 1, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [466, 1, 1, "", "RawDataStorage"], [467, 1, 1, "", "RealWorldValueMappingStorage"], [468, 1, 1, "", "RepositoryQuery"], [469, 1, 1, "", "RespiratoryWaveformStorage"], [470, 1, 1, "", "RoboticArmRadiationRecordStorage"], [471, 1, 1, "", "RoboticArmRadiationStorage"], [472, 1, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [473, 3, 1, "", "SOPClass"], [474, 1, 1, "", "SecondaryCaptureImageStorage"], [475, 1, 1, "", "SegmentationStorage"], [476, 1, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [477, 1, 1, "", "SimplifiedAdultEchoSRStorage"], [478, 1, 1, "", "SleepElectroencephalogramWaveformStorage"], [479, 1, 1, "", "SpatialFiducialsStorage"], [480, 1, 1, "", "SpatialRegistrationStorage"], [481, 1, 1, "", "SpectaclePrescriptionReportStorage"], [482, 1, 1, "", "StereometricRelationshipStorage"], [483, 1, 1, "", "StorageCommitmentPushModel"], [484, 1, 1, "", "StorageCommitmentPushModelInstance"], [485, 1, 1, "", "StorageManagementInstance"], [486, 1, 1, "", "StudyRootQueryRetrieveInformationModelFind"], [487, 1, 1, "", "StudyRootQueryRetrieveInformationModelGet"], [488, 1, 1, "", "StudyRootQueryRetrieveInformationModelMove"], [489, 1, 1, "", "SubjectiveRefractionMeasurementsStorage"], [490, 1, 1, "", "SubstanceAdministrationLogging"], [491, 1, 1, "", "SubstanceAdministrationLoggingInstance"], [492, 1, 1, "", "SubstanceApprovalQuery"], [493, 1, 1, "", "SurfaceScanMeshStorage"], [494, 1, 1, "", "SurfaceScanPointCloudStorage"], [495, 1, 1, "", "SurfaceSegmentationStorage"], [496, 1, 1, "", "TomotherapeuticRadiationRecordStorage"], [497, 1, 1, "", "TomotherapeuticRadiationStorage"], [498, 1, 1, "", "TractographyResultsStorage"], [499, 1, 1, "", "TwelveLeadECGWaveformStorage"], [500, 1, 1, "", "UPSFilteredGlobalSubscriptionInstance"], [501, 1, 1, "", "UPSGlobalSubscriptionInstance"], [502, 1, 1, "", "UltrasoundImageStorage"], [503, 1, 1, "", "UltrasoundMultiFrameImageStorage"], [504, 1, 1, "", "UnifiedProcedureStepEvent"], [505, 1, 1, "", "UnifiedProcedureStepPull"], [506, 1, 1, "", "UnifiedProcedureStepPush"], [507, 1, 1, "", "UnifiedProcedureStepQuery"], [508, 1, 1, "", "UnifiedProcedureStepWatch"], [509, 1, 1, "", "VLEndoscopicImageStorage"], [510, 1, 1, "", "VLMicroscopicImageStorage"], [511, 1, 1, "", "VLPhotographicImageStorage"], [512, 1, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [513, 1, 1, "", "VLWholeSlideMicroscopyImageStorage"], [514, 1, 1, "", "VariableModalityLUTSoftcopyPresentationStageStorage"], [515, 1, 1, "", "Verification"], [516, 1, 1, "", "VideoEndoscopicImageStorage"], [517, 1, 1, "", "VideoMicroscopicImageStorage"], [518, 1, 1, "", "VideoPhotographicImageStorage"], [519, 1, 1, "", "VisualAcuityMeasurementsStorage"], [520, 1, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [521, 1, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [522, 1, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [523, 1, 1, "", "XADefinedProcedureProtocolStorage"], [524, 1, 1, "", "XAPerformedProcedureProtocolStorage"], [525, 1, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [526, 1, 1, "", "XRay3DAngiographicImageStorage"], [527, 1, 1, "", "XRay3DCraniofacialImageStorage"], [528, 1, 1, "", "XRayAngiographicImageStorage"], [529, 1, 1, "", "XRayRadiationDoseSRStorage"], [530, 1, 1, "", "XRayRadiofluoroscopicImageStorage"], [531, 2, 1, "", "register_uid"], [532, 2, 1, "", "uid_to_service_class"], [533, 2, 1, "", "uid_to_sop_class"]], "pynetdicom.sop_class.SOPClass": [[473, 4, 1, "", "__init__"], [473, 5, 1, "", "service_class"]], "pynetdicom.status": [[534, 3, 1, "", "Status"], [535, 2, 1, "", "code_to_category"], [536, 2, 1, "", "code_to_status"]], "pynetdicom.status.Status": [[534, 6, 1, "", "CANCEL"], [534, 6, 1, "", "MOVE_DESTINATION_UNKNOWN"], [534, 6, 1, "", "PENDING"], [534, 6, 1, "", "SUCCESS"], [534, 4, 1, "", "__init__"], [534, 4, 1, "", "add"]], "pynetdicom.timer": [[537, 3, 1, "", "Timer"]], "pynetdicom.timer.Timer": [[537, 4, 1, "", "__init__"], [537, 5, 1, "", "expired"], [537, 5, 1, "", "remaining"], [537, 4, 1, "", "restart"], [537, 4, 1, "", "start"], [537, 4, 1, "", "stop"], [537, 5, 1, "", "timeout"]], "pynetdicom.transport": [[538, 3, 1, "", "AssociationServer"], [539, 3, 1, "", "AssociationSocket"], [540, 3, 1, "", "RequestHandler"], [541, 3, 1, "", "T_CONNECT"], [542, 3, 1, "", "ThreadedAssociationServer"]], "pynetdicom.transport.AssociationServer": [[538, 4, 1, "", "__init__"], [538, 5, 1, "", "active_associations"], [538, 6, 1, "", "ae"], [538, 4, 1, "", "bind"], [538, 4, 1, "", "get_events"], [538, 4, 1, "", "get_handlers"], [538, 4, 1, "", "get_request"], [538, 4, 1, "", "process_request"], [538, 6, 1, "", "request_queue_size"], [538, 6, 1, "", "server_address"], [538, 4, 1, "", "server_bind"], [538, 4, 1, "", "server_close"], [538, 4, 1, "", "service_actions"], [538, 4, 1, "", "shutdown"], [538, 5, 1, "", "ssl_context"], [538, 4, 1, "", "unbind"]], "pynetdicom.transport.AssociationSocket": [[539, 4, 1, "", "__init__"], [539, 5, 1, "", "assoc"], [539, 4, 1, "", "close"], [539, 4, 1, "", "connect"], [539, 5, 1, "", "event_queue"], [539, 4, 1, "", "get_local_addr"], [539, 5, 1, "", "provider_queue"], [539, 5, 1, "", "ready"], [539, 4, 1, "", "recv"], [539, 6, 1, "", "select_timeout"], [539, 4, 1, "", "send"], [539, 6, 1, "", "socket"], [539, 5, 1, "", "tls_args"]], "pynetdicom.transport.RequestHandler": [[540, 4, 1, "", "__init__"], [540, 5, 1, "", "ae"], [540, 6, 1, "", "client_address"], [540, 4, 1, "", "handle"], [540, 5, 1, "", "local"], [540, 5, 1, "", "remote"], [540, 6, 1, "", "request"], [540, 6, 1, "", "server"]], "pynetdicom.transport.T_CONNECT": [[541, 4, 1, "", "__init__"], [541, 5, 1, "", "address"], [541, 6, 1, "", "request"], [541, 5, 1, "", "result"]], "pynetdicom.transport.ThreadedAssociationServer": [[542, 4, 1, "", "__init__"], [542, 4, 1, "", "process_request_thread"]], "pynetdicom.utils": [[543, 2, 1, "", "decode_bytes"], [544, 2, 1, "", "make_target"], [545, 2, 1, "", "pretty_bytes"], [546, 2, 1, "", "set_ae"], [547, 2, 1, "", "set_uid"], [548, 2, 1, "", "validate_uid"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:method", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"echoscp": 0, "descript": [0, 1, 2, 3, 6, 7, 8, 9], "usag": [0, 1, 2, 3, 6, 7, 8, 9], "option": [0, 1, 2, 3, 6, 7, 8, 9, 45], "gener": [0, 1, 2, 3, 6, 7, 8, 9], "network": [0, 1, 2, 3, 6, 7, 8, 9, 581, 585], "prefer": [0, 8], "transfer": [0, 1, 2, 3, 6, 7, 8, 9, 69, 550, 587], "syntax": [0, 1, 2, 3, 6, 7, 8, 9, 550, 587], "dicom": [0, 1, 2, 3, 6, 7, 8, 9, 51, 580, 581, 587], "conform": [0, 1, 2, 3, 6, 7, 8, 9], "verif": [0, 1, 7, 8, 39, 515, 553, 574, 579], "servic": [0, 1, 2, 3, 6, 7, 8, 9, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 61, 67, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586, 587, 588], "sop": [0, 1, 2, 3, 6, 7, 8, 9, 553, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584, 587], "class": [0, 1, 2, 3, 6, 7, 8, 9, 40, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 584, 587, 588], "echoscu": 1, "paramet": [1, 2, 3, 6, 9], "miscellan": [1, 8, 9, 50], "findscu": 2, "queri": [2, 3, 6, 7, 34, 35, 36, 37, 553, 560, 561, 563, 564, 571, 572, 573, 577], "inform": [2, 3, 6, 37, 54, 56, 573, 587], "model": [2, 3, 6, 587], "extend": [2, 3, 6, 586, 587], "negoti": [2, 3, 6, 551, 585, 586, 587, 590], "output": [2, 3, 6, 8], "keyword": [2, 3, 5, 6], "path": [2, 3, 5, 6], "exampl": [2, 3, 5, 6, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "retriev": [2, 3, 6, 7, 34, 35, 36, 553, 560, 561, 563, 564, 571, 572], "basic": [2, 7, 29, 553, 559], "worklist": [2, 7, 29, 553, 559], "manag": [2, 7, 29, 30, 32, 33, 553, 559, 562, 567, 568, 570], "unifi": [2, 7, 553, 578], "procedur": [2, 7, 32, 553, 561, 568, 578], "step": [2, 7, 32, 553, 568, 578, 580, 581], "getscu": 3, "applic": [4, 40, 43, 553, 558, 581, 585, 587], "movescu": 6, "storag": [6, 7, 8, 9, 38, 553, 569, 575, 576, 580], "scp": [6, 29, 30, 32, 34, 35, 36, 37, 38, 39, 580, 581, 585, 586, 590], "qrscp": 7, "databas": 7, "configur": [7, 45], "file": [7, 580], "storescp": 8, "storescu": 9, "input": 9, "releas": [10, 40, 57, 58, 65, 69, 583, 586], "note": [10, 40, 590], "1": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "0": [11, 12, 13, 14, 16, 18, 26, 27, 28], "fix": [11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28], "chang": [11, 12, 13, 14, 16, 18, 19, 20, 25, 26, 27, 28], "enhanc": [11, 12, 13, 14, 16, 18, 26, 28], "2": [13, 20, 26, 27, 28], "3": [14, 15, 21], "4": [16, 17, 22], "5": [18, 19, 20, 21, 22, 23, 24, 25], "known": [18, 553], "issu": 18, "6": 24, "7": 25, "scu": [29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 581, 585, 586, 590], "displai": [30, 553, 562], "system": [30, 553, 562], "code": [31, 40], "modal": [32, 568], "perform": [32, 568], "mpp": 32, "creat": [32, 566, 567, 568, 570, 574, 578, 580, 581, 585], "set": [32, 568, 570, 574, 578, 580], "print": [33, 553, 570], "grayscal": 33, "overview": 33, "dims": [33, 46, 47, 48, 49, 114, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "avail": [33, 553, 566], "find": [34, 559, 560, 561, 563, 564, 571, 572, 573, 577, 578], "get": [35, 40, 560, 561, 562, 563, 564, 567, 568, 570, 571, 572, 574, 578], "move": [36, 560, 561, 563, 564, 571, 572], "relev": [37, 553, 573], "patient": [37, 553, 569, 573], "pynetdicom": [40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 583, 590], "start": [40, 581], "user": [40, 54, 56, 585, 586, 589], "guid": [40, 589], "api": [40, 549], "refer": [40, 549, 585], "support": [40, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585], "acs": [41, 42, 109], "provid": [42, 49, 67, 586], "entiti": [43, 581, 585, 587], "ae": [43, 110, 581, 586], "associ": [44, 54, 55, 56, 63, 69, 111, 112, 581, 585, 586, 587, 588, 590], "_config": [45, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "messag": 47, "dimse_messag": [47, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "c": [47, 48, 559, 560, 561, 563, 564, 569, 571, 572, 573, 576, 577, 578, 579], "n": [47, 48, 558, 562, 566, 567, 568, 570, 574, 575, 578], "primit": [48, 61], "dimse_primit": [48, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "dataset": 50, "util": [50, 543, 544, 545, 546, 547, 548, 550, 553, 557], "dsutil": [50, 150, 151, 152, 153], "encod": [50, 151], "decod": [50, 150], "upper": 51, "layer": 51, "pdu": [52, 53, 54, 55, 56, 57, 58, 59, 60, 188, 189, 190, 191, 192, 193, 194, 195], "A": [53, 54, 55, 56, 57, 58, 62, 63, 64, 65], "abort": [53, 62, 64, 69], "rq": [53, 56, 58], "ac": 54, "variabl": [54, 56, 59, 550], "item": [54, 56, 59, 60], "present": [54, 56, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 551, 581, 585, 586, 587, 590], "context": [54, 56, 551, 581, 585, 586, 587, 590], "sub": [54, 56, 60], "rj": 55, "rp": 57, "p": [59, 64, 66], "data": [59, 66, 69, 580], "tf": 59, "pdu_item": [60, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "pdu_primit": [61, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "dul": [67, 154], "event": [68, 155, 156, 157, 158, 553, 558, 568, 570, 574, 575, 578, 580, 586, 588], "handler": [68, 580, 586, 588], "document": 68, "intervent": [68, 588], "notif": [68, 566, 588], "state": 69, "machin": [69, 553, 574], "fsm": [69, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "action": [69, 558, 567, 570, 574, 575, 578], "establish": 69, "pynetdicom_implementation_uid": 70, "pynetdicom_implementation_vers": 71, "pynetdicom_uid_prefix": 72, "codec": 73, "enforce_uid_conform": 74, "log_handler_level": 75, "log_request_identifi": 76, "log_response_identifi": 77, "pass_contextvar": 78, "store_recv_chunked_dataset": 79, "store_send_chunked_dataset": 80, "unrestricted_storage_servic": 81, "use_short_dimse_aet": 82, "valid": 83, "windows_timer_resolut": 84, "_global": [85, 86], "all_transfer_syntax": 85, "default_transfer_syntax": 86, "_handler": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "doc_handle_acs": 87, "doc_handle_act": 88, "doc_handle_assoc": 89, "doc_handle_async": 90, "doc_handle_c_get": 91, "doc_handle_cr": 92, "doc_handle_data": 93, "doc_handle_delet": 94, "doc_handle_dims": 95, "doc_handle_echo": 96, "doc_handle_event_report": 97, "doc_handle_find": 98, "doc_handle_fsm": 99, "doc_handle_mov": 100, "doc_handle_n_get": 101, "doc_handle_pdu": 102, "doc_handle_set": 103, "doc_handle_sop_common": 104, "doc_handle_sop_extend": 105, "doc_handle_stor": 106, "doc_handle_transport": 107, "doc_handle_userid": 108, "applicationent": 110, "serviceus": 112, "debug_logg": 113, "dimseserviceprovid": 114, "c_cancel_rq": 115, "c_echo_rq": 116, "c_echo_rsp": 117, "c_find_rq": 118, "c_find_rsp": 119, "c_get_rq": 120, "c_get_rsp": 121, "c_move_rq": 122, "c_move_rsp": 123, "c_store_rq": 124, "c_store_rsp": 125, "n_action_rq": 126, "n_action_rsp": 127, "n_create_rq": 128, "n_create_rsp": 129, "n_delete_rq": 130, "n_delete_rsp": 131, "n_event_report_rq": 132, "n_event_report_rsp": 133, "n_get_rq": 134, "n_get_rsp": 135, "n_set_rq": 136, "n_set_rsp": 137, "c_cancel": 138, "c_echo": 139, "c_find": 140, "c_get": 141, "c_move": 142, "c_store": 143, "n_action": 144, "n_creat": 145, "n_delet": 146, "n_event_report": 147, "n_get": 148, "n_set": 149, "pretty_dataset": 152, "pretty_el": 153, "dulserviceprovid": 154, "interventionev": 156, "notificationev": 157, "trigger": 158, "aa_1": 159, "aa_2": 160, "aa_3": 161, "aa_4": 162, "aa_5": 163, "aa_6": 164, "aa_7": 165, "aa_8": 166, "ae_1": 167, "ae_2": 168, "ae_3": 169, "ae_4": 170, "ae_5": 171, "ae_6": 172, "ae_7": 173, "ae_8": 174, "ar_1": 175, "ar_10": 176, "ar_2": 177, "ar_3": 178, "ar_4": 179, "ar_5": 180, "ar_6": 181, "ar_7": 182, "ar_8": 183, "ar_9": 184, "dt_1": 185, "dt_2": 186, "statemachin": 187, "a_abort_rq": 188, "a_associate_ac": 189, "a_associate_rj": 190, "a_associate_rq": 191, "a_release_rp": 192, "a_release_rq": 193, "p_data_tf": 194, "presentationdatavalueitem": [195, 204], "abstractsyntaxsubitem": 196, "applicationcontextitem": 197, "asynchronousoperationswindowsubitem": 198, "implementationclassuidsubitem": 199, "implementationversionnamesubitem": 200, "maximumlengthsubitem": 201, "presentationcontextitemac": 202, "presentationcontextitemrq": 203, "scp_scu_roleselectionsubitem": 205, "sopclasscommonextendednegotiationsubitem": 206, "sopclassextendednegotiationsubitem": 207, "transfersyntaxsubitem": 208, "useridentitysubitemac": 209, "useridentitysubitemrq": 210, "userinformationitem": 211, "a_abort": 212, "a_associ": 213, "a_p_abort": 214, "a_releas": 215, "asynchronousoperationswindownegoti": 216, "implementationclassuidnotif": 217, "implementationversionnamenotif": 218, "maximumlengthnotif": 219, "p_data": 220, "scp_scu_roleselectionnegoti": 221, "sopclasscommonextendednegoti": 222, "sopclassextendednegoti": 223, "useridentitynegoti": 224, "allstoragepresentationcontext": 225, "applicationeventloggingpresentationcontext": 226, "basicworklistmanagementpresentationcontext": 227, "colorpalettepresentationcontext": 228, "definedprocedureprotocolpresentationcontext": 229, "displaysystempresentationcontext": 230, "hangingprotocolpresentationcontext": 231, "implanttemplatepresentationcontext": 232, "instanceavailabilitypresentationcontext": 233, "mediacreationmanagementpresentationcontext": 234, "mediastoragepresentationcontext": 235, "modalityperformedpresentationcontext": 236, "nonpatientobjectpresentationcontext": 237, "presentationcontext": 238, "presentationcontexttupl": 239, "printmanagementpresentationcontext": 240, "proceduresteppresentationcontext": 241, "protocolapprovalpresentationcontext": 242, "queryretrievepresentationcontext": 243, "rtmachineverificationpresentationcontext": 244, "relevantpatientinformationpresentationcontext": 245, "storagecommitmentpresentationcontext": 246, "storagepresentationcontext": 247, "substanceadministrationpresentationcontext": 248, "unifiedprocedurepresentationcontext": 249, "verificationpresentationcontext": 250, "build_context": 251, "build_rol": 252, "negotiate_as_acceptor": 253, "negotiate_as_requestor": 254, "service_class": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 552], "basicworklistmanagementserviceclass": 255, "colorpalettequeryretrieveserviceclass": 256, "definedprocedureprotocolqueryretrieveserviceclass": 257, "hangingprotocolqueryretrieveserviceclass": 258, "implanttemplatequeryretrieveserviceclass": 259, "nonpatientobjectstorageserviceclass": 260, "protocolapprovalqueryretrieveserviceclass": 261, "queryretrieveserviceclass": 262, "relevantpatientinformationqueryserviceclass": 263, "storageserviceclass": 264, "substanceadministrationqueryserviceclass": 265, "verificationserviceclass": 266, "service_class_n": [267, 268, 269, 270, 271, 272, 273, 274, 275], "applicationeventloggingserviceclass": 267, "displaysystemmanagementserviceclass": 268, "instanceavailabilitynotificationserviceclass": 269, "mediacreationmanagementserviceclass": 270, "printmanagementserviceclass": 271, "procedurestepserviceclass": 272, "rtmachineverificationserviceclass": 273, "storagecommitmentserviceclass": 274, "unifiedprocedurestepserviceclass": 275, "sop_class": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 553], "acquisitioncontextsrstorag": 276, "advancedblendingpresentationstatestorag": 277, "ambulatoryecgwaveformstorag": 278, "arterialpulsewaveformstorag": 279, "autorefractionmeasurementsstorag": 280, "basicannotationbox": 281, "basiccolorimagebox": 282, "basiccolorprintmanagementmeta": 283, "basicfilmbox": 284, "basicfilmsess": 285, "basicgrayscaleimagebox": 286, "basicgrayscaleprintmanagementmeta": 287, "basicstructureddisplaystorag": 288, "basictextsrstorag": 289, "basicvoiceaudiowaveformstorag": 290, "blendingsoftcopypresentationstatestorag": 291, "bodypositionwaveformstorag": 292, "breastimagingrelevantpatientinformationqueri": 293, "breastprojectionxrayimagestorageforpresent": 294, "breastprojectionxrayimagestorageforprocess": 295, "breasttomosynthesisimagestorag": 296, "carmphotonelectronradiationrecordstorag": 297, "carmphotonelectronradiationstorag": 298, "ctdefinedprocedureprotocolstorag": 299, "ctimagestorag": 300, "ctperformedprocedureprotocolstorag": 301, "cardiacelectrophysiologywaveformstorag": 302, "cardiacrelevantpatientinformationqueri": 303, "chestcadsrstorag": 304, "coloncadsrstorag": 305, "colorpaletteinformationmodelfind": 306, "colorpaletteinformationmodelget": 307, "colorpaletteinformationmodelmov": 308, "colorpalettestorag": 309, "colorsoftcopypresentationstatestorag": 310, "compositeinstanceretrievewithoutbulkdataget": 311, "compositeinstancerootretrieveget": 312, "compositeinstancerootretrievemov": 313, "compositingplanarmprvolumetricpresentationstatestorag": 314, "comprehensive3dsrstorag": 315, "comprehensivesrstorag": 316, "computedradiographyimagestorag": 317, "contentassessmentresultsstorag": 318, "cornealtopographymapstorag": 319, "definedprocedureprotocolinformationmodelfind": 320, "definedprocedureprotocolinformationmodelget": 321, "definedprocedureprotocolinformationmodelmov": 322, "deformablespatialregistrationstorag": 323, "dermoscopicphotographyimagestorag": 324, "digitalintraoralxrayimagestorageforpresent": 325, "digitalintraoralxrayimagestorageforprocess": 326, "digitalmammographyxrayimagestorageforpresent": 327, "digitalmammographyxrayimagestorageforprocess": 328, "digitalxrayimagestorageforpresent": 329, "digitalxrayimagestorageforprocess": 330, "displaysystem": 331, "displaysysteminst": 332, "electromyogramwaveformstorag": 333, "electrooculogramwaveformstorag": 334, "encapsulatedcdastorag": 335, "encapsulatedmtlstorag": 336, "encapsulatedobjstorag": 337, "encapsulatedpdfstorag": 338, "encapsulatedstlstorag": 339, "enhancedctimagestorag": 340, "enhancedcontinuousrtimagestorag": 341, "enhancedmrcolorimagestorag": 342, "enhancedmrimagestorag": 343, "enhancedpetimagestorag": 344, "enhancedrtimagestorag": 345, "enhancedsrstorag": 346, "enhancedusvolumestorag": 347, "enhancedxaimagestorag": 348, "enhancedxrfimagestorag": 349, "enhancedxrayradiationdosesrstorag": 350, "extensiblesrstorag": 351, "general32bitecgwaveformstorag": 352, "generalaudiowaveformstorag": 353, "generalecgwaveformstorag": 354, "generalrelevantpatientinformationqueri": 355, "genericimplanttemplateinformationmodelfind": 356, "genericimplanttemplateinformationmodelget": 357, "genericimplanttemplateinformationmodelmov": 358, "genericimplanttemplatestorag": 359, "grayscaleplanarmprvolumetricpresentationstatestorag": 360, "grayscalesoftcopypresentationstatestorag": 361, "hangingprotocolinformationmodelfind": 362, "hangingprotocolinformationmodelget": 363, "hangingprotocolinformationmodelmov": 364, "hangingprotocolstorag": 365, "hemodynamicwaveformstorag": 366, "implantassemblytemplateinformationmodelfind": 367, "implantassemblytemplateinformationmodelget": 368, "implantassemblytemplateinformationmodelmov": 369, "implantassemblytemplatestorag": 370, "implanttemplategroupinformationmodelfind": 371, "implanttemplategroupinformationmodelget": 372, "implanttemplategroupinformationmodelmov": 373, "implanttemplategroupstorag": 374, "implantationplansrstorag": 375, "instanceavailabilitynotif": 376, "intraocularlenscalculationsstorag": 377, "intravascularopticalcoherencetomographyimagestorageforpresent": 378, "intravascularopticalcoherencetomographyimagestorageforprocess": 379, "inventorycr": 380, "inventoryfind": 381, "inventoryget": 382, "inventorymov": 383, "inventorystorag": 384, "keratometrymeasurementsstorag": 385, "keyobjectselectiondocumentstorag": 386, "legacyconvertedenhancedctimagestorag": 387, "legacyconvertedenhancedmrimagestorag": 388, "legacyconvertedenhancedpetimagestorag": 389, "lensometrymeasurementsstorag": 390, "mrimagestorag": 391, "mrspectroscopystorag": 392, "maculargridthicknessandvolumereportstorag": 393, "mammographycadsrstorag": 394, "mediacreationmanag": 395, "mediastoragedirectorystorag": 396, "microscopybulksimpleannotationsstorag": 397, "modalityperformedprocedurestep": 398, "modalityperformedprocedurestepnotif": 399, "modalityperformedprocedurestepretriev": 400, "modalityworklistinformationfind": 401, "multiframegrayscalebytesecondarycaptureimagestorag": 402, "multiframegrayscalewordsecondarycaptureimagestorag": 403, "multiframesinglebitsecondarycaptureimagestorag": 404, "multiframetruecolorsecondarycaptureimagestorag": 405, "multichannelrespiratorywaveformstorag": 406, "multiplevolumerenderingvolumetricpresentationstatestorag": 407, "nuclearmedicineimagestorag": 408, "ophthalmicaxialmeasurementsstorag": 409, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 410, "ophthalmicphotography16bitimagestorag": 411, "ophthalmicphotography8bitimagestorag": 412, "ophthalmicthicknessmapstorag": 413, "ophthalmictomographyimagestorag": 414, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 415, "ophthlamicopticalcoherencetomographybscanvolumeanalysisstorag": 416, "parametricmapstorag": 417, "patientradiationdosesrstorag": 418, "patientrootqueryretrieveinformationmodelfind": 419, "patientrootqueryretrieveinformationmodelget": 420, "patientrootqueryretrieveinformationmodelmov": 421, "patientstudyonlyqueryretrieveinformationmodelfind": 422, "patientstudyonlyqueryretrieveinformationmodelget": 423, "patientstudyonlyqueryretrieveinformationmodelmov": 424, "performedimagingagentadministrationsrstorag": 425, "photoacousticimagestorag": 426, "plannedimagingagentadministrationsrstorag": 427, "positronemissiontomographyimagestorag": 428, "presentationlut": 429, "printjob": 430, "printer": 431, "printerconfigurationretriev": 432, "printerconfigurationretrievalinst": 433, "printerinst": 434, "proceduraleventlog": 435, "proceduraleventlogginginst": 436, "procedurelogstorag": 437, "productcharacteristicsqueri": 438, "protocolapprovalinformationmodelfind": 439, "protocolapprovalinformationmodelget": 440, "protocolapprovalinformationmodelmov": 441, "protocolapprovalstorag": 442, "pseudocolorsoftcopypresentationstagestorag": 443, "rtbeamsdeliveryinstructionstorag": 444, "rtbeamstreatmentrecordstorag": 445, "rtbrachyapplicationsetupdeliveryinstructionsstorag": 446, "rtbrachytreatmentrecordstorag": 447, "rtconventionalmachineverif": 448, "rtdosestorag": 449, "rtimagestorag": 450, "rtionbeamstreatmentrecordstorag": 451, "rtionmachineverif": 452, "rtionplanstorag": 453, "rtpatientpositionacquisitioninstructionstorag": 454, "rtphysicianintentstorag": 455, "rtplanstorag": 456, "rtradiationrecordsetstorag": 457, "rtradiationsalvagerecordstorag": 458, "rtradiationsetdeliveryinstructionstorag": 459, "rtradiationsetstorag": 460, "rtsegmentannotationstorag": 461, "rtstructuresetstorag": 462, "rttreatmentpreparationstorag": 463, "rttreatmentsummaryrecordstorag": 464, "radiopharmaceuticalradiationdosesrstorag": 465, "rawdatastorag": 466, "realworldvaluemappingstorag": 467, "repositoryqueri": 468, "respiratorywaveformstorag": 469, "roboticarmradiationrecordstorag": 470, "roboticarmradiationstorag": 471, "routinescalpelectroencephalogramwaveformstorag": 472, "sopclass": 473, "secondarycaptureimagestorag": 474, "segmentationstorag": 475, "segmentedvolumerenderingvolumetricpresentationstatestorag": 476, "simplifiedadultechosrstorag": 477, "sleepelectroencephalogramwaveformstorag": 478, "spatialfiducialsstorag": 479, "spatialregistrationstorag": 480, "spectacleprescriptionreportstorag": 481, "stereometricrelationshipstorag": 482, "storagecommitmentpushmodel": 483, "storagecommitmentpushmodelinst": 484, "storagemanagementinst": 485, "studyrootqueryretrieveinformationmodelfind": 486, "studyrootqueryretrieveinformationmodelget": 487, "studyrootqueryretrieveinformationmodelmov": 488, "subjectiverefractionmeasurementsstorag": 489, "substanceadministrationlog": 490, "substanceadministrationlogginginst": 491, "substanceapprovalqueri": 492, "surfacescanmeshstorag": 493, "surfacescanpointcloudstorag": 494, "surfacesegmentationstorag": 495, "tomotherapeuticradiationrecordstorag": 496, "tomotherapeuticradiationstorag": 497, "tractographyresultsstorag": 498, "twelveleadecgwaveformstorag": 499, "upsfilteredglobalsubscriptioninst": 500, "upsglobalsubscriptioninst": 501, "ultrasoundimagestorag": 502, "ultrasoundmultiframeimagestorag": 503, "unifiedprocedurestepev": 504, "unifiedproceduresteppul": 505, "unifiedproceduresteppush": 506, "unifiedprocedurestepqueri": 507, "unifiedprocedurestepwatch": 508, "vlendoscopicimagestorag": 509, "vlmicroscopicimagestorag": 510, "vlphotographicimagestorag": 511, "vlslidecoordinatesmicroscopicimagestorag": 512, "vlwholeslidemicroscopyimagestorag": 513, "variablemodalitylutsoftcopypresentationstagestorag": 514, "videoendoscopicimagestorag": 516, "videomicroscopicimagestorag": 517, "videophotographicimagestorag": 518, "visualacuitymeasurementsstorag": 519, "volumerenderingvolumetricpresentationstatestorag": 520, "widefieldophthalmicphotography3dcoordinatesimagestorag": 521, "widefieldophthalmicphotographystereographicprojectionimagestorag": 522, "xadefinedprocedureprotocolstorag": 523, "xaperformedprocedureprotocolstorag": 524, "xaxrfgrayscalesoftcopypresentationstatestorag": 525, "xray3dangiographicimagestorag": 526, "xray3dcraniofacialimagestorag": 527, "xrayangiographicimagestorag": 528, "xrayradiationdosesrstorag": 529, "xrayradiofluoroscopicimagestorag": 530, "register_uid": 531, "uid_to_service_class": 532, "uid_to_sop_class": 533, "statu": [534, 535, 536, 554], "code_to_categori": 535, "code_to_statu": 536, "timer": [537, 555], "transport": [538, 539, 540, 541, 542, 556], "associationserv": 538, "associationsocket": 539, "requesthandl": 540, "t_connect": 541, "threadedassociationserv": 542, "decode_byt": 543, "make_target": 544, "pretty_byt": 545, "set_a": 546, "set_uid": 547, "validate_uid": 548, "list": 550, "pre": 551, "built": 551, "color": [553, 560], "palett": [553, 560], "defin": [553, 561], "hang": [553, 563], "protocol": [553, 561, 563, 571], "implant": [553, 564], "templat": [553, 564], "instanc": [553, 566], "inventori": 553, "media": [553, 567], "creation": [553, 567], "non": [553, 569], "object": [553, 569, 587], "approv": [553, 571], "rt": [553, 574], "commit": [553, 575], "substanc": [553, 577], "well": 553, "status": [554, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "log": 558, "report": [568, 570, 574, 575, 578], "store": [569, 576], "meta": 570, "delet": [570, 574], "administr": 577, "up": 578, "echo": [579, 581], "write": [580, 581], "your": [580, 581], "first": [580, 581], "The": 580, "customis": 580, "format": 580, "expand": 580, "optimis": 580, "pass": 580, "extra": 580, "argument": 580, "next": [580, 581], "what": 581, "i": 581, "an": [581, 585, 586], "troubleshoot": 581, "turn": 581, "our": 581, "tutori": 582, "how": 583, "instal": 583, "offici": 583, "us": [583, 586], "pip": 583, "conda": 583, "after": 583, "develop": 583, "version": 583, "regist": 584, "new": 584, "ad": 585, "request": [585, 586], "specifi": [585, 586], "port": 585, "handl": 585, "role": [585, 590], "select": [585, 590], "ident": [585, 586], "bind": [585, 586], "address": 585, "call": 586, "titl": 586, "each": 586, "tl": 586, "outcom": 586, "access": 586, "respons": 586, "listen": 586, "import": 587, "concept": 587, "uid": 587, "definit": 587, "iod": 587, "abstract": 587, "relat": 588, "introduct": 590, "represent": 590, "requestor": 590, "acceptor": 590, "implement": 590}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"echoscp": [[0, "echoscp"]], "Description": [[0, "description"], [1, "description"], [2, "description"], [3, "description"], [6, "description"], [7, "description"], [8, "description"], [9, "description"]], "Usage": [[0, "usage"], [1, "usage"], [2, "usage"], [3, "usage"], [6, "usage"], [7, "usage"], [8, "usage"], [9, "usage"]], "Options": [[0, "options"], [1, "options"], [2, "options"], [3, "options"], [6, "options"], [7, "options"], [8, "options"], [9, "options"]], "General Options": [[0, "general-options"], [1, "general-options"], [2, "general-options"], [3, "general-options"], [6, "general-options"], [7, "general-options"], [8, "general-options"], [9, "general-options"]], "Network Options": [[0, "network-options"], [1, "network-options"], [2, "network-options"], [3, "network-options"], [6, "network-options"], [7, "network-options"], [8, "network-options"], [9, "network-options"]], "Preferred Transfer Syntaxes": [[0, "preferred-transfer-syntaxes"], [8, "preferred-transfer-syntaxes"]], "DICOM Conformance": [[0, "dicom-conformance"], [1, "dicom-conformance"], [2, "dicom-conformance"], [3, "dicom-conformance"], [6, "dicom-conformance"], [7, "dicom-conformance"], [8, "dicom-conformance"], [9, "dicom-conformance"]], "Verification Service": [[0, "verification-service"], [1, "verification-service"], [7, "verification-service"], [8, "verification-service"]], "SOP Classes": [[0, "sop-classes"], [1, "sop-classes"], [2, "sop-classes"], [2, "id1"], [2, "id3"], [3, "sop-classes"], [3, "id1"], [6, "sop-classes"], [6, "id1"], [7, "sop-classes"], [7, "id1"], [7, "id3"], [7, "id5"], [7, "id7"], [8, "sop-classes"], [8, "id1"], [9, "sop-classes"], [553, "sop-classes"], [587, "sop-classes"]], "Transfer Syntaxes": [[0, "transfer-syntaxes"], [1, "transfer-syntaxes"], [2, "transfer-syntaxes"], [2, "id2"], [2, "id4"], [3, "transfer-syntaxes"], [3, "id2"], [6, "transfer-syntaxes"], [6, "id2"], [7, "transfer-syntaxes"], [7, "id2"], [7, "id4"], [7, "id6"], [7, "id8"], [8, "transfer-syntaxes"], [8, "id2"], [9, "transfer-syntaxes"]], "echoscu": [[1, "echoscu"]], "Parameters": [[1, "parameters"], [2, "parameters"], [3, "parameters"], [6, "parameters"], [9, "parameters"]], "Transfer Syntax Options": [[1, "transfer-syntax-options"], [9, "transfer-syntax-options"]], "Miscellaneous Options": [[1, "miscellaneous-options"], [9, "miscellaneous-options"]], "findscu": [[2, "findscu"]], "Query Information Model Options": [[2, "query-information-model-options"], [3, "query-information-model-options"], [6, "query-information-model-options"]], "Query Options": [[2, "query-options"], [3, "query-options"], [6, "query-options"]], "Extended Negotiation Options": [[2, "extended-negotiation-options"], [3, "extended-negotiation-options"], [6, "extended-negotiation-options"]], "Output Options": [[2, "output-options"], [3, "output-options"], [6, "output-options"]], "Keyword pathing": [[2, "keyword-pathing"], [3, "keyword-pathing"], [5, "keyword-pathing"], [6, "keyword-pathing"]], "Examples": [[2, "examples"], [3, "examples"], [5, "examples"], [6, "examples"]], "Query/Retrieve Service": [[2, "query-retrieve-service"], [3, "query-retrieve-service"], [6, "query-retrieve-service"], [7, "query-retrieve-service"]], "Basic Worklist Management Service": [[2, "basic-worklist-management-service"], [7, "basic-worklist-management-service"]], "Unified Procedure Step  Service": [[2, "unified-procedure-step-service"], [7, "unified-procedure-step-service"]], "getscu": [[3, "getscu"]], "Applications": [[4, "applications"], [40, "applications"]], "movescu": [[6, "movescu"]], "Storage SCP Options": [[6, "storage-scp-options"]], "Storage Service": [[6, "storage-service"], [7, "storage-service"], [8, "storage-service"], [9, "storage-service"]], "qrscp": [[7, "qrscp"]], "Database Options": [[7, "database-options"]], "Configuration File": [[7, "configuration-file"]], "storescp": [[8, "storescp"]], "Output": [[8, "output"]], "Miscellaneous": [[8, "miscellaneous"], [50, "miscellaneous"]], "storescu": [[9, "storescu"]], "Input Options": [[9, "input-options"]], "Release Notes": [[10, "release-notes"], [40, "release-notes"]], "1.0.0": [[11, "v1-0-0"]], "Fixes": [[11, "fixes"], [12, "fixes"], [13, "fixes"], [14, "fixes"], [15, "fixes"], [16, "fixes"], [17, "fixes"], [18, "fixes"], [21, "fixes"], [22, "fixes"], [23, "fixes"], [24, "fixes"], [25, "fixes"], [26, "fixes"], [28, "fixes"]], "Changes": [[11, "changes"], [12, "changes"], [13, "changes"], [14, "changes"], [16, "changes"], [18, "changes"], [19, "changes"], [20, "changes"], [25, "changes"], [26, "changes"], [27, "changes"], [28, "changes"]], "Enhancements": [[11, "enhancements"], [12, "enhancements"], [13, "enhancements"], [14, "enhancements"], [16, "enhancements"], [18, "enhancements"], [26, "enhancements"], [28, "enhancements"]], "1.1.0": [[12, "v1-1-0"]], "1.2.0": [[13, "v1-2-0"]], "1.3.0": [[14, "v1-3-0"]], "1.3.1": [[15, "v1-3-1"]], "1.4.0": [[16, "v1-4-0"]], "1.4.1": [[17, "v1-4-1"]], "1.5.0": [[18, "v1-5-0"]], "Known Issues": [[18, "known-issues"]], "1.5.1": [[19, "v1-5-1"]], "1.5.2": [[20, "v1-5-2"]], "1.5.3": [[21, "v1-5-3"]], "1.5.4": [[22, "v1-5-4"]], "1.5.5": [[23, "v1-5-5"]], "1.5.6": [[24, "v1-5-6"]], "1.5.7": [[25, "v1-5-7"]], "2.0.0": [[26, "v2-0-0"]], "2.0.1": [[27, "v2-0-1"]], "2.1.0": [[28, "v2-1-0"]], "Basic Worklist Management Service Examples": [[29, "basic-worklist-management-service-examples"]], "Basic Worklist Management SCU": [[29, "basic-worklist-management-scu"]], "Basic Worklist Management SCP": [[29, "basic-worklist-management-scp"]], "Display System Management Service Examples": [[30, "display-system-management-service-examples"]], "Display System Management SCU": [[30, "display-system-management-scu"]], "Display System Management SCP": [[30, "display-system-management-scp"]], "Code Examples": [[31, "code-examples"], [40, "code-examples"]], "Modality Performed Procedure Step Management Service Examples": [[32, "modality-performed-procedure-step-management-service-examples"]], "MPPS - Create SCU": [[32, "mpps-create-scu"]], "MPPS - Set SCU": [[32, "mpps-set-scu"]], "MPPS SCP": [[32, "mpps-scp"]], "Print Management Service Examples": [[33, "print-management-service-examples"]], "Grayscale Print SCU": [[33, "grayscale-print-scu"]], "Overview": [[33, "overview"]], "DIMSE Services Available": [[33, "dimse-services-available"]], "Example": [[33, "example"]], "Query/Retrieve (Find) Service Examples": [[34, "query-retrieve-find-service-examples"]], "Query/Retrieve (Find) SCU": [[34, "query-retrieve-find-scu"]], "Query/Retrieve (Find) SCP": [[34, "query-retrieve-find-scp"]], "Query/Retrieve (Get) Service Examples": [[35, "query-retrieve-get-service-examples"]], "Query/Retrieve (Get) SCU": [[35, "query-retrieve-get-scu"]], "Query/Retrieve (Get) SCP": [[35, "query-retrieve-get-scp"]], "Query/Retrieve (Move) Service Examples": [[36, "query-retrieve-move-service-examples"]], "Query/Retrieve (Move) SCU": [[36, "query-retrieve-move-scu"]], "Query/Retrieve (Move) SCP": [[36, "query-retrieve-move-scp"]], "Relevant Patient Information Query Service Examples": [[37, "relevant-patient-information-query-service-examples"]], "Relevant Patient Information SCU": [[37, "relevant-patient-information-scu"]], "Relevant Patient Information SCP": [[37, "relevant-patient-information-scp"]], "Storage Service Examples": [[38, "storage-service-examples"]], "Storage SCU": [[38, "storage-scu"]], "Storage SCP": [[38, "storage-scp"]], "Verification Service Examples": [[39, "verification-service-examples"]], "Verification SCU": [[39, "verification-scu"]], "Verification SCP": [[39, "verification-scp"]], "pynetdicom": [[40, "pynetdicom"], [550, "pynetdicom"]], "Getting started": [[40, "getting-started"]], "User Guide": [[40, "user-guide"], [589, "user-guide"]], "API Reference": [[40, "api-reference"], [549, "api-reference"]], "Supported Service Classes": [[40, "supported-service-classes"], [565, "supported-service-classes"]], "ACSE Service (pynetdicom.acse)": [[41, "acse-service-pynetdicom-acse"]], "ACSE Service Provider (pynetdicom.acse)": [[42, "acse-service-provider-pynetdicom-acse"]], "Application Entity (pynetdicom.ae)": [[43, "application-entity-pynetdicom-ae"]], "Association (pynetdicom.association)": [[44, "association-pynetdicom-association"]], "Configuration Options (pynetdicom._config)": [[45, "configuration-options-pynetdicom-config"]], "DIMSE Service": [[46, "dimse-service"]], "Messages (pynetdicom.dimse_messages)": [[47, "messages-pynetdicom-dimse-messages"]], "DIMSE-C Messages": [[47, "dimse-c-messages"]], "DIMSE-N Messages": [[47, "dimse-n-messages"]], "Service Primitives (pynetdicom.dimse_primitives)": [[48, "service-primitives-pynetdicom-dimse-primitives"]], "DIMSE-C Primitives": [[48, "dimse-c-primitives"]], "DIMSE-N Primitives": [[48, "dimse-n-primitives"]], "Service Provider (pynetdicom.dimse)": [[49, "service-provider-pynetdicom-dimse"]], "Dataset Utilities (pynetdicom.dsutils)": [[50, "dataset-utilities-pynetdicom-dsutils"]], "Encoding and Decoding": [[50, "encoding-and-decoding"]], "DICOM Upper Layer": [[51, "dicom-upper-layer"]], "PDUs (pynetdicom.pdu)": [[52, "pdus-pynetdicom-pdu"]], "A-ABORT-RQ PDU": [[53, "a-abort-rq-pdu"]], "PDU": [[53, "pdu"], [54, "pdu"], [55, "pdu"], [56, "pdu"], [57, "pdu"], [58, "pdu"], [59, "pdu"]], "A-ASSOCIATE-AC PDU": [[54, "a-associate-ac-pdu"]], "Variable Items": [[54, "variable-items"], [56, "variable-items"], [59, "variable-items"]], "Presentation Context Sub-items": [[54, "presentation-context-sub-items"], [56, "presentation-context-sub-items"]], "User Information Sub-items": [[54, "user-information-sub-items"], [56, "user-information-sub-items"]], "A-ASSOCIATE-RJ PDU": [[55, "a-associate-rj-pdu"]], "A-ASSOCIATE-RQ PDU": [[56, "a-associate-rq-pdu"]], "A-RELEASE-RP PDU": [[57, "a-release-rp-pdu"]], "A-RELEASE-RQ PDU": [[58, "a-release-rq-pdu"]], "P-DATA-TF PDU": [[59, "p-data-tf-pdu"]], "PDU Items and Sub-items (pynetdicom.pdu_items)": [[60, "pdu-items-and-sub-items-pynetdicom-pdu-items"]], "Service Primitives (pynetdicom.pdu_primitives)": [[61, "service-primitives-pynetdicom-pdu-primitives"]], "A-ABORT": [[62, "a-abort"]], "A-ASSOCIATE": [[63, "a-associate"]], "A-P-ABORT": [[64, "a-p-abort"]], "A-RELEASE": [[65, "a-release"]], "P-DATA": [[66, "p-data"]], "DUL Service Provider (pynetdicom.dul)": [[67, "dul-service-provider-pynetdicom-dul"]], "Events and Handlers (pynetdicom.events)": [[68, "events-and-handlers-pynetdicom-events"]], "Documentation for Intervention Event Handlers": [[68, "documentation-for-intervention-event-handlers"]], "Documentation for Notification Event Handlers": [[68, "documentation-for-notification-event-handlers"]], "State Machine (pynetdicom.fsm)": [[69, "state-machine-pynetdicom-fsm"]], "State Machine": [[69, "state-machine"]], "Actions": [[69, "actions"]], "Association Establishment": [[69, "association-establishment"]], "Data Transfer": [[69, "data-transfer"]], "Association Release": [[69, "association-release"]], "Association Abort": [[69, "association-abort"]], "pynetdicom.PYNETDICOM_IMPLEMENTATION_UID": [[70, "pynetdicom-pynetdicom-implementation-uid"]], "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION": [[71, "pynetdicom-pynetdicom-implementation-version"]], "pynetdicom.PYNETDICOM_UID_PREFIX": [[72, "pynetdicom-pynetdicom-uid-prefix"]], "pynetdicom._config.CODECS": [[73, "pynetdicom-config-codecs"]], "pynetdicom._config.ENFORCE_UID_CONFORMANCE": [[74, "pynetdicom-config-enforce-uid-conformance"]], "pynetdicom._config.LOG_HANDLER_LEVEL": [[75, "pynetdicom-config-log-handler-level"]], "pynetdicom._config.LOG_REQUEST_IDENTIFIERS": [[76, "pynetdicom-config-log-request-identifiers"]], "pynetdicom._config.LOG_RESPONSE_IDENTIFIERS": [[77, "pynetdicom-config-log-response-identifiers"]], "pynetdicom._config.PASS_CONTEXTVARS": [[78, "pynetdicom-config-pass-contextvars"]], "pynetdicom._config.STORE_RECV_CHUNKED_DATASET": [[79, "pynetdicom-config-store-recv-chunked-dataset"]], "pynetdicom._config.STORE_SEND_CHUNKED_DATASET": [[80, "pynetdicom-config-store-send-chunked-dataset"]], "pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE": [[81, "pynetdicom-config-unrestricted-storage-service"]], "pynetdicom._config.USE_SHORT_DIMSE_AET": [[82, "pynetdicom-config-use-short-dimse-aet"]], "pynetdicom._config.VALIDATORS": [[83, "pynetdicom-config-validators"]], "pynetdicom._config.WINDOWS_TIMER_RESOLUTION": [[84, "pynetdicom-config-windows-timer-resolution"]], "pynetdicom._globals.ALL_TRANSFER_SYNTAXES": [[85, "pynetdicom-globals-all-transfer-syntaxes"]], "pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES": [[86, "pynetdicom-globals-default-transfer-syntaxes"]], "pynetdicom._handlers.doc_handle_acse": [[87, "pynetdicom-handlers-doc-handle-acse"]], "pynetdicom._handlers.doc_handle_action": [[88, "pynetdicom-handlers-doc-handle-action"]], "pynetdicom._handlers.doc_handle_assoc": [[89, "pynetdicom-handlers-doc-handle-assoc"]], "pynetdicom._handlers.doc_handle_async": [[90, "pynetdicom-handlers-doc-handle-async"]], "pynetdicom._handlers.doc_handle_c_get": [[91, "pynetdicom-handlers-doc-handle-c-get"]], "pynetdicom._handlers.doc_handle_create": [[92, "pynetdicom-handlers-doc-handle-create"]], "pynetdicom._handlers.doc_handle_data": [[93, "pynetdicom-handlers-doc-handle-data"]], "pynetdicom._handlers.doc_handle_delete": [[94, "pynetdicom-handlers-doc-handle-delete"]], "pynetdicom._handlers.doc_handle_dimse": [[95, "pynetdicom-handlers-doc-handle-dimse"]], "pynetdicom._handlers.doc_handle_echo": [[96, "pynetdicom-handlers-doc-handle-echo"]], "pynetdicom._handlers.doc_handle_event_report": [[97, "pynetdicom-handlers-doc-handle-event-report"]], "pynetdicom._handlers.doc_handle_find": [[98, "pynetdicom-handlers-doc-handle-find"]], "pynetdicom._handlers.doc_handle_fsm": [[99, "pynetdicom-handlers-doc-handle-fsm"]], "pynetdicom._handlers.doc_handle_move": [[100, "pynetdicom-handlers-doc-handle-move"]], "pynetdicom._handlers.doc_handle_n_get": [[101, "pynetdicom-handlers-doc-handle-n-get"]], "pynetdicom._handlers.doc_handle_pdu": [[102, "pynetdicom-handlers-doc-handle-pdu"]], "pynetdicom._handlers.doc_handle_set": [[103, "pynetdicom-handlers-doc-handle-set"]], "pynetdicom._handlers.doc_handle_sop_common": [[104, "pynetdicom-handlers-doc-handle-sop-common"]], "pynetdicom._handlers.doc_handle_sop_extended": [[105, "pynetdicom-handlers-doc-handle-sop-extended"]], "pynetdicom._handlers.doc_handle_store": [[106, "pynetdicom-handlers-doc-handle-store"]], "pynetdicom._handlers.doc_handle_transport": [[107, "pynetdicom-handlers-doc-handle-transport"]], "pynetdicom._handlers.doc_handle_userid": [[108, "pynetdicom-handlers-doc-handle-userid"]], "pynetdicom.acse.ACSE": [[109, "pynetdicom-acse-acse"]], "pynetdicom.ae.ApplicationEntity": [[110, "pynetdicom-ae-applicationentity"]], "pynetdicom.association.Association": [[111, "pynetdicom-association-association"]], "pynetdicom.association.ServiceUser": [[112, "pynetdicom-association-serviceuser"]], "pynetdicom.debug_logger": [[113, "pynetdicom-debug-logger"]], "pynetdicom.dimse.DIMSEServiceProvider": [[114, "pynetdicom-dimse-dimseserviceprovider"]], "pynetdicom.dimse_messages.C_CANCEL_RQ": [[115, "pynetdicom-dimse-messages-c-cancel-rq"]], "pynetdicom.dimse_messages.C_ECHO_RQ": [[116, "pynetdicom-dimse-messages-c-echo-rq"]], "pynetdicom.dimse_messages.C_ECHO_RSP": [[117, "pynetdicom-dimse-messages-c-echo-rsp"]], "pynetdicom.dimse_messages.C_FIND_RQ": [[118, "pynetdicom-dimse-messages-c-find-rq"]], "pynetdicom.dimse_messages.C_FIND_RSP": [[119, "pynetdicom-dimse-messages-c-find-rsp"]], "pynetdicom.dimse_messages.C_GET_RQ": [[120, "pynetdicom-dimse-messages-c-get-rq"]], "pynetdicom.dimse_messages.C_GET_RSP": [[121, "pynetdicom-dimse-messages-c-get-rsp"]], "pynetdicom.dimse_messages.C_MOVE_RQ": [[122, "pynetdicom-dimse-messages-c-move-rq"]], "pynetdicom.dimse_messages.C_MOVE_RSP": [[123, "pynetdicom-dimse-messages-c-move-rsp"]], "pynetdicom.dimse_messages.C_STORE_RQ": [[124, "pynetdicom-dimse-messages-c-store-rq"]], "pynetdicom.dimse_messages.C_STORE_RSP": [[125, "pynetdicom-dimse-messages-c-store-rsp"]], "pynetdicom.dimse_messages.N_ACTION_RQ": [[126, "pynetdicom-dimse-messages-n-action-rq"]], "pynetdicom.dimse_messages.N_ACTION_RSP": [[127, "pynetdicom-dimse-messages-n-action-rsp"]], "pynetdicom.dimse_messages.N_CREATE_RQ": [[128, "pynetdicom-dimse-messages-n-create-rq"]], "pynetdicom.dimse_messages.N_CREATE_RSP": [[129, "pynetdicom-dimse-messages-n-create-rsp"]], "pynetdicom.dimse_messages.N_DELETE_RQ": [[130, "pynetdicom-dimse-messages-n-delete-rq"]], "pynetdicom.dimse_messages.N_DELETE_RSP": [[131, "pynetdicom-dimse-messages-n-delete-rsp"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ": [[132, "pynetdicom-dimse-messages-n-event-report-rq"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP": [[133, "pynetdicom-dimse-messages-n-event-report-rsp"]], "pynetdicom.dimse_messages.N_GET_RQ": [[134, "pynetdicom-dimse-messages-n-get-rq"]], "pynetdicom.dimse_messages.N_GET_RSP": [[135, "pynetdicom-dimse-messages-n-get-rsp"]], "pynetdicom.dimse_messages.N_SET_RQ": [[136, "pynetdicom-dimse-messages-n-set-rq"]], "pynetdicom.dimse_messages.N_SET_RSP": [[137, "pynetdicom-dimse-messages-n-set-rsp"]], "pynetdicom.dimse_primitives.C_CANCEL": [[138, "pynetdicom-dimse-primitives-c-cancel"]], "pynetdicom.dimse_primitives.C_ECHO": [[139, "pynetdicom-dimse-primitives-c-echo"]], "pynetdicom.dimse_primitives.C_FIND": [[140, "pynetdicom-dimse-primitives-c-find"]], "pynetdicom.dimse_primitives.C_GET": [[141, "pynetdicom-dimse-primitives-c-get"]], "pynetdicom.dimse_primitives.C_MOVE": [[142, "pynetdicom-dimse-primitives-c-move"]], "pynetdicom.dimse_primitives.C_STORE": [[143, "pynetdicom-dimse-primitives-c-store"]], "pynetdicom.dimse_primitives.N_ACTION": [[144, "pynetdicom-dimse-primitives-n-action"]], "pynetdicom.dimse_primitives.N_CREATE": [[145, "pynetdicom-dimse-primitives-n-create"]], "pynetdicom.dimse_primitives.N_DELETE": [[146, "pynetdicom-dimse-primitives-n-delete"]], "pynetdicom.dimse_primitives.N_EVENT_REPORT": [[147, "pynetdicom-dimse-primitives-n-event-report"]], "pynetdicom.dimse_primitives.N_GET": [[148, "pynetdicom-dimse-primitives-n-get"]], "pynetdicom.dimse_primitives.N_SET": [[149, "pynetdicom-dimse-primitives-n-set"]], "pynetdicom.dsutils.decode": [[150, "pynetdicom-dsutils-decode"]], "pynetdicom.dsutils.encode": [[151, "pynetdicom-dsutils-encode"]], "pynetdicom.dsutils.pretty_dataset": [[152, "pynetdicom-dsutils-pretty-dataset"]], "pynetdicom.dsutils.pretty_element": [[153, "pynetdicom-dsutils-pretty-element"]], "pynetdicom.dul.DULServiceProvider": [[154, "pynetdicom-dul-dulserviceprovider"]], "pynetdicom.events.Event": [[155, "pynetdicom-events-event"]], "pynetdicom.events.InterventionEvent": [[156, "pynetdicom-events-interventionevent"]], "pynetdicom.events.NotificationEvent": [[157, "pynetdicom-events-notificationevent"]], "pynetdicom.events.trigger": [[158, "pynetdicom-events-trigger"]], "pynetdicom.fsm.AA_1": [[159, "pynetdicom-fsm-aa-1"]], "pynetdicom.fsm.AA_2": [[160, "pynetdicom-fsm-aa-2"]], "pynetdicom.fsm.AA_3": [[161, "pynetdicom-fsm-aa-3"]], "pynetdicom.fsm.AA_4": [[162, "pynetdicom-fsm-aa-4"]], "pynetdicom.fsm.AA_5": [[163, "pynetdicom-fsm-aa-5"]], "pynetdicom.fsm.AA_6": [[164, "pynetdicom-fsm-aa-6"]], "pynetdicom.fsm.AA_7": [[165, "pynetdicom-fsm-aa-7"]], "pynetdicom.fsm.AA_8": [[166, "pynetdicom-fsm-aa-8"]], "pynetdicom.fsm.AE_1": [[167, "pynetdicom-fsm-ae-1"]], "pynetdicom.fsm.AE_2": [[168, "pynetdicom-fsm-ae-2"]], "pynetdicom.fsm.AE_3": [[169, "pynetdicom-fsm-ae-3"]], "pynetdicom.fsm.AE_4": [[170, "pynetdicom-fsm-ae-4"]], "pynetdicom.fsm.AE_5": [[171, "pynetdicom-fsm-ae-5"]], "pynetdicom.fsm.AE_6": [[172, "pynetdicom-fsm-ae-6"]], "pynetdicom.fsm.AE_7": [[173, "pynetdicom-fsm-ae-7"]], "pynetdicom.fsm.AE_8": [[174, "pynetdicom-fsm-ae-8"]], "pynetdicom.fsm.AR_1": [[175, "pynetdicom-fsm-ar-1"]], "pynetdicom.fsm.AR_10": [[176, "pynetdicom-fsm-ar-10"]], "pynetdicom.fsm.AR_2": [[177, "pynetdicom-fsm-ar-2"]], "pynetdicom.fsm.AR_3": [[178, "pynetdicom-fsm-ar-3"]], "pynetdicom.fsm.AR_4": [[179, "pynetdicom-fsm-ar-4"]], "pynetdicom.fsm.AR_5": [[180, "pynetdicom-fsm-ar-5"]], "pynetdicom.fsm.AR_6": [[181, "pynetdicom-fsm-ar-6"]], "pynetdicom.fsm.AR_7": [[182, "pynetdicom-fsm-ar-7"]], "pynetdicom.fsm.AR_8": [[183, "pynetdicom-fsm-ar-8"]], "pynetdicom.fsm.AR_9": [[184, "pynetdicom-fsm-ar-9"]], "pynetdicom.fsm.DT_1": [[185, "pynetdicom-fsm-dt-1"]], "pynetdicom.fsm.DT_2": [[186, "pynetdicom-fsm-dt-2"]], "pynetdicom.fsm.StateMachine": [[187, "pynetdicom-fsm-statemachine"]], "pynetdicom.pdu.A_ABORT_RQ": [[188, "pynetdicom-pdu-a-abort-rq"]], "pynetdicom.pdu.A_ASSOCIATE_AC": [[189, "pynetdicom-pdu-a-associate-ac"]], "pynetdicom.pdu.A_ASSOCIATE_RJ": [[190, "pynetdicom-pdu-a-associate-rj"]], "pynetdicom.pdu.A_ASSOCIATE_RQ": [[191, "pynetdicom-pdu-a-associate-rq"]], "pynetdicom.pdu.A_RELEASE_RP": [[192, "pynetdicom-pdu-a-release-rp"]], "pynetdicom.pdu.A_RELEASE_RQ": [[193, "pynetdicom-pdu-a-release-rq"]], "pynetdicom.pdu.P_DATA_TF": [[194, "pynetdicom-pdu-p-data-tf"]], "pynetdicom.pdu.PresentationDataValueItem": [[195, "pynetdicom-pdu-presentationdatavalueitem"]], "pynetdicom.pdu_items.AbstractSyntaxSubItem": [[196, "pynetdicom-pdu-items-abstractsyntaxsubitem"]], "pynetdicom.pdu_items.ApplicationContextItem": [[197, "pynetdicom-pdu-items-applicationcontextitem"]], "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem": [[198, "pynetdicom-pdu-items-asynchronousoperationswindowsubitem"]], "pynetdicom.pdu_items.ImplementationClassUIDSubItem": [[199, "pynetdicom-pdu-items-implementationclassuidsubitem"]], "pynetdicom.pdu_items.ImplementationVersionNameSubItem": [[200, "pynetdicom-pdu-items-implementationversionnamesubitem"]], "pynetdicom.pdu_items.MaximumLengthSubItem": [[201, "pynetdicom-pdu-items-maximumlengthsubitem"]], "pynetdicom.pdu_items.PresentationContextItemAC": [[202, "pynetdicom-pdu-items-presentationcontextitemac"]], "pynetdicom.pdu_items.PresentationContextItemRQ": [[203, "pynetdicom-pdu-items-presentationcontextitemrq"]], "pynetdicom.pdu_items.PresentationDataValueItem": [[204, "pynetdicom-pdu-items-presentationdatavalueitem"]], "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem": [[205, "pynetdicom-pdu-items-scp-scu-roleselectionsubitem"]], "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem": [[206, "pynetdicom-pdu-items-sopclasscommonextendednegotiationsubitem"]], "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem": [[207, "pynetdicom-pdu-items-sopclassextendednegotiationsubitem"]], "pynetdicom.pdu_items.TransferSyntaxSubItem": [[208, "pynetdicom-pdu-items-transfersyntaxsubitem"]], "pynetdicom.pdu_items.UserIdentitySubItemAC": [[209, "pynetdicom-pdu-items-useridentitysubitemac"]], "pynetdicom.pdu_items.UserIdentitySubItemRQ": [[210, "pynetdicom-pdu-items-useridentitysubitemrq"]], "pynetdicom.pdu_items.UserInformationItem": [[211, "pynetdicom-pdu-items-userinformationitem"]], "pynetdicom.pdu_primitives.A_ABORT": [[212, "pynetdicom-pdu-primitives-a-abort"]], "pynetdicom.pdu_primitives.A_ASSOCIATE": [[213, "pynetdicom-pdu-primitives-a-associate"]], "pynetdicom.pdu_primitives.A_P_ABORT": [[214, "pynetdicom-pdu-primitives-a-p-abort"]], "pynetdicom.pdu_primitives.A_RELEASE": [[215, "pynetdicom-pdu-primitives-a-release"]], "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation": [[216, "pynetdicom-pdu-primitives-asynchronousoperationswindownegotiation"]], "pynetdicom.pdu_primitives.ImplementationClassUIDNotification": [[217, "pynetdicom-pdu-primitives-implementationclassuidnotification"]], "pynetdicom.pdu_primitives.ImplementationVersionNameNotification": [[218, "pynetdicom-pdu-primitives-implementationversionnamenotification"]], "pynetdicom.pdu_primitives.MaximumLengthNotification": [[219, "pynetdicom-pdu-primitives-maximumlengthnotification"]], "pynetdicom.pdu_primitives.P_DATA": [[220, "pynetdicom-pdu-primitives-p-data"]], "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation": [[221, "pynetdicom-pdu-primitives-scp-scu-roleselectionnegotiation"]], "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation": [[222, "pynetdicom-pdu-primitives-sopclasscommonextendednegotiation"]], "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation": [[223, "pynetdicom-pdu-primitives-sopclassextendednegotiation"]], "pynetdicom.pdu_primitives.UserIdentityNegotiation": [[224, "pynetdicom-pdu-primitives-useridentitynegotiation"]], "pynetdicom.presentation.AllStoragePresentationContexts": [[225, "pynetdicom-presentation-allstoragepresentationcontexts"]], "pynetdicom.presentation.ApplicationEventLoggingPresentationContexts": [[226, "pynetdicom-presentation-applicationeventloggingpresentationcontexts"]], "pynetdicom.presentation.BasicWorklistManagementPresentationContexts": [[227, "pynetdicom-presentation-basicworklistmanagementpresentationcontexts"]], "pynetdicom.presentation.ColorPalettePresentationContexts": [[228, "pynetdicom-presentation-colorpalettepresentationcontexts"]], "pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts": [[229, "pynetdicom-presentation-definedprocedureprotocolpresentationcontexts"]], "pynetdicom.presentation.DisplaySystemPresentationContexts": [[230, "pynetdicom-presentation-displaysystempresentationcontexts"]], "pynetdicom.presentation.HangingProtocolPresentationContexts": [[231, "pynetdicom-presentation-hangingprotocolpresentationcontexts"]], "pynetdicom.presentation.ImplantTemplatePresentationContexts": [[232, "pynetdicom-presentation-implanttemplatepresentationcontexts"]], "pynetdicom.presentation.InstanceAvailabilityPresentationContexts": [[233, "pynetdicom-presentation-instanceavailabilitypresentationcontexts"]], "pynetdicom.presentation.MediaCreationManagementPresentationContexts": [[234, "pynetdicom-presentation-mediacreationmanagementpresentationcontexts"]], "pynetdicom.presentation.MediaStoragePresentationContexts": [[235, "pynetdicom-presentation-mediastoragepresentationcontexts"]], "pynetdicom.presentation.ModalityPerformedPresentationContexts": [[236, "pynetdicom-presentation-modalityperformedpresentationcontexts"]], "pynetdicom.presentation.NonPatientObjectPresentationContexts": [[237, "pynetdicom-presentation-nonpatientobjectpresentationcontexts"]], "pynetdicom.presentation.PresentationContext": [[238, "pynetdicom-presentation-presentationcontext"]], "pynetdicom.presentation.PresentationContextTuple": [[239, "pynetdicom-presentation-presentationcontexttuple"]], "pynetdicom.presentation.PrintManagementPresentationContexts": [[240, "pynetdicom-presentation-printmanagementpresentationcontexts"]], "pynetdicom.presentation.ProcedureStepPresentationContexts": [[241, "pynetdicom-presentation-proceduresteppresentationcontexts"]], "pynetdicom.presentation.ProtocolApprovalPresentationContexts": [[242, "pynetdicom-presentation-protocolapprovalpresentationcontexts"]], "pynetdicom.presentation.QueryRetrievePresentationContexts": [[243, "pynetdicom-presentation-queryretrievepresentationcontexts"]], "pynetdicom.presentation.RTMachineVerificationPresentationContexts": [[244, "pynetdicom-presentation-rtmachineverificationpresentationcontexts"]], "pynetdicom.presentation.RelevantPatientInformationPresentationContexts": [[245, "pynetdicom-presentation-relevantpatientinformationpresentationcontexts"]], "pynetdicom.presentation.StorageCommitmentPresentationContexts": [[246, "pynetdicom-presentation-storagecommitmentpresentationcontexts"]], "pynetdicom.presentation.StoragePresentationContexts": [[247, "pynetdicom-presentation-storagepresentationcontexts"]], "pynetdicom.presentation.SubstanceAdministrationPresentationContexts": [[248, "pynetdicom-presentation-substanceadministrationpresentationcontexts"]], "pynetdicom.presentation.UnifiedProcedurePresentationContexts": [[249, "pynetdicom-presentation-unifiedprocedurepresentationcontexts"]], "pynetdicom.presentation.VerificationPresentationContexts": [[250, "pynetdicom-presentation-verificationpresentationcontexts"]], "pynetdicom.presentation.build_context": [[251, "pynetdicom-presentation-build-context"]], "pynetdicom.presentation.build_role": [[252, "pynetdicom-presentation-build-role"]], "pynetdicom.presentation.negotiate_as_acceptor": [[253, "pynetdicom-presentation-negotiate-as-acceptor"]], "pynetdicom.presentation.negotiate_as_requestor": [[254, "pynetdicom-presentation-negotiate-as-requestor"]], "pynetdicom.service_class.BasicWorklistManagementServiceClass": [[255, "pynetdicom-service-class-basicworklistmanagementserviceclass"]], "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass": [[256, "pynetdicom-service-class-colorpalettequeryretrieveserviceclass"]], "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass": [[257, "pynetdicom-service-class-definedprocedureprotocolqueryretrieveserviceclass"]], "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass": [[258, "pynetdicom-service-class-hangingprotocolqueryretrieveserviceclass"]], "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass": [[259, "pynetdicom-service-class-implanttemplatequeryretrieveserviceclass"]], "pynetdicom.service_class.NonPatientObjectStorageServiceClass": [[260, "pynetdicom-service-class-nonpatientobjectstorageserviceclass"]], "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass": [[261, "pynetdicom-service-class-protocolapprovalqueryretrieveserviceclass"]], "pynetdicom.service_class.QueryRetrieveServiceClass": [[262, "pynetdicom-service-class-queryretrieveserviceclass"]], "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass": [[263, "pynetdicom-service-class-relevantpatientinformationqueryserviceclass"]], "pynetdicom.service_class.StorageServiceClass": [[264, "pynetdicom-service-class-storageserviceclass"]], "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass": [[265, "pynetdicom-service-class-substanceadministrationqueryserviceclass"]], "pynetdicom.service_class.VerificationServiceClass": [[266, "pynetdicom-service-class-verificationserviceclass"]], "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass": [[267, "pynetdicom-service-class-n-applicationeventloggingserviceclass"]], "pynetdicom.service_class_n.DisplaySystemManagementServiceClass": [[268, "pynetdicom-service-class-n-displaysystemmanagementserviceclass"]], "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass": [[269, "pynetdicom-service-class-n-instanceavailabilitynotificationserviceclass"]], "pynetdicom.service_class_n.MediaCreationManagementServiceClass": [[270, "pynetdicom-service-class-n-mediacreationmanagementserviceclass"]], "pynetdicom.service_class_n.PrintManagementServiceClass": [[271, "pynetdicom-service-class-n-printmanagementserviceclass"]], "pynetdicom.service_class_n.ProcedureStepServiceClass": [[272, "pynetdicom-service-class-n-procedurestepserviceclass"]], "pynetdicom.service_class_n.RTMachineVerificationServiceClass": [[273, "pynetdicom-service-class-n-rtmachineverificationserviceclass"]], "pynetdicom.service_class_n.StorageCommitmentServiceClass": [[274, "pynetdicom-service-class-n-storagecommitmentserviceclass"]], "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass": [[275, "pynetdicom-service-class-n-unifiedprocedurestepserviceclass"]], "pynetdicom.sop_class.AcquisitionContextSRStorage": [[276, "pynetdicom-sop-class-acquisitioncontextsrstorage"]], "pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage": [[277, "pynetdicom-sop-class-advancedblendingpresentationstatestorage"]], "pynetdicom.sop_class.AmbulatoryECGWaveformStorage": [[278, "pynetdicom-sop-class-ambulatoryecgwaveformstorage"]], "pynetdicom.sop_class.ArterialPulseWaveformStorage": [[279, "pynetdicom-sop-class-arterialpulsewaveformstorage"]], "pynetdicom.sop_class.AutorefractionMeasurementsStorage": [[280, "pynetdicom-sop-class-autorefractionmeasurementsstorage"]], "pynetdicom.sop_class.BasicAnnotationBox": [[281, "pynetdicom-sop-class-basicannotationbox"]], "pynetdicom.sop_class.BasicColorImageBox": [[282, "pynetdicom-sop-class-basiccolorimagebox"]], "pynetdicom.sop_class.BasicColorPrintManagementMeta": [[283, "pynetdicom-sop-class-basiccolorprintmanagementmeta"]], "pynetdicom.sop_class.BasicFilmBox": [[284, "pynetdicom-sop-class-basicfilmbox"]], "pynetdicom.sop_class.BasicFilmSession": [[285, "pynetdicom-sop-class-basicfilmsession"]], "pynetdicom.sop_class.BasicGrayscaleImageBox": [[286, "pynetdicom-sop-class-basicgrayscaleimagebox"]], "pynetdicom.sop_class.BasicGrayscalePrintManagementMeta": [[287, "pynetdicom-sop-class-basicgrayscaleprintmanagementmeta"]], "pynetdicom.sop_class.BasicStructuredDisplayStorage": [[288, "pynetdicom-sop-class-basicstructureddisplaystorage"]], "pynetdicom.sop_class.BasicTextSRStorage": [[289, "pynetdicom-sop-class-basictextsrstorage"]], "pynetdicom.sop_class.BasicVoiceAudioWaveformStorage": [[290, "pynetdicom-sop-class-basicvoiceaudiowaveformstorage"]], "pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage": [[291, "pynetdicom-sop-class-blendingsoftcopypresentationstatestorage"]], "pynetdicom.sop_class.BodyPositionWaveformStorage": [[292, "pynetdicom-sop-class-bodypositionwaveformstorage"]], "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery": [[293, "pynetdicom-sop-class-breastimagingrelevantpatientinformationquery"]], "pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation": [[294, "pynetdicom-sop-class-breastprojectionxrayimagestorageforpresentation"]], "pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing": [[295, "pynetdicom-sop-class-breastprojectionxrayimagestorageforprocessing"]], "pynetdicom.sop_class.BreastTomosynthesisImageStorage": [[296, "pynetdicom-sop-class-breasttomosynthesisimagestorage"]], "pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage": [[297, "pynetdicom-sop-class-carmphotonelectronradiationrecordstorage"]], "pynetdicom.sop_class.CArmPhotonElectronRadiationStorage": [[298, "pynetdicom-sop-class-carmphotonelectronradiationstorage"]], "pynetdicom.sop_class.CTDefinedProcedureProtocolStorage": [[299, "pynetdicom-sop-class-ctdefinedprocedureprotocolstorage"]], "pynetdicom.sop_class.CTImageStorage": [[300, "pynetdicom-sop-class-ctimagestorage"]], "pynetdicom.sop_class.CTPerformedProcedureProtocolStorage": [[301, "pynetdicom-sop-class-ctperformedprocedureprotocolstorage"]], "pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage": [[302, "pynetdicom-sop-class-cardiacelectrophysiologywaveformstorage"]], "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery": [[303, "pynetdicom-sop-class-cardiacrelevantpatientinformationquery"]], "pynetdicom.sop_class.ChestCADSRStorage": [[304, "pynetdicom-sop-class-chestcadsrstorage"]], "pynetdicom.sop_class.ColonCADSRStorage": [[305, "pynetdicom-sop-class-coloncadsrstorage"]], "pynetdicom.sop_class.ColorPaletteInformationModelFind": [[306, "pynetdicom-sop-class-colorpaletteinformationmodelfind"]], "pynetdicom.sop_class.ColorPaletteInformationModelGet": [[307, "pynetdicom-sop-class-colorpaletteinformationmodelget"]], "pynetdicom.sop_class.ColorPaletteInformationModelMove": [[308, "pynetdicom-sop-class-colorpaletteinformationmodelmove"]], "pynetdicom.sop_class.ColorPaletteStorage": [[309, "pynetdicom-sop-class-colorpalettestorage"]], "pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage": [[310, "pynetdicom-sop-class-colorsoftcopypresentationstatestorage"]], "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet": [[311, "pynetdicom-sop-class-compositeinstanceretrievewithoutbulkdataget"]], "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet": [[312, "pynetdicom-sop-class-compositeinstancerootretrieveget"]], "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove": [[313, "pynetdicom-sop-class-compositeinstancerootretrievemove"]], "pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage": [[314, "pynetdicom-sop-class-compositingplanarmprvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.Comprehensive3DSRStorage": [[315, "pynetdicom-sop-class-comprehensive3dsrstorage"]], "pynetdicom.sop_class.ComprehensiveSRStorage": [[316, "pynetdicom-sop-class-comprehensivesrstorage"]], "pynetdicom.sop_class.ComputedRadiographyImageStorage": [[317, "pynetdicom-sop-class-computedradiographyimagestorage"]], "pynetdicom.sop_class.ContentAssessmentResultsStorage": [[318, "pynetdicom-sop-class-contentassessmentresultsstorage"]], "pynetdicom.sop_class.CornealTopographyMapStorage": [[319, "pynetdicom-sop-class-cornealtopographymapstorage"]], "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind": [[320, "pynetdicom-sop-class-definedprocedureprotocolinformationmodelfind"]], "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet": [[321, "pynetdicom-sop-class-definedprocedureprotocolinformationmodelget"]], "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove": [[322, "pynetdicom-sop-class-definedprocedureprotocolinformationmodelmove"]], "pynetdicom.sop_class.DeformableSpatialRegistrationStorage": [[323, "pynetdicom-sop-class-deformablespatialregistrationstorage"]], "pynetdicom.sop_class.DermoscopicPhotographyImageStorage": [[324, "pynetdicom-sop-class-dermoscopicphotographyimagestorage"]], "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation": [[325, "pynetdicom-sop-class-digitalintraoralxrayimagestorageforpresentation"]], "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing": [[326, "pynetdicom-sop-class-digitalintraoralxrayimagestorageforprocessing"]], "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation": [[327, "pynetdicom-sop-class-digitalmammographyxrayimagestorageforpresentation"]], "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing": [[328, "pynetdicom-sop-class-digitalmammographyxrayimagestorageforprocessing"]], "pynetdicom.sop_class.DigitalXRayImageStorageForPresentation": [[329, "pynetdicom-sop-class-digitalxrayimagestorageforpresentation"]], "pynetdicom.sop_class.DigitalXRayImageStorageForProcessing": [[330, "pynetdicom-sop-class-digitalxrayimagestorageforprocessing"]], "pynetdicom.sop_class.DisplaySystem": [[331, "pynetdicom-sop-class-displaysystem"]], "pynetdicom.sop_class.DisplaySystemInstance": [[332, "pynetdicom-sop-class-displaysysteminstance"]], "pynetdicom.sop_class.ElectromyogramWaveformStorage": [[333, "pynetdicom-sop-class-electromyogramwaveformstorage"]], "pynetdicom.sop_class.ElectrooculogramWaveformStorage": [[334, "pynetdicom-sop-class-electrooculogramwaveformstorage"]], "pynetdicom.sop_class.EncapsulatedCDAStorage": [[335, "pynetdicom-sop-class-encapsulatedcdastorage"]], "pynetdicom.sop_class.EncapsulatedMTLStorage": [[336, "pynetdicom-sop-class-encapsulatedmtlstorage"]], "pynetdicom.sop_class.EncapsulatedOBJStorage": [[337, "pynetdicom-sop-class-encapsulatedobjstorage"]], "pynetdicom.sop_class.EncapsulatedPDFStorage": [[338, "pynetdicom-sop-class-encapsulatedpdfstorage"]], "pynetdicom.sop_class.EncapsulatedSTLStorage": [[339, "pynetdicom-sop-class-encapsulatedstlstorage"]], "pynetdicom.sop_class.EnhancedCTImageStorage": [[340, "pynetdicom-sop-class-enhancedctimagestorage"]], "pynetdicom.sop_class.EnhancedContinuousRTImageStorage": [[341, "pynetdicom-sop-class-enhancedcontinuousrtimagestorage"]], "pynetdicom.sop_class.EnhancedMRColorImageStorage": [[342, "pynetdicom-sop-class-enhancedmrcolorimagestorage"]], "pynetdicom.sop_class.EnhancedMRImageStorage": [[343, "pynetdicom-sop-class-enhancedmrimagestorage"]], "pynetdicom.sop_class.EnhancedPETImageStorage": [[344, "pynetdicom-sop-class-enhancedpetimagestorage"]], "pynetdicom.sop_class.EnhancedRTImageStorage": [[345, "pynetdicom-sop-class-enhancedrtimagestorage"]], "pynetdicom.sop_class.EnhancedSRStorage": [[346, "pynetdicom-sop-class-enhancedsrstorage"]], "pynetdicom.sop_class.EnhancedUSVolumeStorage": [[347, "pynetdicom-sop-class-enhancedusvolumestorage"]], "pynetdicom.sop_class.EnhancedXAImageStorage": [[348, "pynetdicom-sop-class-enhancedxaimagestorage"]], "pynetdicom.sop_class.EnhancedXRFImageStorage": [[349, "pynetdicom-sop-class-enhancedxrfimagestorage"]], "pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage": [[350, "pynetdicom-sop-class-enhancedxrayradiationdosesrstorage"]], "pynetdicom.sop_class.ExtensibleSRStorage": [[351, "pynetdicom-sop-class-extensiblesrstorage"]], "pynetdicom.sop_class.General32bitECGWaveformStorage": [[352, "pynetdicom-sop-class-general32bitecgwaveformstorage"]], "pynetdicom.sop_class.GeneralAudioWaveformStorage": [[353, "pynetdicom-sop-class-generalaudiowaveformstorage"]], "pynetdicom.sop_class.GeneralECGWaveformStorage": [[354, "pynetdicom-sop-class-generalecgwaveformstorage"]], "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery": [[355, "pynetdicom-sop-class-generalrelevantpatientinformationquery"]], "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind": [[356, "pynetdicom-sop-class-genericimplanttemplateinformationmodelfind"]], "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet": [[357, "pynetdicom-sop-class-genericimplanttemplateinformationmodelget"]], "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove": [[358, "pynetdicom-sop-class-genericimplanttemplateinformationmodelmove"]], "pynetdicom.sop_class.GenericImplantTemplateStorage": [[359, "pynetdicom-sop-class-genericimplanttemplatestorage"]], "pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[360, "pynetdicom-sop-class-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage": [[361, "pynetdicom-sop-class-grayscalesoftcopypresentationstatestorage"]], "pynetdicom.sop_class.HangingProtocolInformationModelFind": [[362, "pynetdicom-sop-class-hangingprotocolinformationmodelfind"]], "pynetdicom.sop_class.HangingProtocolInformationModelGet": [[363, "pynetdicom-sop-class-hangingprotocolinformationmodelget"]], "pynetdicom.sop_class.HangingProtocolInformationModelMove": [[364, "pynetdicom-sop-class-hangingprotocolinformationmodelmove"]], "pynetdicom.sop_class.HangingProtocolStorage": [[365, "pynetdicom-sop-class-hangingprotocolstorage"]], "pynetdicom.sop_class.HemodynamicWaveformStorage": [[366, "pynetdicom-sop-class-hemodynamicwaveformstorage"]], "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind": [[367, "pynetdicom-sop-class-implantassemblytemplateinformationmodelfind"]], "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet": [[368, "pynetdicom-sop-class-implantassemblytemplateinformationmodelget"]], "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove": [[369, "pynetdicom-sop-class-implantassemblytemplateinformationmodelmove"]], "pynetdicom.sop_class.ImplantAssemblyTemplateStorage": [[370, "pynetdicom-sop-class-implantassemblytemplatestorage"]], "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind": [[371, "pynetdicom-sop-class-implanttemplategroupinformationmodelfind"]], "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet": [[372, "pynetdicom-sop-class-implanttemplategroupinformationmodelget"]], "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove": [[373, "pynetdicom-sop-class-implanttemplategroupinformationmodelmove"]], "pynetdicom.sop_class.ImplantTemplateGroupStorage": [[374, "pynetdicom-sop-class-implanttemplategroupstorage"]], "pynetdicom.sop_class.ImplantationPlanSRStorage": [[375, "pynetdicom-sop-class-implantationplansrstorage"]], "pynetdicom.sop_class.InstanceAvailabilityNotification": [[376, "pynetdicom-sop-class-instanceavailabilitynotification"]], "pynetdicom.sop_class.IntraocularLensCalculationsStorage": [[377, "pynetdicom-sop-class-intraocularlenscalculationsstorage"]], "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[378, "pynetdicom-sop-class-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[379, "pynetdicom-sop-class-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pynetdicom.sop_class.InventoryCreation": [[380, "pynetdicom-sop-class-inventorycreation"]], "pynetdicom.sop_class.InventoryFind": [[381, "pynetdicom-sop-class-inventoryfind"]], "pynetdicom.sop_class.InventoryGet": [[382, "pynetdicom-sop-class-inventoryget"]], "pynetdicom.sop_class.InventoryMove": [[383, "pynetdicom-sop-class-inventorymove"]], "pynetdicom.sop_class.InventoryStorage": [[384, "pynetdicom-sop-class-inventorystorage"]], "pynetdicom.sop_class.KeratometryMeasurementsStorage": [[385, "pynetdicom-sop-class-keratometrymeasurementsstorage"]], "pynetdicom.sop_class.KeyObjectSelectionDocumentStorage": [[386, "pynetdicom-sop-class-keyobjectselectiondocumentstorage"]], "pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage": [[387, "pynetdicom-sop-class-legacyconvertedenhancedctimagestorage"]], "pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage": [[388, "pynetdicom-sop-class-legacyconvertedenhancedmrimagestorage"]], "pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage": [[389, "pynetdicom-sop-class-legacyconvertedenhancedpetimagestorage"]], "pynetdicom.sop_class.LensometryMeasurementsStorage": [[390, "pynetdicom-sop-class-lensometrymeasurementsstorage"]], "pynetdicom.sop_class.MRImageStorage": [[391, "pynetdicom-sop-class-mrimagestorage"]], "pynetdicom.sop_class.MRSpectroscopyStorage": [[392, "pynetdicom-sop-class-mrspectroscopystorage"]], "pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage": [[393, "pynetdicom-sop-class-maculargridthicknessandvolumereportstorage"]], "pynetdicom.sop_class.MammographyCADSRStorage": [[394, "pynetdicom-sop-class-mammographycadsrstorage"]], "pynetdicom.sop_class.MediaCreationManagement": [[395, "pynetdicom-sop-class-mediacreationmanagement"]], "pynetdicom.sop_class.MediaStorageDirectoryStorage": [[396, "pynetdicom-sop-class-mediastoragedirectorystorage"]], "pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage": [[397, "pynetdicom-sop-class-microscopybulksimpleannotationsstorage"]], "pynetdicom.sop_class.ModalityPerformedProcedureStep": [[398, "pynetdicom-sop-class-modalityperformedprocedurestep"]], "pynetdicom.sop_class.ModalityPerformedProcedureStepNotification": [[399, "pynetdicom-sop-class-modalityperformedprocedurestepnotification"]], "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve": [[400, "pynetdicom-sop-class-modalityperformedprocedurestepretrieve"]], "pynetdicom.sop_class.ModalityWorklistInformationFind": [[401, "pynetdicom-sop-class-modalityworklistinformationfind"]], "pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[402, "pynetdicom-sop-class-multiframegrayscalebytesecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[403, "pynetdicom-sop-class-multiframegrayscalewordsecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage": [[404, "pynetdicom-sop-class-multiframesinglebitsecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage": [[405, "pynetdicom-sop-class-multiframetruecolorsecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage": [[406, "pynetdicom-sop-class-multichannelrespiratorywaveformstorage"]], "pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[407, "pynetdicom-sop-class-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.NuclearMedicineImageStorage": [[408, "pynetdicom-sop-class-nuclearmedicineimagestorage"]], "pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage": [[409, "pynetdicom-sop-class-ophthalmicaxialmeasurementsstorage"]], "pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[410, "pynetdicom-sop-class-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage": [[411, "pynetdicom-sop-class-ophthalmicphotography16bitimagestorage"]], "pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage": [[412, "pynetdicom-sop-class-ophthalmicphotography8bitimagestorage"]], "pynetdicom.sop_class.OphthalmicThicknessMapStorage": [[413, "pynetdicom-sop-class-ophthalmicthicknessmapstorage"]], "pynetdicom.sop_class.OphthalmicTomographyImageStorage": [[414, "pynetdicom-sop-class-ophthalmictomographyimagestorage"]], "pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[415, "pynetdicom-sop-class-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[416, "pynetdicom-sop-class-ophthlamicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pynetdicom.sop_class.ParametricMapStorage": [[417, "pynetdicom-sop-class-parametricmapstorage"]], "pynetdicom.sop_class.PatientRadiationDoseSRStorage": [[418, "pynetdicom-sop-class-patientradiationdosesrstorage"]], "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind": [[419, "pynetdicom-sop-class-patientrootqueryretrieveinformationmodelfind"]], "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet": [[420, "pynetdicom-sop-class-patientrootqueryretrieveinformationmodelget"]], "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove": [[421, "pynetdicom-sop-class-patientrootqueryretrieveinformationmodelmove"]], "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind": [[422, "pynetdicom-sop-class-patientstudyonlyqueryretrieveinformationmodelfind"]], "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet": [[423, "pynetdicom-sop-class-patientstudyonlyqueryretrieveinformationmodelget"]], "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove": [[424, "pynetdicom-sop-class-patientstudyonlyqueryretrieveinformationmodelmove"]], "pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage": [[425, "pynetdicom-sop-class-performedimagingagentadministrationsrstorage"]], "pynetdicom.sop_class.PhotoacousticImageStorage": [[426, "pynetdicom-sop-class-photoacousticimagestorage"]], "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage": [[427, "pynetdicom-sop-class-plannedimagingagentadministrationsrstorage"]], "pynetdicom.sop_class.PositronEmissionTomographyImageStorage": [[428, "pynetdicom-sop-class-positronemissiontomographyimagestorage"]], "pynetdicom.sop_class.PresentationLUT": [[429, "pynetdicom-sop-class-presentationlut"]], "pynetdicom.sop_class.PrintJob": [[430, "pynetdicom-sop-class-printjob"]], "pynetdicom.sop_class.Printer": [[431, "pynetdicom-sop-class-printer"]], "pynetdicom.sop_class.PrinterConfigurationRetrieval": [[432, "pynetdicom-sop-class-printerconfigurationretrieval"]], "pynetdicom.sop_class.PrinterConfigurationRetrievalInstance": [[433, "pynetdicom-sop-class-printerconfigurationretrievalinstance"]], "pynetdicom.sop_class.PrinterInstance": [[434, "pynetdicom-sop-class-printerinstance"]], "pynetdicom.sop_class.ProceduralEventLogging": [[435, "pynetdicom-sop-class-proceduraleventlogging"]], "pynetdicom.sop_class.ProceduralEventLoggingInstance": [[436, "pynetdicom-sop-class-proceduraleventlogginginstance"]], "pynetdicom.sop_class.ProcedureLogStorage": [[437, "pynetdicom-sop-class-procedurelogstorage"]], "pynetdicom.sop_class.ProductCharacteristicsQuery": [[438, "pynetdicom-sop-class-productcharacteristicsquery"]], "pynetdicom.sop_class.ProtocolApprovalInformationModelFind": [[439, "pynetdicom-sop-class-protocolapprovalinformationmodelfind"]], "pynetdicom.sop_class.ProtocolApprovalInformationModelGet": [[440, "pynetdicom-sop-class-protocolapprovalinformationmodelget"]], "pynetdicom.sop_class.ProtocolApprovalInformationModelMove": [[441, "pynetdicom-sop-class-protocolapprovalinformationmodelmove"]], "pynetdicom.sop_class.ProtocolApprovalStorage": [[442, "pynetdicom-sop-class-protocolapprovalstorage"]], "pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage": [[443, "pynetdicom-sop-class-pseudocolorsoftcopypresentationstagestorage"]], "pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage": [[444, "pynetdicom-sop-class-rtbeamsdeliveryinstructionstorage"]], "pynetdicom.sop_class.RTBeamsTreatmentRecordStorage": [[445, "pynetdicom-sop-class-rtbeamstreatmentrecordstorage"]], "pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage": [[446, "pynetdicom-sop-class-rtbrachyapplicationsetupdeliveryinstructionsstorage"]], "pynetdicom.sop_class.RTBrachyTreatmentRecordStorage": [[447, "pynetdicom-sop-class-rtbrachytreatmentrecordstorage"]], "pynetdicom.sop_class.RTConventionalMachineVerification": [[448, "pynetdicom-sop-class-rtconventionalmachineverification"]], "pynetdicom.sop_class.RTDoseStorage": [[449, "pynetdicom-sop-class-rtdosestorage"]], "pynetdicom.sop_class.RTImageStorage": [[450, "pynetdicom-sop-class-rtimagestorage"]], "pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage": [[451, "pynetdicom-sop-class-rtionbeamstreatmentrecordstorage"]], "pynetdicom.sop_class.RTIonMachineVerification": [[452, "pynetdicom-sop-class-rtionmachineverification"]], "pynetdicom.sop_class.RTIonPlanStorage": [[453, "pynetdicom-sop-class-rtionplanstorage"]], "pynetdicom.sop_class.RTPatientPositionAcquisitionInstructionStorage": [[454, "pynetdicom-sop-class-rtpatientpositionacquisitioninstructionstorage"]], "pynetdicom.sop_class.RTPhysicianIntentStorage": [[455, "pynetdicom-sop-class-rtphysicianintentstorage"]], "pynetdicom.sop_class.RTPlanStorage": [[456, "pynetdicom-sop-class-rtplanstorage"]], "pynetdicom.sop_class.RTRadiationRecordSetStorage": [[457, "pynetdicom-sop-class-rtradiationrecordsetstorage"]], "pynetdicom.sop_class.RTRadiationSalvageRecordStorage": [[458, "pynetdicom-sop-class-rtradiationsalvagerecordstorage"]], "pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage": [[459, "pynetdicom-sop-class-rtradiationsetdeliveryinstructionstorage"]], "pynetdicom.sop_class.RTRadiationSetStorage": [[460, "pynetdicom-sop-class-rtradiationsetstorage"]], "pynetdicom.sop_class.RTSegmentAnnotationStorage": [[461, "pynetdicom-sop-class-rtsegmentannotationstorage"]], "pynetdicom.sop_class.RTStructureSetStorage": [[462, "pynetdicom-sop-class-rtstructuresetstorage"]], "pynetdicom.sop_class.RTTreatmentPreparationStorage": [[463, "pynetdicom-sop-class-rttreatmentpreparationstorage"]], "pynetdicom.sop_class.RTTreatmentSummaryRecordStorage": [[464, "pynetdicom-sop-class-rttreatmentsummaryrecordstorage"]], "pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage": [[465, "pynetdicom-sop-class-radiopharmaceuticalradiationdosesrstorage"]], "pynetdicom.sop_class.RawDataStorage": [[466, "pynetdicom-sop-class-rawdatastorage"]], "pynetdicom.sop_class.RealWorldValueMappingStorage": [[467, "pynetdicom-sop-class-realworldvaluemappingstorage"]], "pynetdicom.sop_class.RepositoryQuery": [[468, "pynetdicom-sop-class-repositoryquery"]], "pynetdicom.sop_class.RespiratoryWaveformStorage": [[469, "pynetdicom-sop-class-respiratorywaveformstorage"]], "pynetdicom.sop_class.RoboticArmRadiationRecordStorage": [[470, "pynetdicom-sop-class-roboticarmradiationrecordstorage"]], "pynetdicom.sop_class.RoboticArmRadiationStorage": [[471, "pynetdicom-sop-class-roboticarmradiationstorage"]], "pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage": [[472, "pynetdicom-sop-class-routinescalpelectroencephalogramwaveformstorage"]], "pynetdicom.sop_class.SOPClass": [[473, "pynetdicom-sop-class-sopclass"]], "pynetdicom.sop_class.SecondaryCaptureImageStorage": [[474, "pynetdicom-sop-class-secondarycaptureimagestorage"]], "pynetdicom.sop_class.SegmentationStorage": [[475, "pynetdicom-sop-class-segmentationstorage"]], "pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[476, "pynetdicom-sop-class-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.SimplifiedAdultEchoSRStorage": [[477, "pynetdicom-sop-class-simplifiedadultechosrstorage"]], "pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage": [[478, "pynetdicom-sop-class-sleepelectroencephalogramwaveformstorage"]], "pynetdicom.sop_class.SpatialFiducialsStorage": [[479, "pynetdicom-sop-class-spatialfiducialsstorage"]], "pynetdicom.sop_class.SpatialRegistrationStorage": [[480, "pynetdicom-sop-class-spatialregistrationstorage"]], "pynetdicom.sop_class.SpectaclePrescriptionReportStorage": [[481, "pynetdicom-sop-class-spectacleprescriptionreportstorage"]], "pynetdicom.sop_class.StereometricRelationshipStorage": [[482, "pynetdicom-sop-class-stereometricrelationshipstorage"]], "pynetdicom.sop_class.StorageCommitmentPushModel": [[483, "pynetdicom-sop-class-storagecommitmentpushmodel"]], "pynetdicom.sop_class.StorageCommitmentPushModelInstance": [[484, "pynetdicom-sop-class-storagecommitmentpushmodelinstance"]], "pynetdicom.sop_class.StorageManagementInstance": [[485, "pynetdicom-sop-class-storagemanagementinstance"]], "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind": [[486, "pynetdicom-sop-class-studyrootqueryretrieveinformationmodelfind"]], "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet": [[487, "pynetdicom-sop-class-studyrootqueryretrieveinformationmodelget"]], "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove": [[488, "pynetdicom-sop-class-studyrootqueryretrieveinformationmodelmove"]], "pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage": [[489, "pynetdicom-sop-class-subjectiverefractionmeasurementsstorage"]], "pynetdicom.sop_class.SubstanceAdministrationLogging": [[490, "pynetdicom-sop-class-substanceadministrationlogging"]], "pynetdicom.sop_class.SubstanceAdministrationLoggingInstance": [[491, "pynetdicom-sop-class-substanceadministrationlogginginstance"]], "pynetdicom.sop_class.SubstanceApprovalQuery": [[492, "pynetdicom-sop-class-substanceapprovalquery"]], "pynetdicom.sop_class.SurfaceScanMeshStorage": [[493, "pynetdicom-sop-class-surfacescanmeshstorage"]], "pynetdicom.sop_class.SurfaceScanPointCloudStorage": [[494, "pynetdicom-sop-class-surfacescanpointcloudstorage"]], "pynetdicom.sop_class.SurfaceSegmentationStorage": [[495, "pynetdicom-sop-class-surfacesegmentationstorage"]], "pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage": [[496, "pynetdicom-sop-class-tomotherapeuticradiationrecordstorage"]], "pynetdicom.sop_class.TomotherapeuticRadiationStorage": [[497, "pynetdicom-sop-class-tomotherapeuticradiationstorage"]], "pynetdicom.sop_class.TractographyResultsStorage": [[498, "pynetdicom-sop-class-tractographyresultsstorage"]], "pynetdicom.sop_class.TwelveLeadECGWaveformStorage": [[499, "pynetdicom-sop-class-twelveleadecgwaveformstorage"]], "pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance": [[500, "pynetdicom-sop-class-upsfilteredglobalsubscriptioninstance"]], "pynetdicom.sop_class.UPSGlobalSubscriptionInstance": [[501, "pynetdicom-sop-class-upsglobalsubscriptioninstance"]], "pynetdicom.sop_class.UltrasoundImageStorage": [[502, "pynetdicom-sop-class-ultrasoundimagestorage"]], "pynetdicom.sop_class.UltrasoundMultiFrameImageStorage": [[503, "pynetdicom-sop-class-ultrasoundmultiframeimagestorage"]], "pynetdicom.sop_class.UnifiedProcedureStepEvent": [[504, "pynetdicom-sop-class-unifiedprocedurestepevent"]], "pynetdicom.sop_class.UnifiedProcedureStepPull": [[505, "pynetdicom-sop-class-unifiedproceduresteppull"]], "pynetdicom.sop_class.UnifiedProcedureStepPush": [[506, "pynetdicom-sop-class-unifiedproceduresteppush"]], "pynetdicom.sop_class.UnifiedProcedureStepQuery": [[507, "pynetdicom-sop-class-unifiedprocedurestepquery"]], "pynetdicom.sop_class.UnifiedProcedureStepWatch": [[508, "pynetdicom-sop-class-unifiedprocedurestepwatch"]], "pynetdicom.sop_class.VLEndoscopicImageStorage": [[509, "pynetdicom-sop-class-vlendoscopicimagestorage"]], "pynetdicom.sop_class.VLMicroscopicImageStorage": [[510, "pynetdicom-sop-class-vlmicroscopicimagestorage"]], "pynetdicom.sop_class.VLPhotographicImageStorage": [[511, "pynetdicom-sop-class-vlphotographicimagestorage"]], "pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage": [[512, "pynetdicom-sop-class-vlslidecoordinatesmicroscopicimagestorage"]], "pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage": [[513, "pynetdicom-sop-class-vlwholeslidemicroscopyimagestorage"]], "pynetdicom.sop_class.VariableModalityLUTSoftcopyPresentationStageStorage": [[514, "pynetdicom-sop-class-variablemodalitylutsoftcopypresentationstagestorage"]], "pynetdicom.sop_class.Verification": [[515, "pynetdicom-sop-class-verification"]], "pynetdicom.sop_class.VideoEndoscopicImageStorage": [[516, "pynetdicom-sop-class-videoendoscopicimagestorage"]], "pynetdicom.sop_class.VideoMicroscopicImageStorage": [[517, "pynetdicom-sop-class-videomicroscopicimagestorage"]], "pynetdicom.sop_class.VideoPhotographicImageStorage": [[518, "pynetdicom-sop-class-videophotographicimagestorage"]], "pynetdicom.sop_class.VisualAcuityMeasurementsStorage": [[519, "pynetdicom-sop-class-visualacuitymeasurementsstorage"]], "pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage": [[520, "pynetdicom-sop-class-volumerenderingvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[521, "pynetdicom-sop-class-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[522, "pynetdicom-sop-class-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pynetdicom.sop_class.XADefinedProcedureProtocolStorage": [[523, "pynetdicom-sop-class-xadefinedprocedureprotocolstorage"]], "pynetdicom.sop_class.XAPerformedProcedureProtocolStorage": [[524, "pynetdicom-sop-class-xaperformedprocedureprotocolstorage"]], "pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[525, "pynetdicom-sop-class-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pynetdicom.sop_class.XRay3DAngiographicImageStorage": [[526, "pynetdicom-sop-class-xray3dangiographicimagestorage"]], "pynetdicom.sop_class.XRay3DCraniofacialImageStorage": [[527, "pynetdicom-sop-class-xray3dcraniofacialimagestorage"]], "pynetdicom.sop_class.XRayAngiographicImageStorage": [[528, "pynetdicom-sop-class-xrayangiographicimagestorage"]], "pynetdicom.sop_class.XRayRadiationDoseSRStorage": [[529, "pynetdicom-sop-class-xrayradiationdosesrstorage"]], "pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage": [[530, "pynetdicom-sop-class-xrayradiofluoroscopicimagestorage"]], "pynetdicom.sop_class.register_uid": [[531, "pynetdicom-sop-class-register-uid"]], "pynetdicom.sop_class.uid_to_service_class": [[532, "pynetdicom-sop-class-uid-to-service-class"]], "pynetdicom.sop_class.uid_to_sop_class": [[533, "pynetdicom-sop-class-uid-to-sop-class"]], "pynetdicom.status.Status": [[534, "pynetdicom-status-status"]], "pynetdicom.status.code_to_category": [[535, "pynetdicom-status-code-to-category"]], "pynetdicom.status.code_to_status": [[536, "pynetdicom-status-code-to-status"]], "pynetdicom.timer.Timer": [[537, "pynetdicom-timer-timer"]], "pynetdicom.transport.AssociationServer": [[538, "pynetdicom-transport-associationserver"]], "pynetdicom.transport.AssociationSocket": [[539, "pynetdicom-transport-associationsocket"]], "pynetdicom.transport.RequestHandler": [[540, "pynetdicom-transport-requesthandler"]], "pynetdicom.transport.T_CONNECT": [[541, "pynetdicom-transport-t-connect"]], "pynetdicom.transport.ThreadedAssociationServer": [[542, "pynetdicom-transport-threadedassociationserver"]], "pynetdicom.utils.decode_bytes": [[543, "pynetdicom-utils-decode-bytes"]], "pynetdicom.utils.make_target": [[544, "pynetdicom-utils-make-target"]], "pynetdicom.utils.pretty_bytes": [[545, "pynetdicom-utils-pretty-bytes"]], "pynetdicom.utils.set_ae": [[546, "pynetdicom-utils-set-ae"]], "pynetdicom.utils.set_uid": [[547, "pynetdicom-utils-set-uid"]], "pynetdicom.utils.validate_uid": [[548, "pynetdicom-utils-validate-uid"]], "Lists of Transfer Syntaxes": [[550, "lists-of-transfer-syntaxes"]], "Variables": [[550, "variables"]], "Utilities": [[550, "utilities"]], "Presentation Service (pynetdicom.presentation)": [[551, "presentation-service-pynetdicom-presentation"]], "Presentation Contexts": [[551, "presentation-contexts"], [581, "presentation-contexts"], [587, "presentation-contexts"], [590, "presentation-contexts"]], "Presentation Context Negotiation": [[551, "presentation-context-negotiation"], [590, "presentation-context-negotiation"]], "Pre-built Presentation Contexts": [[551, "pre-built-presentation-contexts"]], "Service Classes (pynetdicom.service_class)": [[552, "service-classes-pynetdicom-service-class"]], "SOP Classes (pynetdicom.sop_class)": [[553, "sop-classes-pynetdicom-sop-class"]], "SOP Class Utilities": [[553, "sop-class-utilities"]], "Application Event": [[553, "application-event"]], "Basic Worklist": [[553, "basic-worklist"]], "Color Palette": [[553, "color-palette"]], "Defined Procedure": [[553, "defined-procedure"]], "Display System": [[553, "display-system"]], "Hanging Protocol": [[553, "hanging-protocol"]], "Implant Template": [[553, "implant-template"]], "Instance Availability": [[553, "instance-availability"]], "Inventory Query/Retrieve": [[553, "inventory-query-retrieve"]], "Media Creation": [[553, "media-creation"]], "Media Storage": [[553, "media-storage"]], "Non-patient Object": [[553, "non-patient-object"]], "Print Management": [[553, "print-management"]], "Procedure Step": [[553, "procedure-step"]], "Protocol Approval": [[553, "protocol-approval"]], "Query/Retrieve": [[553, "query-retrieve"]], "Relevant Patient": [[553, "relevant-patient"]], "RT Machine Verification": [[553, "rt-machine-verification"]], "Storage": [[553, "storage"]], "Storage Commitment": [[553, "storage-commitment"]], "Storage Management": [[553, "storage-management"]], "Substance Availability": [[553, "substance-availability"]], "Unified Procedure Step": [[553, "unified-procedure-step"]], "Verification": [[553, "verification"]], "Well-known SOP Instances": [[553, "well-known-sop-instances"]], "Statuses (pynetdicom.status)": [[554, "statuses-pynetdicom-status"]], "Timer (pynetdicom.timer)": [[555, "timer-pynetdicom-timer"]], "Transport Service (pynetdicom.transport)": [[556, "transport-service-pynetdicom-transport"]], "Utilities (pynetdicom.utils)": [[557, "utilities-pynetdicom-utils"]], "Application Event Logging Service Class": [[558, "application-event-logging-service-class"]], "Supported SOP Classes": [[558, "supported-sop-classes"], [559, "supported-sop-classes"], [560, "supported-sop-classes"], [561, "supported-sop-classes"], [562, "supported-sop-classes"], [563, "supported-sop-classes"], [564, "supported-sop-classes"], [566, "supported-sop-classes"], [567, "supported-sop-classes"], [568, "supported-sop-classes"], [569, "supported-sop-classes"], [570, "supported-sop-classes"], [571, "supported-sop-classes"], [572, "supported-sop-classes"], [573, "supported-sop-classes"], [574, "supported-sop-classes"], [575, "supported-sop-classes"], [576, "supported-sop-classes"], [577, "supported-sop-classes"], [578, "supported-sop-classes"], [579, "supported-sop-classes"]], "DIMSE Services": [[558, "dimse-services"], [559, "dimse-services"], [560, "dimse-services"], [561, "dimse-services"], [562, "dimse-services"], [563, "dimse-services"], [564, "dimse-services"], [566, "dimse-services"], [567, "dimse-services"], [568, "dimse-services"], [569, "dimse-services"], [570, "dimse-services"], [571, "dimse-services"], [572, "dimse-services"], [573, "dimse-services"], [574, "dimse-services"], [575, "dimse-services"], [576, "dimse-services"], [577, "dimse-services"], [578, "dimse-services"], [579, "dimse-services"]], "Statuses": [[558, "statuses"], [559, "statuses"], [560, "statuses"], [561, "statuses"], [562, "statuses"], [563, "statuses"], [564, "statuses"], [566, "statuses"], [567, "statuses"], [568, "statuses"], [569, "statuses"], [570, "statuses"], [571, "statuses"], [572, "statuses"], [573, "statuses"], [574, "statuses"], [575, "statuses"], [576, "statuses"], [577, "statuses"], [578, "statuses"], [579, "statuses"]], "N-ACTION Statuses": [[558, "n-action-statuses"], [567, "n-action-statuses"], [570, "n-action-statuses"], [574, "n-action-statuses"], [575, "n-action-statuses"], [578, "n-action-statuses"]], "Application Event Logging Service Statuses": [[558, "application-event-logging-service-statuses"]], "Basic Worklist Management Service Class": [[559, "basic-worklist-management-service-class"]], "C-FIND Statuses": [[559, "c-find-statuses"], [560, "c-find-statuses"], [561, "c-find-statuses"], [563, "c-find-statuses"], [564, "c-find-statuses"], [571, "c-find-statuses"], [572, "c-find-statuses"], [573, "c-find-statuses"], [577, "c-find-statuses"], [578, "c-find-statuses"]], "Basic Worklist Management Service Statuses": [[559, "basic-worklist-management-service-statuses"]], "pynetdicom Basic Worklist Management Statuses": [[559, "pynetdicom-basic-worklist-management-statuses"]], "Color Palette Query/Retrieve Service Class": [[560, "color-palette-query-retrieve-service-class"]], "Color Palette Query/Retrieve (Find) Service Statuses": [[560, "color-palette-query-retrieve-find-service-statuses"]], "pynetdicom Color Palette Query/Retrieve (Find) Statuses": [[560, "pynetdicom-color-palette-query-retrieve-find-statuses"]], "C-GET Statuses": [[560, "c-get-statuses"], [561, "c-get-statuses"], [563, "c-get-statuses"], [564, "c-get-statuses"], [571, "c-get-statuses"], [572, "c-get-statuses"]], "Color Palette Query/Retrieve (Get) Service Statuses": [[560, "color-palette-query-retrieve-get-service-statuses"]], "pynetdicom Color Palette Query/Retrieve (Get) Statuses": [[560, "pynetdicom-color-palette-query-retrieve-get-statuses"]], "C-MOVE Statuses": [[560, "c-move-statuses"], [561, "c-move-statuses"], [563, "c-move-statuses"], [564, "c-move-statuses"], [571, "c-move-statuses"], [572, "c-move-statuses"]], "Color Palette Query/Retrieve (Move) Service Statuses": [[560, "color-palette-query-retrieve-move-service-statuses"]], "pynetdicom Color Palette Query/Retrieve (Move) Statuses": [[560, "pynetdicom-color-palette-query-retrieve-move-statuses"]], "Defined Procedure Protocol Query/Retrieve Service Class": [[561, "defined-procedure-protocol-query-retrieve-service-class"]], "Defined Procedure Protocol Query/Retrieve (Find) Service Statuses": [[561, "defined-procedure-protocol-query-retrieve-find-service-statuses"]], "pynetdicom Defined Procedure Protocol Query/Retrieve (Find) Statuses": [[561, "pynetdicom-defined-procedure-protocol-query-retrieve-find-statuses"]], "Defined Procedure Protocol Query/Retrieve (Get) Service Statuses": [[561, "defined-procedure-protocol-query-retrieve-get-service-statuses"]], "pynetdicom Defined Procedure Protocol Query/Retrieve (Get) Statuses": [[561, "pynetdicom-defined-procedure-protocol-query-retrieve-get-statuses"]], "Defined Procedure Protocol Query/Retrieve (Move) Service Statuses": [[561, "defined-procedure-protocol-query-retrieve-move-service-statuses"]], "pynetdicom Defined Procedure Protocol Query/Retrieve (Move) Statuses": [[561, "pynetdicom-defined-procedure-protocol-query-retrieve-move-statuses"]], "Display System Management Service Class": [[562, "display-system-management-service-class"]], "N-GET Statuses": [[562, "n-get-statuses"], [567, "n-get-statuses"], [568, "n-get-statuses"], [570, "n-get-statuses"], [574, "n-get-statuses"], [578, "n-get-statuses"]], "Hanging Protocol Query/Retrieve Service Class": [[563, "hanging-protocol-query-retrieve-service-class"]], "Hanging Protocol Query/Retrieve (Find) Service Statuses": [[563, "hanging-protocol-query-retrieve-find-service-statuses"]], "pynetdicom Hanging Protocol Query/Retrieve (Find) Statuses": [[563, "pynetdicom-hanging-protocol-query-retrieve-find-statuses"]], "Hanging Protocol Query/Retrieve (Get) Service Statuses": [[563, "hanging-protocol-query-retrieve-get-service-statuses"]], "pynetdicom Hanging Protocol Query/Retrieve (Get) Statuses": [[563, "pynetdicom-hanging-protocol-query-retrieve-get-statuses"]], "Hanging Protocol Query/Retrieve (Move) Service Statuses": [[563, "hanging-protocol-query-retrieve-move-service-statuses"]], "pynetdicom Hanging Protocol Query/Retrieve (Move) Statuses": [[563, "pynetdicom-hanging-protocol-query-retrieve-move-statuses"]], "Implant Template Query/Retrieve Service Class": [[564, "implant-template-query-retrieve-service-class"]], "Implant Template Query/Retrieve (Find) Service Statuses": [[564, "implant-template-query-retrieve-find-service-statuses"]], "pynetdicom Implant Template Query/Retrieve (Find) Statuses": [[564, "pynetdicom-implant-template-query-retrieve-find-statuses"]], "Implant Template Query/Retrieve (Get) Service Statuses": [[564, "implant-template-query-retrieve-get-service-statuses"]], "pynetdicom Implant Template Query/Retrieve (Get) Statuses": [[564, "pynetdicom-implant-template-query-retrieve-get-statuses"]], "Implant Template Query/Retrieve (Move) Service Statuses": [[564, "implant-template-query-retrieve-move-service-statuses"]], "pynetdicom Implant Template Query/Retrieve (Move) Statuses": [[564, "pynetdicom-implant-template-query-retrieve-move-statuses"]], "Instance Availability Notification Service Class": [[566, "instance-availability-notification-service-class"]], "N-CREATE Statuses": [[566, "n-create-statuses"], [567, "n-create-statuses"], [568, "n-create-statuses"], [570, "n-create-statuses"], [574, "n-create-statuses"], [578, "n-create-statuses"]], "Media Creation Management Service Class": [[567, "media-creation-management-service-class"]], "Media Creation Management N-ACTION Service Statuses": [[567, "media-creation-management-n-action-service-statuses"]], "Media Creation Management N-CREATE Service Statuses": [[567, "media-creation-management-n-create-service-statuses"]], "Media Creation Management N-GET Service Statuses": [[567, "media-creation-management-n-get-service-statuses"]], "Modality Performed Procedure Step Management": [[568, "modality-performed-procedure-step-management"]], "N-EVENT-REPORT Statuses": [[568, "n-event-report-statuses"], [570, "n-event-report-statuses"], [574, "n-event-report-statuses"], [575, "n-event-report-statuses"], [578, "n-event-report-statuses"]], "N-SET Statuses": [[568, "n-set-statuses"], [570, "n-set-statuses"], [574, "n-set-statuses"], [578, "n-set-statuses"]], "Non-Patient Object Storage Service Class": [[569, "non-patient-object-storage-service-class"]], "C-STORE Statuses": [[569, "c-store-statuses"], [576, "c-store-statuses"]], "Non-Patient Object Storage Service Statuses": [[569, "non-patient-object-storage-service-statuses"]], "pynetdicom Statuses": [[569, "pynetdicom-statuses"], [576, "pynetdicom-statuses"]], "Print Management Service Class": [[570, "print-management-service-class"]], "Meta SOP Classes": [[570, "meta-sop-classes"]], "Print Management N-ACTION Service Statuses": [[570, "print-management-n-action-service-statuses"]], "Print Management N-CREATE Service Statuses": [[570, "print-management-n-create-service-statuses"]], "N-DELETE Statuses": [[570, "n-delete-statuses"], [574, "n-delete-statuses"]], "Print Management N-SET Service Statuses": [[570, "print-management-n-set-service-statuses"]], "Protocol Approval Query/Retrieve Service Class": [[571, "protocol-approval-query-retrieve-service-class"]], "Query/Retrieve (Find) Service Statuses": [[571, "query-retrieve-find-service-statuses"], [572, "query-retrieve-find-service-statuses"]], "pynetdicom Protocol Approval Query/Retrieve (Find) Statuses": [[571, "pynetdicom-protocol-approval-query-retrieve-find-statuses"]], "Protocol Approval Query/Retrieve (Get) Service Statuses": [[571, "protocol-approval-query-retrieve-get-service-statuses"]], "pynetdicom Protocol Approval Query/Retrieve (Get) Statuses": [[571, "pynetdicom-protocol-approval-query-retrieve-get-statuses"]], "Protocol Approval Query/Retrieve (Move) Service Statuses": [[571, "protocol-approval-query-retrieve-move-service-statuses"]], "pynetdicom Protocol Approval Query/Retrieve (Move) Statuses": [[571, "pynetdicom-protocol-approval-query-retrieve-move-statuses"]], "Query/Retrieve Service Class": [[572, "query-retrieve-service-class"]], "pynetdicom Query/Retrieve (Find) Statuses": [[572, "pynetdicom-query-retrieve-find-statuses"]], "Query/Retrieve (Get) Service Statuses": [[572, "query-retrieve-get-service-statuses"]], "pynetdicom Query/Retrieve (Get) Statuses": [[572, "pynetdicom-query-retrieve-get-statuses"]], "Query/Retrieve (Move) Service Statuses": [[572, "query-retrieve-move-service-statuses"]], "pynetdicom Query/Retrieve (Move) Statuses": [[572, "pynetdicom-query-retrieve-move-statuses"]], "Relevant Patient Information Query Service Class": [[573, "relevant-patient-information-query-service-class"]], "Relevant Patient Information Query Service Statuses": [[573, "relevant-patient-information-query-service-statuses"]], "pynetdicom Relevant Patient Information Query Statuses": [[573, "pynetdicom-relevant-patient-information-query-statuses"]], "RT Machine Verification Service Class": [[574, "rt-machine-verification-service-class"]], "RT Machine Verification N-ACTION Service Statuses": [[574, "rt-machine-verification-n-action-service-statuses"]], "RT Machine Verification N-CREATE Service Statuses": [[574, "rt-machine-verification-n-create-service-statuses"]], "RT Machine Verification N-GET Service Statuses": [[574, "rt-machine-verification-n-get-service-statuses"]], "RT Machine Verification N-SET Service Statuses": [[574, "rt-machine-verification-n-set-service-statuses"]], "Storage Commitment Service Class": [[575, "storage-commitment-service-class"]], "Storage Service Class": [[576, "storage-service-class"]], "Storage Service Statuses": [[576, "storage-service-statuses"]], "Substance Administration Query Service Class": [[577, "substance-administration-query-service-class"]], "Substance Administration Query Service Statuses": [[577, "substance-administration-query-service-statuses"]], "pynetdicom Substance Administration Query Statuses": [[577, "pynetdicom-substance-administration-query-statuses"]], "Unified Procedure Step Service Class": [[578, "unified-procedure-step-service-class"]], "UPS C-FIND Service Statuses": [[578, "ups-c-find-service-statuses"]], "pynetdicom C-FIND Statuses": [[578, "pynetdicom-c-find-statuses"]], "UPS N-ACTION Service Statuses": [[578, "ups-n-action-service-statuses"]], "UPS N-CREATE Service Statuses": [[578, "ups-n-create-service-statuses"]], "UPS N-SET Service Statuses": [[578, "ups-n-set-service-statuses"], [578, "id1"]], "Verification Service Class": [[579, "verification-service-class"]], "C-ECHO Statuses": [[579, "c-echo-statuses"]], "Writing your first SCP": [[580, "writing-your-first-scp"]], "The Data Set": [[580, "the-data-set"]], "Creating a Storage SCP": [[580, "creating-a-storage-scp"]], "Events and handlers": [[580, "events-and-handlers"]], "Customising the handler": [[580, "customising-the-handler"]], "The DICOM File Format": [[580, "the-dicom-file-format"]], "Expanding the supported data": [[580, "expanding-the-supported-data"]], "Optimising and passing extra arguments": [[580, "optimising-and-passing-extra-arguments"]], "Next steps": [[580, "next-steps"], [581, "next-steps"]], "Writing your first SCU": [[581, "writing-your-first-scu"]], "DICOM networking": [[581, "dicom-networking"]], "What is an SCU?": [[581, "what-is-an-scu"]], "Start the Echo SCP": [[581, "start-the-echo-scp"]], "Create an Application Entity and associate": [[581, "create-an-application-entity-and-associate"]], "Troubleshooting associations": [[581, "troubleshooting-associations"]], "Creating the Echo SCU": [[581, "creating-the-echo-scu"]], "Turning our AE into an Echo SCU": [[581, "turning-our-ae-into-an-echo-scu"]], "Tutorials": [[582, "tutorials"]], "How to install pynetdicom": [[583, "how-to-install-pynetdicom"]], "Install the official release": [[583, "install-the-official-release"]], "Install using pip": [[583, "install-using-pip"]], "Install using conda": [[583, "install-using-conda"]], "After installation": [[583, "after-installation"]], "Install the development version": [[583, "install-the-development-version"]], "Registering a new SOP Class": [[584, "registering-a-new-sop-class"]], "Application Entity": [[585, "application-entity"]], "Creating an SCU": [[585, "creating-an-scu"]], "Adding requested Presentation Contexts": [[585, "adding-requested-presentation-contexts"]], "Specifying the network port": [[585, "specifying-the-network-port"]], "Association": [[585, "association"], [585, "id1"], [586, "association"], [587, "association"]], "Creating an SCP": [[585, "creating-an-scp"]], "Adding supported Presentation Contexts": [[585, "adding-supported-presentation-contexts"]], "Handling SCP/SCU Role Selection Negotiation": [[585, "handling-scp-scu-role-selection-negotiation"]], "Handling User Identity Negotiation": [[585, "handling-user-identity-negotiation"]], "Specifying the bind address": [[585, "specifying-the-bind-address"]], "References": [[585, "references"]], "Requesting an Association (SCU)": [[586, "requesting-an-association-scu"]], "Specifying the Called AE Title": [[586, "specifying-the-called-ae-title"]], "Specifying Presentation Contexts for each Association": [[586, "specifying-presentation-contexts-for-each-association"]], "Using Extended Negotiation": [[586, "using-extended-negotiation"]], "Binding Event Handlers": [[586, "binding-event-handlers"], [586, "id2"]], "TLS": [[586, "tls"], [586, "id3"]], "Outcomes of an Association Request": [[586, "outcomes-of-an-association-request"]], "Using an Association (SCU)": [[586, "using-an-association-scu"]], "Releasing an Association": [[586, "releasing-an-association"]], "Accessing User Identity Responses": [[586, "accessing-user-identity-responses"]], "Listening for Association Requests (SCP)": [[586, "listening-for-association-requests-scp"]], "Specifying the AE Title": [[586, "specifying-the-ae-title"]], "Specifying Presentation Contexts for each SCP": [[586, "specifying-presentation-contexts-for-each-scp"]], "Providing DIMSE Services (SCP)": [[586, "providing-dimse-services-scp"]], "Important Concepts": [[587, "important-concepts"]], "UIDs": [[587, "uids"]], "DICOM Information Model": [[587, "dicom-information-model"]], "Information Object Definition (IOD)": [[587, "information-object-definition-iod"]], "Service Classes": [[587, "service-classes"]], "Application Entities": [[587, "application-entities"]], "Abstract Syntax": [[587, "abstract-syntax"]], "Transfer Syntax": [[587, "transfer-syntax"]], "Association Negotiation and Extended Negotiation": [[587, "association-negotiation-and-extended-negotiation"]], "Events": [[588, "events"]], "Notification Events": [[588, "notification-events"]], "Intervention Events": [[588, "intervention-events"]], "Association related": [[588, "association-related"]], "Service Class related": [[588, "service-class-related"]], "Event Handlers": [[588, "event-handlers"]], "Introduction": [[590, "introduction"]], "Representation in pynetdicom": [[590, "representation-in-pynetdicom"]], "Presentation Contexts and the Association Requestor": [[590, "presentation-contexts-and-the-association-requestor"]], "Presentation Contexts and the Association Acceptor": [[590, "presentation-contexts-and-the-association-acceptor"]], "Implementation Note": [[590, "implementation-note"]], "SCP/SCU Role Selection": [[590, "scp-scu-role-selection"]]}, "indexentries": {"module": [[41, "module-pynetdicom.acse"], [43, "module-pynetdicom.ae"], [44, "module-pynetdicom.association"], [45, "module-pynetdicom._config"], [47, "module-pynetdicom.dimse_messages"], [48, "module-pynetdicom.dimse_primitives"], [49, "module-pynetdicom.dimse"], [50, "module-pynetdicom.dsutils"], [52, "module-pynetdicom.pdu"], [60, "module-pynetdicom.pdu_items"], [61, "module-pynetdicom.pdu_primitives"], [67, "module-pynetdicom.dul"], [68, "module-pynetdicom.events"], [69, "module-pynetdicom.fsm"], [549, "module-pynetdicom"], [551, "module-pynetdicom.presentation"], [552, "module-pynetdicom.service_class"], [553, "module-pynetdicom.sop_class"], [554, "module-pynetdicom.status"], [555, "module-pynetdicom.timer"], [556, "module-pynetdicom.transport"], [557, "module-pynetdicom.utils"]], "pynetdicom.acse": [[41, "module-pynetdicom.acse"]], "pynetdicom.ae": [[43, "module-pynetdicom.ae"]], "pynetdicom.association": [[44, "module-pynetdicom.association"]], "pynetdicom._config": [[45, "module-pynetdicom._config"]], "pynetdicom.dimse_messages": [[47, "module-pynetdicom.dimse_messages"]], "pynetdicom.dimse_primitives": [[48, "module-pynetdicom.dimse_primitives"]], "pynetdicom.dimse": [[49, "module-pynetdicom.dimse"]], "pynetdicom.dsutils": [[50, "module-pynetdicom.dsutils"]], "pynetdicom.pdu": [[52, "module-pynetdicom.pdu"]], "pynetdicom.pdu_items": [[60, "module-pynetdicom.pdu_items"]], "pynetdicom.pdu_primitives": [[61, "module-pynetdicom.pdu_primitives"]], "pynetdicom.dul": [[67, "module-pynetdicom.dul"]], "pynetdicom.events": [[68, "module-pynetdicom.events"]], "pynetdicom.fsm": [[69, "module-pynetdicom.fsm"]], "pynetdicom_implementation_uid (in module pynetdicom)": [[70, "pynetdicom.PYNETDICOM_IMPLEMENTATION_UID"]], "pynetdicom_implementation_version (in module pynetdicom)": [[71, "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION"]], "pynetdicom_uid_prefix (in module pynetdicom)": [[72, "pynetdicom.PYNETDICOM_UID_PREFIX"]], "codecs (in module pynetdicom._config)": [[73, "pynetdicom._config.CODECS"]], "enforce_uid_conformance (in module pynetdicom._config)": [[74, "pynetdicom._config.ENFORCE_UID_CONFORMANCE"]], "log_handler_level (in module pynetdicom._config)": [[75, "pynetdicom._config.LOG_HANDLER_LEVEL"]], "log_request_identifiers (in module pynetdicom._config)": [[76, "pynetdicom._config.LOG_REQUEST_IDENTIFIERS"]], "log_response_identifiers (in module pynetdicom._config)": [[77, "pynetdicom._config.LOG_RESPONSE_IDENTIFIERS"]], "pass_contextvars (in module pynetdicom._config)": [[78, "pynetdicom._config.PASS_CONTEXTVARS"]], "store_recv_chunked_dataset (in module pynetdicom._config)": [[79, "pynetdicom._config.STORE_RECV_CHUNKED_DATASET"]], "store_send_chunked_dataset (in module pynetdicom._config)": [[80, "pynetdicom._config.STORE_SEND_CHUNKED_DATASET"]], "unrestricted_storage_service (in module pynetdicom._config)": [[81, "pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE"]], "use_short_dimse_aet (in module pynetdicom._config)": [[82, "pynetdicom._config.USE_SHORT_DIMSE_AET"]], "validators (in module pynetdicom._config)": [[83, "pynetdicom._config.VALIDATORS"]], "windows_timer_resolution (in module pynetdicom._config)": [[84, "pynetdicom._config.WINDOWS_TIMER_RESOLUTION"]], "all_transfer_syntaxes (in module pynetdicom._globals)": [[85, "pynetdicom._globals.ALL_TRANSFER_SYNTAXES"]], "default_transfer_syntaxes (in module pynetdicom._globals)": [[86, "pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES"]], "doc_handle_acse() (in module pynetdicom._handlers)": [[87, "pynetdicom._handlers.doc_handle_acse"]], "doc_handle_action() (in module pynetdicom._handlers)": [[88, "pynetdicom._handlers.doc_handle_action"]], "doc_handle_assoc() (in module pynetdicom._handlers)": [[89, "pynetdicom._handlers.doc_handle_assoc"]], "doc_handle_async() (in module pynetdicom._handlers)": [[90, "pynetdicom._handlers.doc_handle_async"]], "doc_handle_c_get() (in module pynetdicom._handlers)": [[91, "pynetdicom._handlers.doc_handle_c_get"]], "doc_handle_create() (in module pynetdicom._handlers)": [[92, "pynetdicom._handlers.doc_handle_create"]], "doc_handle_data() (in module pynetdicom._handlers)": [[93, "pynetdicom._handlers.doc_handle_data"]], "doc_handle_delete() (in module pynetdicom._handlers)": [[94, "pynetdicom._handlers.doc_handle_delete"]], "doc_handle_dimse() (in module pynetdicom._handlers)": [[95, "pynetdicom._handlers.doc_handle_dimse"]], "doc_handle_echo() (in module pynetdicom._handlers)": [[96, "pynetdicom._handlers.doc_handle_echo"]], "doc_handle_event_report() (in module pynetdicom._handlers)": [[97, "pynetdicom._handlers.doc_handle_event_report"]], "doc_handle_find() (in module pynetdicom._handlers)": [[98, "pynetdicom._handlers.doc_handle_find"]], "doc_handle_fsm() (in module pynetdicom._handlers)": [[99, "pynetdicom._handlers.doc_handle_fsm"]], "doc_handle_move() (in module pynetdicom._handlers)": [[100, "pynetdicom._handlers.doc_handle_move"]], "doc_handle_n_get() (in module pynetdicom._handlers)": [[101, "pynetdicom._handlers.doc_handle_n_get"]], "doc_handle_pdu() (in module pynetdicom._handlers)": [[102, "pynetdicom._handlers.doc_handle_pdu"]], "doc_handle_set() (in module pynetdicom._handlers)": [[103, "pynetdicom._handlers.doc_handle_set"]], "doc_handle_sop_common() (in module pynetdicom._handlers)": [[104, "pynetdicom._handlers.doc_handle_sop_common"]], "doc_handle_sop_extended() (in module pynetdicom._handlers)": [[105, "pynetdicom._handlers.doc_handle_sop_extended"]], "doc_handle_store() (in module pynetdicom._handlers)": [[106, "pynetdicom._handlers.doc_handle_store"]], "doc_handle_transport() (in module pynetdicom._handlers)": [[107, "pynetdicom._handlers.doc_handle_transport"]], "doc_handle_userid() (in module pynetdicom._handlers)": [[108, "pynetdicom._handlers.doc_handle_userid"]], "acse (class in pynetdicom.acse)": [[109, "pynetdicom.acse.ACSE"]], "__init__() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.__init__"]], "acceptor (pynetdicom.acse.acse property)": [[109, "pynetdicom.acse.ACSE.acceptor"]], "acse_timeout (pynetdicom.acse.acse property)": [[109, "pynetdicom.acse.ACSE.acse_timeout"]], "assoc (pynetdicom.acse.acse property)": [[109, "pynetdicom.acse.ACSE.assoc"]], "dul (pynetdicom.acse.acse property)": [[109, "pynetdicom.acse.ACSE.dul"]], "is_aborted() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.is_aborted"]], "is_release_requested() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.is_release_requested"]], "negotiate_association() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.negotiate_association"]], "negotiate_release() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.negotiate_release"]], "requestor (pynetdicom.acse.acse property)": [[109, "pynetdicom.acse.ACSE.requestor"]], "send_abort() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.send_abort"]], "send_accept() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.send_accept"]], "send_ap_abort() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.send_ap_abort"]], "send_reject() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.send_reject"]], "send_release() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.send_release"]], "send_request() (pynetdicom.acse.acse method)": [[109, "pynetdicom.acse.ACSE.send_request"]], "socket (pynetdicom.acse.acse property)": [[109, "pynetdicom.acse.ACSE.socket"]], "applicationentity (class in pynetdicom.ae)": [[110, "pynetdicom.ae.ApplicationEntity"]], "__init__() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.__init__"]], "acse_timeout (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.acse_timeout"]], "active_associations (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.active_associations"]], "add_requested_context() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.add_requested_context"]], "add_supported_context() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.add_supported_context"]], "ae_title (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.ae_title"]], "associate() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.associate"]], "connection_timeout (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.connection_timeout"]], "dimse_timeout (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.dimse_timeout"]], "implementation_class_uid (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.implementation_class_uid"]], "implementation_version_name (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.implementation_version_name"]], "make_server() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.make_server"]], "maximum_associations (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.maximum_associations"]], "maximum_pdu_size (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.maximum_pdu_size"]], "network_timeout (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.network_timeout"]], "remove_requested_context() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.remove_requested_context"]], "remove_supported_context() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.remove_supported_context"]], "requested_contexts (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.requested_contexts"]], "require_called_aet (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.require_called_aet"]], "require_calling_aet (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.require_calling_aet"]], "shutdown() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.shutdown"]], "start_server() (pynetdicom.ae.applicationentity method)": [[110, "pynetdicom.ae.ApplicationEntity.start_server"]], "supported_contexts (pynetdicom.ae.applicationentity property)": [[110, "pynetdicom.ae.ApplicationEntity.supported_contexts"]], "association (class in pynetdicom.association)": [[111, "pynetdicom.association.Association"]], "__init__() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.__init__"]], "abort() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.abort"]], "accepted_contexts (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.accepted_contexts"]], "acceptor (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.acceptor"]], "acse (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.acse"]], "acse_timeout (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.acse_timeout"]], "ae (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.ae"]], "bind() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.bind"]], "dimse (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.dimse"]], "dimse_timeout (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.dimse_timeout"]], "dul (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.dul"]], "get_events() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.get_events"]], "get_handlers() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.get_handlers"]], "is_aborted (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.is_aborted"]], "is_acceptor (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.is_acceptor"]], "is_established (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.is_established"]], "is_rejected (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.is_rejected"]], "is_released (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.is_released"]], "is_requestor (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.is_requestor"]], "kill() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.kill"]], "local (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.local"]], "lock (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.lock"]], "mode (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.mode"]], "network_timeout (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.network_timeout"]], "network_timeout_response (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.network_timeout_response"]], "rejected_contexts (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.rejected_contexts"]], "release() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.release"]], "remote (pynetdicom.association.association property)": [[111, "pynetdicom.association.Association.remote"]], "request() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.request"]], "requestor (pynetdicom.association.association attribute)": [[111, "pynetdicom.association.Association.requestor"]], "run_reactor() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.run_reactor"]], "send_c_cancel() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_c_cancel"]], "send_c_echo() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_c_echo"]], "send_c_find() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_c_find"]], "send_c_get() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_c_get"]], "send_c_move() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_c_move"]], "send_c_store() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_c_store"]], "send_n_action() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_n_action"]], "send_n_create() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_n_create"]], "send_n_delete() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_n_delete"]], "send_n_event_report() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_n_event_report"]], "send_n_get() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_n_get"]], "send_n_set() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.send_n_set"]], "set_socket() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.set_socket"]], "unbind() (pynetdicom.association.association method)": [[111, "pynetdicom.association.Association.unbind"]], "serviceuser (class in pynetdicom.association)": [[112, "pynetdicom.association.ServiceUser"]], "__init__() (pynetdicom.association.serviceuser method)": [[112, "pynetdicom.association.ServiceUser.__init__"]], "accepted_common_extended (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.accepted_common_extended"]], "add_negotiation_item() (pynetdicom.association.serviceuser method)": [[112, "pynetdicom.association.ServiceUser.add_negotiation_item"]], "address (pynetdicom.association.serviceuser attribute)": [[112, "pynetdicom.association.ServiceUser.address"]], "ae_title (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.ae_title"]], "asynchronous_operations (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.asynchronous_operations"]], "extended_negotiation (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.extended_negotiation"]], "get_contexts() (pynetdicom.association.serviceuser method)": [[112, "pynetdicom.association.ServiceUser.get_contexts"]], "implementation_class_uid (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.implementation_class_uid"]], "implementation_version_name (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.implementation_version_name"]], "info (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.info"]], "is_acceptor (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.is_acceptor"]], "is_requestor (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.is_requestor"]], "maximum_length (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.maximum_length"]], "mode (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.mode"]], "port (pynetdicom.association.serviceuser attribute)": [[112, "pynetdicom.association.ServiceUser.port"]], "primitive (pynetdicom.association.serviceuser attribute)": [[112, "pynetdicom.association.ServiceUser.primitive"]], "remove_negotiation_item() (pynetdicom.association.serviceuser method)": [[112, "pynetdicom.association.ServiceUser.remove_negotiation_item"]], "requested_contexts (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.requested_contexts"]], "reset_negotiation_items() (pynetdicom.association.serviceuser method)": [[112, "pynetdicom.association.ServiceUser.reset_negotiation_items"]], "role_selection (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.role_selection"]], "sop_class_common_extended (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.sop_class_common_extended"]], "sop_class_extended (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.sop_class_extended"]], "supported_contexts (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.supported_contexts"]], "user_identity (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.user_identity"]], "user_information (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.user_information"]], "writeable (pynetdicom.association.serviceuser property)": [[112, "pynetdicom.association.ServiceUser.writeable"]], "debug_logger() (in module pynetdicom)": [[113, "pynetdicom.debug_logger"]], "dimseserviceprovider (class in pynetdicom.dimse)": [[114, "pynetdicom.dimse.DIMSEServiceProvider"]], "__init__() (pynetdicom.dimse.dimseserviceprovider method)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.__init__"]], "assoc (pynetdicom.dimse.dimseserviceprovider property)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.assoc"]], "cancel_rq (pynetdicom.dimse.dimseserviceprovider attribute)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.cancel_rq"]], "dimse_timeout (pynetdicom.dimse.dimseserviceprovider property)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.dimse_timeout"]], "dul (pynetdicom.dimse.dimseserviceprovider property)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.dul"]], "get_msg() (pynetdicom.dimse.dimseserviceprovider method)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.get_msg"]], "maximum_pdu_size (pynetdicom.dimse.dimseserviceprovider property)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.maximum_pdu_size"]], "message (pynetdicom.dimse.dimseserviceprovider attribute)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.message"]], "msg_queue (pynetdicom.dimse.dimseserviceprovider attribute)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.msg_queue"]], "peek_msg() (pynetdicom.dimse.dimseserviceprovider method)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.peek_msg"]], "receive_primitive() (pynetdicom.dimse.dimseserviceprovider method)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.receive_primitive"]], "send_msg() (pynetdicom.dimse.dimseserviceprovider method)": [[114, "pynetdicom.dimse.DIMSEServiceProvider.send_msg"]], "c_cancel_rq (class in pynetdicom.dimse_messages)": [[115, "pynetdicom.dimse_messages.C_CANCEL_RQ"]], "__init__() (pynetdicom.dimse_messages.c_cancel_rq method)": [[115, "pynetdicom.dimse_messages.C_CANCEL_RQ.__init__"]], "c_echo_rq (class in pynetdicom.dimse_messages)": [[116, "pynetdicom.dimse_messages.C_ECHO_RQ"]], "__init__() (pynetdicom.dimse_messages.c_echo_rq method)": [[116, "pynetdicom.dimse_messages.C_ECHO_RQ.__init__"]], "c_echo_rsp (class in pynetdicom.dimse_messages)": [[117, "pynetdicom.dimse_messages.C_ECHO_RSP"]], "__init__() (pynetdicom.dimse_messages.c_echo_rsp method)": [[117, "pynetdicom.dimse_messages.C_ECHO_RSP.__init__"]], "c_find_rq (class in pynetdicom.dimse_messages)": [[118, "pynetdicom.dimse_messages.C_FIND_RQ"]], "__init__() (pynetdicom.dimse_messages.c_find_rq method)": [[118, "pynetdicom.dimse_messages.C_FIND_RQ.__init__"]], "c_find_rsp (class in pynetdicom.dimse_messages)": [[119, "pynetdicom.dimse_messages.C_FIND_RSP"]], "__init__() (pynetdicom.dimse_messages.c_find_rsp method)": [[119, "pynetdicom.dimse_messages.C_FIND_RSP.__init__"]], "c_get_rq (class in pynetdicom.dimse_messages)": [[120, "pynetdicom.dimse_messages.C_GET_RQ"]], "__init__() (pynetdicom.dimse_messages.c_get_rq method)": [[120, "pynetdicom.dimse_messages.C_GET_RQ.__init__"]], "c_get_rsp (class in pynetdicom.dimse_messages)": [[121, "pynetdicom.dimse_messages.C_GET_RSP"]], "__init__() (pynetdicom.dimse_messages.c_get_rsp method)": [[121, "pynetdicom.dimse_messages.C_GET_RSP.__init__"]], "c_move_rq (class in pynetdicom.dimse_messages)": [[122, "pynetdicom.dimse_messages.C_MOVE_RQ"]], "__init__() (pynetdicom.dimse_messages.c_move_rq method)": [[122, "pynetdicom.dimse_messages.C_MOVE_RQ.__init__"]], "c_move_rsp (class in pynetdicom.dimse_messages)": [[123, "pynetdicom.dimse_messages.C_MOVE_RSP"]], "__init__() (pynetdicom.dimse_messages.c_move_rsp method)": [[123, "pynetdicom.dimse_messages.C_MOVE_RSP.__init__"]], "c_store_rq (class in pynetdicom.dimse_messages)": [[124, "pynetdicom.dimse_messages.C_STORE_RQ"]], "__init__() (pynetdicom.dimse_messages.c_store_rq method)": [[124, "pynetdicom.dimse_messages.C_STORE_RQ.__init__"]], "c_store_rsp (class in pynetdicom.dimse_messages)": [[125, "pynetdicom.dimse_messages.C_STORE_RSP"]], "__init__() (pynetdicom.dimse_messages.c_store_rsp method)": [[125, "pynetdicom.dimse_messages.C_STORE_RSP.__init__"]], "n_action_rq (class in pynetdicom.dimse_messages)": [[126, "pynetdicom.dimse_messages.N_ACTION_RQ"]], "__init__() (pynetdicom.dimse_messages.n_action_rq method)": [[126, "pynetdicom.dimse_messages.N_ACTION_RQ.__init__"]], "n_action_rsp (class in pynetdicom.dimse_messages)": [[127, "pynetdicom.dimse_messages.N_ACTION_RSP"]], "__init__() (pynetdicom.dimse_messages.n_action_rsp method)": [[127, "pynetdicom.dimse_messages.N_ACTION_RSP.__init__"]], "n_create_rq (class in pynetdicom.dimse_messages)": [[128, "pynetdicom.dimse_messages.N_CREATE_RQ"]], "__init__() (pynetdicom.dimse_messages.n_create_rq method)": [[128, "pynetdicom.dimse_messages.N_CREATE_RQ.__init__"]], "n_create_rsp (class in pynetdicom.dimse_messages)": [[129, "pynetdicom.dimse_messages.N_CREATE_RSP"]], "__init__() (pynetdicom.dimse_messages.n_create_rsp method)": [[129, "pynetdicom.dimse_messages.N_CREATE_RSP.__init__"]], "n_delete_rq (class in pynetdicom.dimse_messages)": [[130, "pynetdicom.dimse_messages.N_DELETE_RQ"]], "__init__() (pynetdicom.dimse_messages.n_delete_rq method)": [[130, "pynetdicom.dimse_messages.N_DELETE_RQ.__init__"]], "n_delete_rsp (class in pynetdicom.dimse_messages)": [[131, "pynetdicom.dimse_messages.N_DELETE_RSP"]], "__init__() (pynetdicom.dimse_messages.n_delete_rsp method)": [[131, "pynetdicom.dimse_messages.N_DELETE_RSP.__init__"]], "n_event_report_rq (class in pynetdicom.dimse_messages)": [[132, "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ"]], "__init__() (pynetdicom.dimse_messages.n_event_report_rq method)": [[132, "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ.__init__"]], "n_event_report_rsp (class in pynetdicom.dimse_messages)": [[133, "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP"]], "__init__() (pynetdicom.dimse_messages.n_event_report_rsp method)": [[133, "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP.__init__"]], "n_get_rq (class in pynetdicom.dimse_messages)": [[134, "pynetdicom.dimse_messages.N_GET_RQ"]], "__init__() (pynetdicom.dimse_messages.n_get_rq method)": [[134, "pynetdicom.dimse_messages.N_GET_RQ.__init__"]], "n_get_rsp (class in pynetdicom.dimse_messages)": [[135, "pynetdicom.dimse_messages.N_GET_RSP"]], "__init__() (pynetdicom.dimse_messages.n_get_rsp method)": [[135, "pynetdicom.dimse_messages.N_GET_RSP.__init__"]], "n_set_rq (class in pynetdicom.dimse_messages)": [[136, "pynetdicom.dimse_messages.N_SET_RQ"]], "__init__() (pynetdicom.dimse_messages.n_set_rq method)": [[136, "pynetdicom.dimse_messages.N_SET_RQ.__init__"]], "n_set_rsp (class in pynetdicom.dimse_messages)": [[137, "pynetdicom.dimse_messages.N_SET_RSP"]], "__init__() (pynetdicom.dimse_messages.n_set_rsp method)": [[137, "pynetdicom.dimse_messages.N_SET_RSP.__init__"]], "c_cancel (class in pynetdicom.dimse_primitives)": [[138, "pynetdicom.dimse_primitives.C_CANCEL"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_cancel property)": [[138, "pynetdicom.dimse_primitives.C_CANCEL.MessageIDBeingRespondedTo"]], "__init__() (pynetdicom.dimse_primitives.c_cancel method)": [[138, "pynetdicom.dimse_primitives.C_CANCEL.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_echo attribute)": [[139, "pynetdicom.dimse_primitives.C_ECHO.AffectedSOPClassUID"]], "c_echo (class in pynetdicom.dimse_primitives)": [[139, "pynetdicom.dimse_primitives.C_ECHO"]], "errorcomment (pynetdicom.dimse_primitives.c_echo attribute)": [[139, "pynetdicom.dimse_primitives.C_ECHO.ErrorComment"]], "messageid (pynetdicom.dimse_primitives.c_echo attribute)": [[139, "pynetdicom.dimse_primitives.C_ECHO.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_echo attribute)": [[139, "pynetdicom.dimse_primitives.C_ECHO.MessageIDBeingRespondedTo"]], "status (pynetdicom.dimse_primitives.c_echo attribute)": [[139, "pynetdicom.dimse_primitives.C_ECHO.Status"]], "__init__() (pynetdicom.dimse_primitives.c_echo method)": [[139, "pynetdicom.dimse_primitives.C_ECHO.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_find attribute)": [[140, "pynetdicom.dimse_primitives.C_FIND.AffectedSOPClassUID"]], "c_find (class in pynetdicom.dimse_primitives)": [[140, "pynetdicom.dimse_primitives.C_FIND"]], "errorcomment (pynetdicom.dimse_primitives.c_find attribute)": [[140, "pynetdicom.dimse_primitives.C_FIND.ErrorComment"]], "identifier (pynetdicom.dimse_primitives.c_find property)": [[140, "pynetdicom.dimse_primitives.C_FIND.Identifier"]], "messageid (pynetdicom.dimse_primitives.c_find attribute)": [[140, "pynetdicom.dimse_primitives.C_FIND.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_find attribute)": [[140, "pynetdicom.dimse_primitives.C_FIND.MessageIDBeingRespondedTo"]], "offendingelement (pynetdicom.dimse_primitives.c_find attribute)": [[140, "pynetdicom.dimse_primitives.C_FIND.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_find property)": [[140, "pynetdicom.dimse_primitives.C_FIND.Priority"]], "status (pynetdicom.dimse_primitives.c_find attribute)": [[140, "pynetdicom.dimse_primitives.C_FIND.Status"]], "__init__() (pynetdicom.dimse_primitives.c_find method)": [[140, "pynetdicom.dimse_primitives.C_FIND.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_get attribute)": [[141, "pynetdicom.dimse_primitives.C_GET.AffectedSOPClassUID"]], "c_get (class in pynetdicom.dimse_primitives)": [[141, "pynetdicom.dimse_primitives.C_GET"]], "errorcomment (pynetdicom.dimse_primitives.c_get attribute)": [[141, "pynetdicom.dimse_primitives.C_GET.ErrorComment"]], "identifier (pynetdicom.dimse_primitives.c_get property)": [[141, "pynetdicom.dimse_primitives.C_GET.Identifier"]], "messageid (pynetdicom.dimse_primitives.c_get attribute)": [[141, "pynetdicom.dimse_primitives.C_GET.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_get attribute)": [[141, "pynetdicom.dimse_primitives.C_GET.MessageIDBeingRespondedTo"]], "numberofcompletedsuboperations (pynetdicom.dimse_primitives.c_get property)": [[141, "pynetdicom.dimse_primitives.C_GET.NumberOfCompletedSuboperations"]], "numberoffailedsuboperations (pynetdicom.dimse_primitives.c_get property)": [[141, "pynetdicom.dimse_primitives.C_GET.NumberOfFailedSuboperations"]], "numberofremainingsuboperations (pynetdicom.dimse_primitives.c_get property)": [[141, "pynetdicom.dimse_primitives.C_GET.NumberOfRemainingSuboperations"]], "numberofwarningsuboperations (pynetdicom.dimse_primitives.c_get property)": [[141, "pynetdicom.dimse_primitives.C_GET.NumberOfWarningSuboperations"]], "offendingelement (pynetdicom.dimse_primitives.c_get attribute)": [[141, "pynetdicom.dimse_primitives.C_GET.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_get property)": [[141, "pynetdicom.dimse_primitives.C_GET.Priority"]], "status (pynetdicom.dimse_primitives.c_get attribute)": [[141, "pynetdicom.dimse_primitives.C_GET.Status"]], "__init__() (pynetdicom.dimse_primitives.c_get method)": [[141, "pynetdicom.dimse_primitives.C_GET.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_move attribute)": [[142, "pynetdicom.dimse_primitives.C_MOVE.AffectedSOPClassUID"]], "c_move (class in pynetdicom.dimse_primitives)": [[142, "pynetdicom.dimse_primitives.C_MOVE"]], "errorcomment (pynetdicom.dimse_primitives.c_move attribute)": [[142, "pynetdicom.dimse_primitives.C_MOVE.ErrorComment"]], "identifier (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.Identifier"]], "messageid (pynetdicom.dimse_primitives.c_move attribute)": [[142, "pynetdicom.dimse_primitives.C_MOVE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_move attribute)": [[142, "pynetdicom.dimse_primitives.C_MOVE.MessageIDBeingRespondedTo"]], "movedestination (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.MoveDestination"]], "numberofcompletedsuboperations (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.NumberOfCompletedSuboperations"]], "numberoffailedsuboperations (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.NumberOfFailedSuboperations"]], "numberofremainingsuboperations (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.NumberOfRemainingSuboperations"]], "numberofwarningsuboperations (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.NumberOfWarningSuboperations"]], "offendingelement (pynetdicom.dimse_primitives.c_move attribute)": [[142, "pynetdicom.dimse_primitives.C_MOVE.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_move property)": [[142, "pynetdicom.dimse_primitives.C_MOVE.Priority"]], "status (pynetdicom.dimse_primitives.c_move attribute)": [[142, "pynetdicom.dimse_primitives.C_MOVE.Status"]], "__init__() (pynetdicom.dimse_primitives.c_move method)": [[142, "pynetdicom.dimse_primitives.C_MOVE.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_store attribute)": [[143, "pynetdicom.dimse_primitives.C_STORE.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.c_store property)": [[143, "pynetdicom.dimse_primitives.C_STORE.AffectedSOPInstanceUID"]], "c_store (class in pynetdicom.dimse_primitives)": [[143, "pynetdicom.dimse_primitives.C_STORE"]], "dataset (pynetdicom.dimse_primitives.c_store property)": [[143, "pynetdicom.dimse_primitives.C_STORE.DataSet"]], "errorcomment (pynetdicom.dimse_primitives.c_store attribute)": [[143, "pynetdicom.dimse_primitives.C_STORE.ErrorComment"]], "messageid (pynetdicom.dimse_primitives.c_store attribute)": [[143, "pynetdicom.dimse_primitives.C_STORE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_store attribute)": [[143, "pynetdicom.dimse_primitives.C_STORE.MessageIDBeingRespondedTo"]], "moveoriginatorapplicationentitytitle (pynetdicom.dimse_primitives.c_store property)": [[143, "pynetdicom.dimse_primitives.C_STORE.MoveOriginatorApplicationEntityTitle"]], "moveoriginatormessageid (pynetdicom.dimse_primitives.c_store property)": [[143, "pynetdicom.dimse_primitives.C_STORE.MoveOriginatorMessageID"]], "offendingelement (pynetdicom.dimse_primitives.c_store attribute)": [[143, "pynetdicom.dimse_primitives.C_STORE.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_store property)": [[143, "pynetdicom.dimse_primitives.C_STORE.Priority"]], "status (pynetdicom.dimse_primitives.c_store attribute)": [[143, "pynetdicom.dimse_primitives.C_STORE.Status"]], "__init__() (pynetdicom.dimse_primitives.c_store method)": [[143, "pynetdicom.dimse_primitives.C_STORE.__init__"]], "actioninformation (pynetdicom.dimse_primitives.n_action property)": [[144, "pynetdicom.dimse_primitives.N_ACTION.ActionInformation"]], "actionreply (pynetdicom.dimse_primitives.n_action property)": [[144, "pynetdicom.dimse_primitives.N_ACTION.ActionReply"]], "actiontypeid (pynetdicom.dimse_primitives.n_action property)": [[144, "pynetdicom.dimse_primitives.N_ACTION.ActionTypeID"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_action attribute)": [[144, "pynetdicom.dimse_primitives.N_ACTION.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_action property)": [[144, "pynetdicom.dimse_primitives.N_ACTION.AffectedSOPInstanceUID"]], "messageid (pynetdicom.dimse_primitives.n_action attribute)": [[144, "pynetdicom.dimse_primitives.N_ACTION.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_action attribute)": [[144, "pynetdicom.dimse_primitives.N_ACTION.MessageIDBeingRespondedTo"]], "n_action (class in pynetdicom.dimse_primitives)": [[144, "pynetdicom.dimse_primitives.N_ACTION"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_action property)": [[144, "pynetdicom.dimse_primitives.N_ACTION.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_action property)": [[144, "pynetdicom.dimse_primitives.N_ACTION.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_action attribute)": [[144, "pynetdicom.dimse_primitives.N_ACTION.Status"]], "__init__() (pynetdicom.dimse_primitives.n_action method)": [[144, "pynetdicom.dimse_primitives.N_ACTION.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_create attribute)": [[145, "pynetdicom.dimse_primitives.N_CREATE.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_create property)": [[145, "pynetdicom.dimse_primitives.N_CREATE.AffectedSOPInstanceUID"]], "attributelist (pynetdicom.dimse_primitives.n_create property)": [[145, "pynetdicom.dimse_primitives.N_CREATE.AttributeList"]], "messageid (pynetdicom.dimse_primitives.n_create attribute)": [[145, "pynetdicom.dimse_primitives.N_CREATE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_create attribute)": [[145, "pynetdicom.dimse_primitives.N_CREATE.MessageIDBeingRespondedTo"]], "n_create (class in pynetdicom.dimse_primitives)": [[145, "pynetdicom.dimse_primitives.N_CREATE"]], "status (pynetdicom.dimse_primitives.n_create attribute)": [[145, "pynetdicom.dimse_primitives.N_CREATE.Status"]], "__init__() (pynetdicom.dimse_primitives.n_create method)": [[145, "pynetdicom.dimse_primitives.N_CREATE.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_delete attribute)": [[146, "pynetdicom.dimse_primitives.N_DELETE.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_delete property)": [[146, "pynetdicom.dimse_primitives.N_DELETE.AffectedSOPInstanceUID"]], "messageid (pynetdicom.dimse_primitives.n_delete attribute)": [[146, "pynetdicom.dimse_primitives.N_DELETE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_delete attribute)": [[146, "pynetdicom.dimse_primitives.N_DELETE.MessageIDBeingRespondedTo"]], "n_delete (class in pynetdicom.dimse_primitives)": [[146, "pynetdicom.dimse_primitives.N_DELETE"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_delete property)": [[146, "pynetdicom.dimse_primitives.N_DELETE.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_delete property)": [[146, "pynetdicom.dimse_primitives.N_DELETE.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_delete attribute)": [[146, "pynetdicom.dimse_primitives.N_DELETE.Status"]], "__init__() (pynetdicom.dimse_primitives.n_delete method)": [[146, "pynetdicom.dimse_primitives.N_DELETE.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_event_report attribute)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_event_report property)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.AffectedSOPInstanceUID"]], "eventinformation (pynetdicom.dimse_primitives.n_event_report property)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.EventInformation"]], "eventreply (pynetdicom.dimse_primitives.n_event_report property)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.EventReply"]], "eventtypeid (pynetdicom.dimse_primitives.n_event_report property)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.EventTypeID"]], "messageid (pynetdicom.dimse_primitives.n_event_report attribute)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_event_report attribute)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.MessageIDBeingRespondedTo"]], "n_event_report (class in pynetdicom.dimse_primitives)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT"]], "status (pynetdicom.dimse_primitives.n_event_report attribute)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.Status"]], "__init__() (pynetdicom.dimse_primitives.n_event_report method)": [[147, "pynetdicom.dimse_primitives.N_EVENT_REPORT.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_get attribute)": [[148, "pynetdicom.dimse_primitives.N_GET.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_get property)": [[148, "pynetdicom.dimse_primitives.N_GET.AffectedSOPInstanceUID"]], "attributeidentifierlist (pynetdicom.dimse_primitives.n_get property)": [[148, "pynetdicom.dimse_primitives.N_GET.AttributeIdentifierList"]], "attributelist (pynetdicom.dimse_primitives.n_get property)": [[148, "pynetdicom.dimse_primitives.N_GET.AttributeList"]], "messageid (pynetdicom.dimse_primitives.n_get attribute)": [[148, "pynetdicom.dimse_primitives.N_GET.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_get attribute)": [[148, "pynetdicom.dimse_primitives.N_GET.MessageIDBeingRespondedTo"]], "n_get (class in pynetdicom.dimse_primitives)": [[148, "pynetdicom.dimse_primitives.N_GET"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_get property)": [[148, "pynetdicom.dimse_primitives.N_GET.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_get property)": [[148, "pynetdicom.dimse_primitives.N_GET.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_get attribute)": [[148, "pynetdicom.dimse_primitives.N_GET.Status"]], "__init__() (pynetdicom.dimse_primitives.n_get method)": [[148, "pynetdicom.dimse_primitives.N_GET.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_set attribute)": [[149, "pynetdicom.dimse_primitives.N_SET.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_set property)": [[149, "pynetdicom.dimse_primitives.N_SET.AffectedSOPInstanceUID"]], "attributelist (pynetdicom.dimse_primitives.n_set property)": [[149, "pynetdicom.dimse_primitives.N_SET.AttributeList"]], "messageid (pynetdicom.dimse_primitives.n_set attribute)": [[149, "pynetdicom.dimse_primitives.N_SET.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_set attribute)": [[149, "pynetdicom.dimse_primitives.N_SET.MessageIDBeingRespondedTo"]], "modificationlist (pynetdicom.dimse_primitives.n_set property)": [[149, "pynetdicom.dimse_primitives.N_SET.ModificationList"]], "n_set (class in pynetdicom.dimse_primitives)": [[149, "pynetdicom.dimse_primitives.N_SET"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_set property)": [[149, "pynetdicom.dimse_primitives.N_SET.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_set property)": [[149, "pynetdicom.dimse_primitives.N_SET.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_set attribute)": [[149, "pynetdicom.dimse_primitives.N_SET.Status"]], "__init__() (pynetdicom.dimse_primitives.n_set method)": [[149, "pynetdicom.dimse_primitives.N_SET.__init__"]], "decode() (in module pynetdicom.dsutils)": [[150, "pynetdicom.dsutils.decode"]], "encode() (in module pynetdicom.dsutils)": [[151, "pynetdicom.dsutils.encode"]], "pretty_dataset() (in module pynetdicom.dsutils)": [[152, "pynetdicom.dsutils.pretty_dataset"]], "pretty_element() (in module pynetdicom.dsutils)": [[153, "pynetdicom.dsutils.pretty_element"]], "dulserviceprovider (class in pynetdicom.dul)": [[154, "pynetdicom.dul.DULServiceProvider"]], "__init__() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.__init__"]], "artim_timer (pynetdicom.dul.dulserviceprovider attribute)": [[154, "pynetdicom.dul.DULServiceProvider.artim_timer"]], "assoc (pynetdicom.dul.dulserviceprovider property)": [[154, "pynetdicom.dul.DULServiceProvider.assoc"]], "event_queue (pynetdicom.dul.dulserviceprovider attribute)": [[154, "pynetdicom.dul.DULServiceProvider.event_queue"]], "idle_timer_expired() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.idle_timer_expired"]], "kill_dul() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.kill_dul"]], "network_timeout (pynetdicom.dul.dulserviceprovider property)": [[154, "pynetdicom.dul.DULServiceProvider.network_timeout"]], "peek_next_pdu() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.peek_next_pdu"]], "receive_pdu() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.receive_pdu"]], "run_reactor() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.run_reactor"]], "send_pdu() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.send_pdu"]], "socket (pynetdicom.dul.dulserviceprovider attribute)": [[154, "pynetdicom.dul.DULServiceProvider.socket"]], "state_machine (pynetdicom.dul.dulserviceprovider attribute)": [[154, "pynetdicom.dul.DULServiceProvider.state_machine"]], "stop_dul() (pynetdicom.dul.dulserviceprovider method)": [[154, "pynetdicom.dul.DULServiceProvider.stop_dul"]], "to_provider_queue (pynetdicom.dul.dulserviceprovider attribute)": [[154, "pynetdicom.dul.DULServiceProvider.to_provider_queue"]], "to_user_queue (pynetdicom.dul.dulserviceprovider attribute)": [[154, "pynetdicom.dul.DULServiceProvider.to_user_queue"]], "event (class in pynetdicom.events)": [[155, "pynetdicom.events.Event"]], "__init__() (pynetdicom.events.event method)": [[155, "pynetdicom.events.Event.__init__"]], "action_information (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.action_information"]], "action_type (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.action_type"]], "assoc (pynetdicom.events.event attribute)": [[155, "pynetdicom.events.Event.assoc"]], "attribute_identifiers (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.attribute_identifiers"]], "attribute_list (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.attribute_list"]], "dataset (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.dataset"]], "dataset_path (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.dataset_path"]], "event (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.event"]], "event_information (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.event_information"]], "event_type (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.event_type"]], "file_meta (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.file_meta"]], "identifier (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.identifier"]], "is_cancelled (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.is_cancelled"]], "message_id (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.message_id"]], "modification_list (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.modification_list"]], "move_destination (pynetdicom.events.event property)": [[155, "pynetdicom.events.Event.move_destination"]], "timestamp (pynetdicom.events.event attribute)": [[155, "pynetdicom.events.Event.timestamp"]], "interventionevent (class in pynetdicom.events)": [[156, "pynetdicom.events.InterventionEvent"]], "__init__() (pynetdicom.events.interventionevent method)": [[156, "pynetdicom.events.InterventionEvent.__init__"]], "description (pynetdicom.events.interventionevent attribute)": [[156, "pynetdicom.events.InterventionEvent.description"]], "is_intervention (pynetdicom.events.interventionevent attribute)": [[156, "pynetdicom.events.InterventionEvent.is_intervention"]], "is_notification (pynetdicom.events.interventionevent attribute)": [[156, "pynetdicom.events.InterventionEvent.is_notification"]], "name (pynetdicom.events.interventionevent attribute)": [[156, "pynetdicom.events.InterventionEvent.name"]], "notificationevent (class in pynetdicom.events)": [[157, "pynetdicom.events.NotificationEvent"]], "__init__() (pynetdicom.events.notificationevent method)": [[157, "pynetdicom.events.NotificationEvent.__init__"]], "description (pynetdicom.events.notificationevent attribute)": [[157, "pynetdicom.events.NotificationEvent.description"]], "is_intervention (pynetdicom.events.notificationevent attribute)": [[157, "pynetdicom.events.NotificationEvent.is_intervention"]], "is_notification (pynetdicom.events.notificationevent attribute)": [[157, "pynetdicom.events.NotificationEvent.is_notification"]], "name (pynetdicom.events.notificationevent attribute)": [[157, "pynetdicom.events.NotificationEvent.name"]], "trigger() (in module pynetdicom.events)": [[158, "pynetdicom.events.trigger"]], "aa_1() (in module pynetdicom.fsm)": [[159, "pynetdicom.fsm.AA_1"]], "aa_2() (in module pynetdicom.fsm)": [[160, "pynetdicom.fsm.AA_2"]], "aa_3() (in module pynetdicom.fsm)": [[161, "pynetdicom.fsm.AA_3"]], "aa_4() (in module pynetdicom.fsm)": [[162, "pynetdicom.fsm.AA_4"]], "aa_5() (in module pynetdicom.fsm)": [[163, "pynetdicom.fsm.AA_5"]], "aa_6() (in module pynetdicom.fsm)": [[164, "pynetdicom.fsm.AA_6"]], "aa_7() (in module pynetdicom.fsm)": [[165, "pynetdicom.fsm.AA_7"]], "aa_8() (in module pynetdicom.fsm)": [[166, "pynetdicom.fsm.AA_8"]], "ae_1() (in module pynetdicom.fsm)": [[167, "pynetdicom.fsm.AE_1"]], "ae_2() (in module pynetdicom.fsm)": [[168, "pynetdicom.fsm.AE_2"]], "ae_3() (in module pynetdicom.fsm)": [[169, "pynetdicom.fsm.AE_3"]], "ae_4() (in module pynetdicom.fsm)": [[170, "pynetdicom.fsm.AE_4"]], "ae_5() (in module pynetdicom.fsm)": [[171, "pynetdicom.fsm.AE_5"]], "ae_6() (in module pynetdicom.fsm)": [[172, "pynetdicom.fsm.AE_6"]], "ae_7() (in module pynetdicom.fsm)": [[173, "pynetdicom.fsm.AE_7"]], "ae_8() (in module pynetdicom.fsm)": [[174, "pynetdicom.fsm.AE_8"]], "ar_1() (in module pynetdicom.fsm)": [[175, "pynetdicom.fsm.AR_1"]], "ar_10() (in module pynetdicom.fsm)": [[176, "pynetdicom.fsm.AR_10"]], "ar_2() (in module pynetdicom.fsm)": [[177, "pynetdicom.fsm.AR_2"]], "ar_3() (in module pynetdicom.fsm)": [[178, "pynetdicom.fsm.AR_3"]], "ar_4() (in module pynetdicom.fsm)": [[179, "pynetdicom.fsm.AR_4"]], "ar_5() (in module pynetdicom.fsm)": [[180, "pynetdicom.fsm.AR_5"]], "ar_6() (in module pynetdicom.fsm)": [[181, "pynetdicom.fsm.AR_6"]], "ar_7() (in module pynetdicom.fsm)": [[182, "pynetdicom.fsm.AR_7"]], "ar_8() (in module pynetdicom.fsm)": [[183, "pynetdicom.fsm.AR_8"]], "ar_9() (in module pynetdicom.fsm)": [[184, "pynetdicom.fsm.AR_9"]], "dt_1() (in module pynetdicom.fsm)": [[185, "pynetdicom.fsm.DT_1"]], "dt_2() (in module pynetdicom.fsm)": [[186, "pynetdicom.fsm.DT_2"]], "statemachine (class in pynetdicom.fsm)": [[187, "pynetdicom.fsm.StateMachine"]], "__init__() (pynetdicom.fsm.statemachine method)": [[187, "pynetdicom.fsm.StateMachine.__init__"]], "current_state (pynetdicom.fsm.statemachine attribute)": [[187, "pynetdicom.fsm.StateMachine.current_state"]], "do_action() (pynetdicom.fsm.statemachine method)": [[187, "pynetdicom.fsm.StateMachine.do_action"]], "dul (pynetdicom.fsm.statemachine attribute)": [[187, "pynetdicom.fsm.StateMachine.dul"]], "transition() (pynetdicom.fsm.statemachine method)": [[187, "pynetdicom.fsm.StateMachine.transition"]], "a_abort_rq (class in pynetdicom.pdu)": [[188, "pynetdicom.pdu.A_ABORT_RQ"]], "__init__() (pynetdicom.pdu.a_abort_rq method)": [[188, "pynetdicom.pdu.A_ABORT_RQ.__init__"]], "from_primitive() (pynetdicom.pdu.a_abort_rq method)": [[188, "pynetdicom.pdu.A_ABORT_RQ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_abort_rq property)": [[188, "pynetdicom.pdu.A_ABORT_RQ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_abort_rq attribute)": [[188, "pynetdicom.pdu.A_ABORT_RQ.pdu_type"]], "reason_diagnostic (pynetdicom.pdu.a_abort_rq attribute)": [[188, "pynetdicom.pdu.A_ABORT_RQ.reason_diagnostic"]], "reason_str (pynetdicom.pdu.a_abort_rq property)": [[188, "pynetdicom.pdu.A_ABORT_RQ.reason_str"]], "source (pynetdicom.pdu.a_abort_rq attribute)": [[188, "pynetdicom.pdu.A_ABORT_RQ.source"]], "source_str (pynetdicom.pdu.a_abort_rq property)": [[188, "pynetdicom.pdu.A_ABORT_RQ.source_str"]], "to_primitive() (pynetdicom.pdu.a_abort_rq method)": [[188, "pynetdicom.pdu.A_ABORT_RQ.to_primitive"]], "a_associate_ac (class in pynetdicom.pdu)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC"]], "__init__() (pynetdicom.pdu.a_associate_ac method)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.__init__"]], "application_context_name (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.application_context_name"]], "called_ae_title (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.called_ae_title"]], "calling_ae_title (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.calling_ae_title"]], "from_primitive() (pynetdicom.pdu.a_associate_ac method)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.from_primitive"]], "pdu_length (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.pdu_length"]], "pdu_type (pynetdicom.pdu.a_associate_ac attribute)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.pdu_type"]], "presentation_context (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.presentation_context"]], "protocol_version (pynetdicom.pdu.a_associate_ac attribute)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.protocol_version"]], "reserved_aec (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.reserved_aec"]], "reserved_aet (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.reserved_aet"]], "to_primitive() (pynetdicom.pdu.a_associate_ac method)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.to_primitive"]], "user_information (pynetdicom.pdu.a_associate_ac property)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.user_information"]], "variable_items (pynetdicom.pdu.a_associate_ac attribute)": [[189, "pynetdicom.pdu.A_ASSOCIATE_AC.variable_items"]], "a_associate_rj (class in pynetdicom.pdu)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ"]], "__init__() (pynetdicom.pdu.a_associate_rj method)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.__init__"]], "from_primitive() (pynetdicom.pdu.a_associate_rj method)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_associate_rj property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_associate_rj attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.pdu_type"]], "reason_diagnostic (pynetdicom.pdu.a_associate_rj attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.reason_diagnostic"]], "reason_str (pynetdicom.pdu.a_associate_rj property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.reason_str"]], "result (pynetdicom.pdu.a_associate_rj attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.result"]], "result_str (pynetdicom.pdu.a_associate_rj property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.result_str"]], "source (pynetdicom.pdu.a_associate_rj attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.source"]], "source_str (pynetdicom.pdu.a_associate_rj property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.source_str"]], "to_primitive() (pynetdicom.pdu.a_associate_rj method)": [[190, "pynetdicom.pdu.A_ASSOCIATE_RJ.to_primitive"]], "a_associate_rq (class in pynetdicom.pdu)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ"]], "__init__() (pynetdicom.pdu.a_associate_rq method)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.__init__"]], "application_context_name (pynetdicom.pdu.a_associate_rq property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.application_context_name"]], "called_ae_title (pynetdicom.pdu.a_associate_rq property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.called_ae_title"]], "calling_ae_title (pynetdicom.pdu.a_associate_rq property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.calling_ae_title"]], "from_primitive() (pynetdicom.pdu.a_associate_rq method)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_associate_rq property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_associate_rq attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.pdu_type"]], "presentation_context (pynetdicom.pdu.a_associate_rq property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.presentation_context"]], "protocol_version (pynetdicom.pdu.a_associate_rq attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.protocol_version"]], "to_primitive() (pynetdicom.pdu.a_associate_rq method)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.to_primitive"]], "user_information (pynetdicom.pdu.a_associate_rq property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.user_information"]], "variable_items (pynetdicom.pdu.a_associate_rq attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RQ.variable_items"]], "a_release_rp (class in pynetdicom.pdu)": [[192, "pynetdicom.pdu.A_RELEASE_RP"]], "__init__() (pynetdicom.pdu.a_release_rp method)": [[192, "pynetdicom.pdu.A_RELEASE_RP.__init__"]], "from_primitive() (pynetdicom.pdu.a_release_rp static method)": [[192, "pynetdicom.pdu.A_RELEASE_RP.from_primitive"]], "pdu_length (pynetdicom.pdu.a_release_rp property)": [[192, "pynetdicom.pdu.A_RELEASE_RP.pdu_length"]], "pdu_type (pynetdicom.pdu.a_release_rp attribute)": [[192, "pynetdicom.pdu.A_RELEASE_RP.pdu_type"]], "to_primitive() (pynetdicom.pdu.a_release_rp static method)": [[192, "pynetdicom.pdu.A_RELEASE_RP.to_primitive"]], "a_release_rq (class in pynetdicom.pdu)": [[193, "pynetdicom.pdu.A_RELEASE_RQ"]], "__init__() (pynetdicom.pdu.a_release_rq method)": [[193, "pynetdicom.pdu.A_RELEASE_RQ.__init__"]], "from_primitive() (pynetdicom.pdu.a_release_rq static method)": [[193, "pynetdicom.pdu.A_RELEASE_RQ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_release_rq property)": [[193, "pynetdicom.pdu.A_RELEASE_RQ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_release_rq attribute)": [[193, "pynetdicom.pdu.A_RELEASE_RQ.pdu_type"]], "to_primitive() (pynetdicom.pdu.a_release_rq static method)": [[193, "pynetdicom.pdu.A_RELEASE_RQ.to_primitive"]], "p_data_tf (class in pynetdicom.pdu)": [[194, "pynetdicom.pdu.P_DATA_TF"]], "__init__() (pynetdicom.pdu.p_data_tf method)": [[194, "pynetdicom.pdu.P_DATA_TF.__init__"]], "from_primitive() (pynetdicom.pdu.p_data_tf method)": [[194, "pynetdicom.pdu.P_DATA_TF.from_primitive"]], "pdu_length (pynetdicom.pdu.p_data_tf property)": [[194, "pynetdicom.pdu.P_DATA_TF.pdu_length"]], "pdu_type (pynetdicom.pdu.p_data_tf attribute)": [[194, "pynetdicom.pdu.P_DATA_TF.pdu_type"]], "presentation_data_value_items (pynetdicom.pdu.p_data_tf attribute)": [[194, "pynetdicom.pdu.P_DATA_TF.presentation_data_value_items"]], "to_primitive() (pynetdicom.pdu.p_data_tf method)": [[194, "pynetdicom.pdu.P_DATA_TF.to_primitive"]], "presentationdatavalueitem (class in pynetdicom.pdu)": [[195, "pynetdicom.pdu.PresentationDataValueItem"]], "__init__() (pynetdicom.pdu.presentationdatavalueitem method)": [[195, "pynetdicom.pdu.PresentationDataValueItem.__init__"]], "context_id (pynetdicom.pdu.presentationdatavalueitem property)": [[195, "pynetdicom.pdu.PresentationDataValueItem.context_id"]], "data (pynetdicom.pdu.presentationdatavalueitem property)": [[195, "pynetdicom.pdu.PresentationDataValueItem.data"]], "item_length (pynetdicom.pdu.presentationdatavalueitem property)": [[195, "pynetdicom.pdu.PresentationDataValueItem.item_length"]], "item_type (pynetdicom.pdu.presentationdatavalueitem property)": [[195, "pynetdicom.pdu.PresentationDataValueItem.item_type"]], "message_control_header_byte (pynetdicom.pdu.presentationdatavalueitem property)": [[195, "pynetdicom.pdu.PresentationDataValueItem.message_control_header_byte"]], "abstractsyntaxsubitem (class in pynetdicom.pdu_items)": [[196, "pynetdicom.pdu_items.AbstractSyntaxSubItem"]], "__init__() (pynetdicom.pdu_items.abstractsyntaxsubitem method)": [[196, "pynetdicom.pdu_items.AbstractSyntaxSubItem.__init__"]], "abstract_syntax (pynetdicom.pdu_items.abstractsyntaxsubitem property)": [[196, "pynetdicom.pdu_items.AbstractSyntaxSubItem.abstract_syntax"]], "abstract_syntax_name (pynetdicom.pdu_items.abstractsyntaxsubitem property)": [[196, "pynetdicom.pdu_items.AbstractSyntaxSubItem.abstract_syntax_name"]], "item_length (pynetdicom.pdu_items.abstractsyntaxsubitem property)": [[196, "pynetdicom.pdu_items.AbstractSyntaxSubItem.item_length"]], "applicationcontextitem (class in pynetdicom.pdu_items)": [[197, "pynetdicom.pdu_items.ApplicationContextItem"]], "__init__() (pynetdicom.pdu_items.applicationcontextitem method)": [[197, "pynetdicom.pdu_items.ApplicationContextItem.__init__"]], "application_context_name (pynetdicom.pdu_items.applicationcontextitem property)": [[197, "pynetdicom.pdu_items.ApplicationContextItem.application_context_name"]], "item_length (pynetdicom.pdu_items.applicationcontextitem property)": [[197, "pynetdicom.pdu_items.ApplicationContextItem.item_length"]], "asynchronousoperationswindowsubitem (class in pynetdicom.pdu_items)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem"]], "__init__() (pynetdicom.pdu_items.asynchronousoperationswindowsubitem method)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.asynchronousoperationswindowsubitem method)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.asynchronousoperationswindowsubitem property)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.item_length"]], "max_operations_invoked (pynetdicom.pdu_items.asynchronousoperationswindowsubitem property)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.max_operations_invoked"]], "max_operations_performed (pynetdicom.pdu_items.asynchronousoperationswindowsubitem property)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.max_operations_performed"]], "to_primitive() (pynetdicom.pdu_items.asynchronousoperationswindowsubitem method)": [[198, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.to_primitive"]], "implementationclassuidsubitem (class in pynetdicom.pdu_items)": [[199, "pynetdicom.pdu_items.ImplementationClassUIDSubItem"]], "__init__() (pynetdicom.pdu_items.implementationclassuidsubitem method)": [[199, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.implementationclassuidsubitem method)": [[199, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.from_primitive"]], "implementation_class_uid (pynetdicom.pdu_items.implementationclassuidsubitem property)": [[199, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.implementation_class_uid"]], "item_length (pynetdicom.pdu_items.implementationclassuidsubitem property)": [[199, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.item_length"]], "to_primitive() (pynetdicom.pdu_items.implementationclassuidsubitem method)": [[199, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.to_primitive"]], "implementationversionnamesubitem (class in pynetdicom.pdu_items)": [[200, "pynetdicom.pdu_items.ImplementationVersionNameSubItem"]], "__init__() (pynetdicom.pdu_items.implementationversionnamesubitem method)": [[200, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.implementationversionnamesubitem method)": [[200, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.from_primitive"]], "implementation_version_name (pynetdicom.pdu_items.implementationversionnamesubitem property)": [[200, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.implementation_version_name"]], "item_length (pynetdicom.pdu_items.implementationversionnamesubitem property)": [[200, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.item_length"]], "to_primitive() (pynetdicom.pdu_items.implementationversionnamesubitem method)": [[200, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.to_primitive"]], "maximumlengthsubitem (class in pynetdicom.pdu_items)": [[201, "pynetdicom.pdu_items.MaximumLengthSubItem"]], "__init__() (pynetdicom.pdu_items.maximumlengthsubitem method)": [[201, "pynetdicom.pdu_items.MaximumLengthSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.maximumlengthsubitem method)": [[201, "pynetdicom.pdu_items.MaximumLengthSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.maximumlengthsubitem property)": [[201, "pynetdicom.pdu_items.MaximumLengthSubItem.item_length"]], "to_primitive() (pynetdicom.pdu_items.maximumlengthsubitem method)": [[201, "pynetdicom.pdu_items.MaximumLengthSubItem.to_primitive"]], "presentationcontextitemac (class in pynetdicom.pdu_items)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC"]], "__init__() (pynetdicom.pdu_items.presentationcontextitemac method)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.__init__"]], "context_id (pynetdicom.pdu_items.presentationcontextitemac property)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.context_id"]], "from_primitive() (pynetdicom.pdu_items.presentationcontextitemac method)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.from_primitive"]], "item_length (pynetdicom.pdu_items.presentationcontextitemac property)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.item_length"]], "result (pynetdicom.pdu_items.presentationcontextitemac property)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.result"]], "result_str (pynetdicom.pdu_items.presentationcontextitemac property)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.result_str"]], "to_primitive() (pynetdicom.pdu_items.presentationcontextitemac method)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.to_primitive"]], "transfer_syntax (pynetdicom.pdu_items.presentationcontextitemac property)": [[202, "pynetdicom.pdu_items.PresentationContextItemAC.transfer_syntax"]], "presentationcontextitemrq (class in pynetdicom.pdu_items)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ"]], "__init__() (pynetdicom.pdu_items.presentationcontextitemrq method)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.__init__"]], "abstract_syntax (pynetdicom.pdu_items.presentationcontextitemrq property)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.abstract_syntax"]], "context_id (pynetdicom.pdu_items.presentationcontextitemrq property)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.context_id"]], "from_primitive() (pynetdicom.pdu_items.presentationcontextitemrq method)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.from_primitive"]], "item_length (pynetdicom.pdu_items.presentationcontextitemrq property)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.item_length"]], "to_primitive() (pynetdicom.pdu_items.presentationcontextitemrq method)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.to_primitive"]], "transfer_syntax (pynetdicom.pdu_items.presentationcontextitemrq property)": [[203, "pynetdicom.pdu_items.PresentationContextItemRQ.transfer_syntax"]], "presentationdatavalueitem (class in pynetdicom.pdu_items)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem"]], "__init__() (pynetdicom.pdu_items.presentationdatavalueitem method)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem.__init__"]], "context_id (pynetdicom.pdu_items.presentationdatavalueitem property)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem.context_id"]], "data (pynetdicom.pdu_items.presentationdatavalueitem property)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem.data"]], "item_length (pynetdicom.pdu_items.presentationdatavalueitem property)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem.item_length"]], "item_type (pynetdicom.pdu_items.presentationdatavalueitem property)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem.item_type"]], "message_control_header_byte (pynetdicom.pdu_items.presentationdatavalueitem property)": [[204, "pynetdicom.pdu_items.PresentationDataValueItem.message_control_header_byte"]], "scp_scu_roleselectionsubitem (class in pynetdicom.pdu_items)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem"]], "__init__() (pynetdicom.pdu_items.scp_scu_roleselectionsubitem method)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.scp_scu_roleselectionsubitem method)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.item_length"]], "scp (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scp"]], "scp_role (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scp_role"]], "scu (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scu"]], "scu_role (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scu_role"]], "sop_class_uid (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.sop_class_uid"]], "to_primitive() (pynetdicom.pdu_items.scp_scu_roleselectionsubitem method)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.to_primitive"]], "uid (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.uid"]], "uid_length (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[205, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.uid_length"]], "sopclasscommonextendednegotiationsubitem (class in pynetdicom.pdu_items)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem"]], "__init__() (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem method)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem method)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.item_length"]], "related_general_sop_class_identification (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.related_general_sop_class_identification"]], "related_general_sop_class_identification_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.related_general_sop_class_identification_length"]], "service_class_uid (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.service_class_uid"]], "service_class_uid_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.service_class_uid_length"]], "sop_class_uid (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.sop_class_uid"]], "sop_class_uid_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.sop_class_uid_length"]], "to_primitive() (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem method)": [[206, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.to_primitive"]], "sopclassextendednegotiationsubitem (class in pynetdicom.pdu_items)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem"]], "__init__() (pynetdicom.pdu_items.sopclassextendednegotiationsubitem method)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.__init__"]], "app_info (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.app_info"]], "from_primitive() (pynetdicom.pdu_items.sopclassextendednegotiationsubitem method)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.item_length"]], "sop_class_uid (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.sop_class_uid"]], "sop_class_uid_length (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.sop_class_uid_length"]], "to_primitive() (pynetdicom.pdu_items.sopclassextendednegotiationsubitem method)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.to_primitive"]], "uid (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.uid"]], "transfersyntaxsubitem (class in pynetdicom.pdu_items)": [[208, "pynetdicom.pdu_items.TransferSyntaxSubItem"]], "__init__() (pynetdicom.pdu_items.transfersyntaxsubitem method)": [[208, "pynetdicom.pdu_items.TransferSyntaxSubItem.__init__"]], "item_length (pynetdicom.pdu_items.transfersyntaxsubitem property)": [[208, "pynetdicom.pdu_items.TransferSyntaxSubItem.item_length"]], "transfer_syntax (pynetdicom.pdu_items.transfersyntaxsubitem property)": [[208, "pynetdicom.pdu_items.TransferSyntaxSubItem.transfer_syntax"]], "transfer_syntax_name (pynetdicom.pdu_items.transfersyntaxsubitem property)": [[208, "pynetdicom.pdu_items.TransferSyntaxSubItem.transfer_syntax_name"]], "useridentitysubitemac (class in pynetdicom.pdu_items)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC"]], "__init__() (pynetdicom.pdu_items.useridentitysubitemac method)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC.__init__"]], "from_primitive() (pynetdicom.pdu_items.useridentitysubitemac method)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC.from_primitive"]], "item_length (pynetdicom.pdu_items.useridentitysubitemac property)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC.item_length"]], "response (pynetdicom.pdu_items.useridentitysubitemac property)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC.response"]], "server_response_length (pynetdicom.pdu_items.useridentitysubitemac property)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC.server_response_length"]], "to_primitive() (pynetdicom.pdu_items.useridentitysubitemac method)": [[209, "pynetdicom.pdu_items.UserIdentitySubItemAC.to_primitive"]], "useridentitysubitemrq (class in pynetdicom.pdu_items)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ"]], "__init__() (pynetdicom.pdu_items.useridentitysubitemrq method)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.__init__"]], "from_primitive() (pynetdicom.pdu_items.useridentitysubitemrq method)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.from_primitive"]], "id_type (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.id_type"]], "id_type_str (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.id_type_str"]], "item_length (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.item_length"]], "primary (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.primary"]], "primary_field_length (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.primary_field_length"]], "response_requested (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.response_requested"]], "secondary (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.secondary"]], "secondary_field_length (pynetdicom.pdu_items.useridentitysubitemrq property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.secondary_field_length"]], "to_primitive() (pynetdicom.pdu_items.useridentitysubitemrq method)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemRQ.to_primitive"]], "userinformationitem (class in pynetdicom.pdu_items)": [[211, "pynetdicom.pdu_items.UserInformationItem"]], "__init__() (pynetdicom.pdu_items.userinformationitem method)": [[211, "pynetdicom.pdu_items.UserInformationItem.__init__"]], "async_ops_window (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.async_ops_window"]], "common_ext_neg (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.common_ext_neg"]], "ext_neg (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.ext_neg"]], "from_primitive() (pynetdicom.pdu_items.userinformationitem method)": [[211, "pynetdicom.pdu_items.UserInformationItem.from_primitive"]], "implementation_class_uid (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.implementation_class_uid"]], "implementation_version_name (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.implementation_version_name"]], "item_length (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.item_length"]], "maximum_length (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.maximum_length"]], "role_selection (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.role_selection"]], "to_primitive() (pynetdicom.pdu_items.userinformationitem method)": [[211, "pynetdicom.pdu_items.UserInformationItem.to_primitive"]], "user_identity (pynetdicom.pdu_items.userinformationitem property)": [[211, "pynetdicom.pdu_items.UserInformationItem.user_identity"]], "a_abort (class in pynetdicom.pdu_primitives)": [[212, "pynetdicom.pdu_primitives.A_ABORT"]], "__init__() (pynetdicom.pdu_primitives.a_abort method)": [[212, "pynetdicom.pdu_primitives.A_ABORT.__init__"]], "abort_source (pynetdicom.pdu_primitives.a_abort property)": [[212, "pynetdicom.pdu_primitives.A_ABORT.abort_source"]], "a_associate (class in pynetdicom.pdu_primitives)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE"]], "__init__() (pynetdicom.pdu_primitives.a_associate method)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.__init__"]], "application_context_name (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.application_context_name"]], "called_ae_title (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.called_ae_title"]], "called_presentation_address (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.called_presentation_address"]], "calling_ae_title (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.calling_ae_title"]], "calling_presentation_address (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.calling_presentation_address"]], "diagnostic (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.diagnostic"]], "implementation_class_uid (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.implementation_class_uid"]], "maximum_length_received (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.maximum_length_received"]], "mode (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.mode"]], "presentation_context_definition_list (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.presentation_context_definition_list"]], "presentation_context_definition_results_list (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.presentation_context_definition_results_list"]], "presentation_requirements (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.presentation_requirements"]], "reason_str (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.reason_str"]], "responding_ae_title (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.responding_ae_title"]], "responding_presentation_address (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.responding_presentation_address"]], "result (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.result"]], "result_source (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.result_source"]], "result_str (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.result_str"]], "session_requirements (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.session_requirements"]], "source_str (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.source_str"]], "user_information (pynetdicom.pdu_primitives.a_associate property)": [[213, "pynetdicom.pdu_primitives.A_ASSOCIATE.user_information"]], "a_p_abort (class in pynetdicom.pdu_primitives)": [[214, "pynetdicom.pdu_primitives.A_P_ABORT"]], "__init__() (pynetdicom.pdu_primitives.a_p_abort method)": [[214, "pynetdicom.pdu_primitives.A_P_ABORT.__init__"]], "provider_reason (pynetdicom.pdu_primitives.a_p_abort property)": [[214, "pynetdicom.pdu_primitives.A_P_ABORT.provider_reason"]], "a_release (class in pynetdicom.pdu_primitives)": [[215, "pynetdicom.pdu_primitives.A_RELEASE"]], "__init__() (pynetdicom.pdu_primitives.a_release method)": [[215, "pynetdicom.pdu_primitives.A_RELEASE.__init__"]], "reason (pynetdicom.pdu_primitives.a_release property)": [[215, "pynetdicom.pdu_primitives.A_RELEASE.reason"]], "result (pynetdicom.pdu_primitives.a_release property)": [[215, "pynetdicom.pdu_primitives.A_RELEASE.result"]], "asynchronousoperationswindownegotiation (class in pynetdicom.pdu_primitives)": [[216, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation"]], "__init__() (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation method)": [[216, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation method)": [[216, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.from_primitive"]], "maximum_number_operations_invoked (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation property)": [[216, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.maximum_number_operations_invoked"]], "maximum_number_operations_performed (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation property)": [[216, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.maximum_number_operations_performed"]], "implementationclassuidnotification (class in pynetdicom.pdu_primitives)": [[217, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification"]], "__init__() (pynetdicom.pdu_primitives.implementationclassuidnotification method)": [[217, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.implementationclassuidnotification method)": [[217, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification.from_primitive"]], "implementation_class_uid (pynetdicom.pdu_primitives.implementationclassuidnotification property)": [[217, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification.implementation_class_uid"]], "implementationversionnamenotification (class in pynetdicom.pdu_primitives)": [[218, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification"]], "__init__() (pynetdicom.pdu_primitives.implementationversionnamenotification method)": [[218, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.implementationversionnamenotification method)": [[218, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification.from_primitive"]], "implementation_version_name (pynetdicom.pdu_primitives.implementationversionnamenotification property)": [[218, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification.implementation_version_name"]], "maximumlengthnotification (class in pynetdicom.pdu_primitives)": [[219, "pynetdicom.pdu_primitives.MaximumLengthNotification"]], "__init__() (pynetdicom.pdu_primitives.maximumlengthnotification method)": [[219, "pynetdicom.pdu_primitives.MaximumLengthNotification.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.maximumlengthnotification method)": [[219, "pynetdicom.pdu_primitives.MaximumLengthNotification.from_primitive"]], "maximum_length_received (pynetdicom.pdu_primitives.maximumlengthnotification property)": [[219, "pynetdicom.pdu_primitives.MaximumLengthNotification.maximum_length_received"]], "p_data (class in pynetdicom.pdu_primitives)": [[220, "pynetdicom.pdu_primitives.P_DATA"]], "__init__() (pynetdicom.pdu_primitives.p_data method)": [[220, "pynetdicom.pdu_primitives.P_DATA.__init__"]], "presentation_data_value_list (pynetdicom.pdu_primitives.p_data property)": [[220, "pynetdicom.pdu_primitives.P_DATA.presentation_data_value_list"]], "scp_scu_roleselectionnegotiation (class in pynetdicom.pdu_primitives)": [[221, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation"]], "__init__() (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation method)": [[221, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation method)": [[221, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.from_primitive"]], "scp_role (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation property)": [[221, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.scp_role"]], "scu_role (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation property)": [[221, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.scu_role"]], "sop_class_uid (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation property)": [[221, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.sop_class_uid"]], "sopclasscommonextendednegotiation (class in pynetdicom.pdu_primitives)": [[222, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation"]], "__init__() (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation method)": [[222, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation method)": [[222, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.from_primitive"]], "related_general_sop_class_identification (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation property)": [[222, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.related_general_sop_class_identification"]], "service_class_uid (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation property)": [[222, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.service_class_uid"]], "sop_class_uid (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation property)": [[222, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.sop_class_uid"]], "sopclassextendednegotiation (class in pynetdicom.pdu_primitives)": [[223, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation"]], "__init__() (pynetdicom.pdu_primitives.sopclassextendednegotiation method)": [[223, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.sopclassextendednegotiation method)": [[223, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.from_primitive"]], "service_class_application_information (pynetdicom.pdu_primitives.sopclassextendednegotiation property)": [[223, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.service_class_application_information"]], "sop_class_uid (pynetdicom.pdu_primitives.sopclassextendednegotiation property)": [[223, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.sop_class_uid"]], "useridentitynegotiation (class in pynetdicom.pdu_primitives)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation"]], "__init__() (pynetdicom.pdu_primitives.useridentitynegotiation method)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.useridentitynegotiation method)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.from_primitive"]], "positive_response_requested (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.positive_response_requested"]], "primary_field (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.primary_field"]], "secondary_field (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.secondary_field"]], "server_response (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.server_response"]], "user_identity_type (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[224, "pynetdicom.pdu_primitives.UserIdentityNegotiation.user_identity_type"]], "allstoragepresentationcontexts (in module pynetdicom.presentation)": [[225, "pynetdicom.presentation.AllStoragePresentationContexts"]], "applicationeventloggingpresentationcontexts (in module pynetdicom.presentation)": [[226, "pynetdicom.presentation.ApplicationEventLoggingPresentationContexts"]], "basicworklistmanagementpresentationcontexts (in module pynetdicom.presentation)": [[227, "pynetdicom.presentation.BasicWorklistManagementPresentationContexts"]], "colorpalettepresentationcontexts (in module pynetdicom.presentation)": [[228, "pynetdicom.presentation.ColorPalettePresentationContexts"]], "definedprocedureprotocolpresentationcontexts (in module pynetdicom.presentation)": [[229, "pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts"]], "displaysystempresentationcontexts (in module pynetdicom.presentation)": [[230, "pynetdicom.presentation.DisplaySystemPresentationContexts"]], "hangingprotocolpresentationcontexts (in module pynetdicom.presentation)": [[231, "pynetdicom.presentation.HangingProtocolPresentationContexts"]], "implanttemplatepresentationcontexts (in module pynetdicom.presentation)": [[232, "pynetdicom.presentation.ImplantTemplatePresentationContexts"]], "instanceavailabilitypresentationcontexts (in module pynetdicom.presentation)": [[233, "pynetdicom.presentation.InstanceAvailabilityPresentationContexts"]], "mediacreationmanagementpresentationcontexts (in module pynetdicom.presentation)": [[234, "pynetdicom.presentation.MediaCreationManagementPresentationContexts"]], "mediastoragepresentationcontexts (in module pynetdicom.presentation)": [[235, "pynetdicom.presentation.MediaStoragePresentationContexts"]], "modalityperformedpresentationcontexts (in module pynetdicom.presentation)": [[236, "pynetdicom.presentation.ModalityPerformedPresentationContexts"]], "nonpatientobjectpresentationcontexts (in module pynetdicom.presentation)": [[237, "pynetdicom.presentation.NonPatientObjectPresentationContexts"]], "presentationcontext (class in pynetdicom.presentation)": [[238, "pynetdicom.presentation.PresentationContext"]], "__init__() (pynetdicom.presentation.presentationcontext method)": [[238, "pynetdicom.presentation.PresentationContext.__init__"]], "abstract_syntax (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.abstract_syntax"]], "add_transfer_syntax() (pynetdicom.presentation.presentationcontext method)": [[238, "pynetdicom.presentation.PresentationContext.add_transfer_syntax"]], "as_scp (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.as_scp"]], "as_scu (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.as_scu"]], "as_tuple (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.as_tuple"]], "context_id (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.context_id"]], "result (pynetdicom.presentation.presentationcontext attribute)": [[238, "pynetdicom.presentation.PresentationContext.result"]], "scp_role (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.scp_role"]], "scu_role (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.scu_role"]], "status (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.status"]], "transfer_syntax (pynetdicom.presentation.presentationcontext property)": [[238, "pynetdicom.presentation.PresentationContext.transfer_syntax"]], "presentationcontexttuple (class in pynetdicom.presentation)": [[239, "pynetdicom.presentation.PresentationContextTuple"]], "__init__() (pynetdicom.presentation.presentationcontexttuple method)": [[239, "pynetdicom.presentation.PresentationContextTuple.__init__"]], "abstract_syntax (pynetdicom.presentation.presentationcontexttuple attribute)": [[239, "pynetdicom.presentation.PresentationContextTuple.abstract_syntax"]], "context_id (pynetdicom.presentation.presentationcontexttuple attribute)": [[239, "pynetdicom.presentation.PresentationContextTuple.context_id"]], "transfer_syntax (pynetdicom.presentation.presentationcontexttuple attribute)": [[239, "pynetdicom.presentation.PresentationContextTuple.transfer_syntax"]], "printmanagementpresentationcontexts (in module pynetdicom.presentation)": [[240, "pynetdicom.presentation.PrintManagementPresentationContexts"]], "proceduresteppresentationcontexts (in module pynetdicom.presentation)": [[241, "pynetdicom.presentation.ProcedureStepPresentationContexts"]], "protocolapprovalpresentationcontexts (in module pynetdicom.presentation)": [[242, "pynetdicom.presentation.ProtocolApprovalPresentationContexts"]], "queryretrievepresentationcontexts (in module pynetdicom.presentation)": [[243, "pynetdicom.presentation.QueryRetrievePresentationContexts"]], "rtmachineverificationpresentationcontexts (in module pynetdicom.presentation)": [[244, "pynetdicom.presentation.RTMachineVerificationPresentationContexts"]], "relevantpatientinformationpresentationcontexts (in module pynetdicom.presentation)": [[245, "pynetdicom.presentation.RelevantPatientInformationPresentationContexts"]], "storagecommitmentpresentationcontexts (in module pynetdicom.presentation)": [[246, "pynetdicom.presentation.StorageCommitmentPresentationContexts"]], "storagepresentationcontexts (in module pynetdicom.presentation)": [[247, "pynetdicom.presentation.StoragePresentationContexts"]], "substanceadministrationpresentationcontexts (in module pynetdicom.presentation)": [[248, "pynetdicom.presentation.SubstanceAdministrationPresentationContexts"]], "unifiedprocedurepresentationcontexts (in module pynetdicom.presentation)": [[249, "pynetdicom.presentation.UnifiedProcedurePresentationContexts"]], "verificationpresentationcontexts (in module pynetdicom.presentation)": [[250, "pynetdicom.presentation.VerificationPresentationContexts"]], "build_context() (in module pynetdicom.presentation)": [[251, "pynetdicom.presentation.build_context"]], "build_role() (in module pynetdicom.presentation)": [[252, "pynetdicom.presentation.build_role"]], "negotiate_as_acceptor() (in module pynetdicom.presentation)": [[253, "pynetdicom.presentation.negotiate_as_acceptor"]], "negotiate_as_requestor() (in module pynetdicom.presentation)": [[254, "pynetdicom.presentation.negotiate_as_requestor"]], "basicworklistmanagementserviceclass (class in pynetdicom.service_class)": [[255, "pynetdicom.service_class.BasicWorklistManagementServiceClass"]], "scp() (pynetdicom.service_class.basicworklistmanagementserviceclass method)": [[255, "pynetdicom.service_class.BasicWorklistManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class.basicworklistmanagementserviceclass method)": [[255, "pynetdicom.service_class.BasicWorklistManagementServiceClass.__init__"]], "colorpalettequeryretrieveserviceclass (class in pynetdicom.service_class)": [[256, "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.colorpalettequeryretrieveserviceclass method)": [[256, "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass.__init__"]], "definedprocedureprotocolqueryretrieveserviceclass (class in pynetdicom.service_class)": [[257, "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.definedprocedureprotocolqueryretrieveserviceclass method)": [[257, "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass.__init__"]], "hangingprotocolqueryretrieveserviceclass (class in pynetdicom.service_class)": [[258, "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.hangingprotocolqueryretrieveserviceclass method)": [[258, "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass.__init__"]], "implanttemplatequeryretrieveserviceclass (class in pynetdicom.service_class)": [[259, "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.implanttemplatequeryretrieveserviceclass method)": [[259, "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass.__init__"]], "nonpatientobjectstorageserviceclass (class in pynetdicom.service_class)": [[260, "pynetdicom.service_class.NonPatientObjectStorageServiceClass"]], "__init__() (pynetdicom.service_class.nonpatientobjectstorageserviceclass method)": [[260, "pynetdicom.service_class.NonPatientObjectStorageServiceClass.__init__"]], "protocolapprovalqueryretrieveserviceclass (class in pynetdicom.service_class)": [[261, "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.protocolapprovalqueryretrieveserviceclass method)": [[261, "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass.__init__"]], "queryretrieveserviceclass (class in pynetdicom.service_class)": [[262, "pynetdicom.service_class.QueryRetrieveServiceClass"]], "scp() (pynetdicom.service_class.queryretrieveserviceclass method)": [[262, "pynetdicom.service_class.QueryRetrieveServiceClass.SCP"]], "__init__() (pynetdicom.service_class.queryretrieveserviceclass method)": [[262, "pynetdicom.service_class.QueryRetrieveServiceClass.__init__"]], "relevantpatientinformationqueryserviceclass (class in pynetdicom.service_class)": [[263, "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass"]], "scp() (pynetdicom.service_class.relevantpatientinformationqueryserviceclass method)": [[263, "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass.SCP"]], "__init__() (pynetdicom.service_class.relevantpatientinformationqueryserviceclass method)": [[263, "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass.__init__"]], "scp() (pynetdicom.service_class.storageserviceclass method)": [[264, "pynetdicom.service_class.StorageServiceClass.SCP"]], "storageserviceclass (class in pynetdicom.service_class)": [[264, "pynetdicom.service_class.StorageServiceClass"]], "__init__() (pynetdicom.service_class.storageserviceclass method)": [[264, "pynetdicom.service_class.StorageServiceClass.__init__"]], "scp() (pynetdicom.service_class.substanceadministrationqueryserviceclass method)": [[265, "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass.SCP"]], "substanceadministrationqueryserviceclass (class in pynetdicom.service_class)": [[265, "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass"]], "__init__() (pynetdicom.service_class.substanceadministrationqueryserviceclass method)": [[265, "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass.__init__"]], "scp() (pynetdicom.service_class.verificationserviceclass method)": [[266, "pynetdicom.service_class.VerificationServiceClass.SCP"]], "verificationserviceclass (class in pynetdicom.service_class)": [[266, "pynetdicom.service_class.VerificationServiceClass"]], "__init__() (pynetdicom.service_class.verificationserviceclass method)": [[266, "pynetdicom.service_class.VerificationServiceClass.__init__"]], "applicationeventloggingserviceclass (class in pynetdicom.service_class_n)": [[267, "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass"]], "scp() (pynetdicom.service_class_n.applicationeventloggingserviceclass method)": [[267, "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.applicationeventloggingserviceclass method)": [[267, "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass.__init__"]], "displaysystemmanagementserviceclass (class in pynetdicom.service_class_n)": [[268, "pynetdicom.service_class_n.DisplaySystemManagementServiceClass"]], "scp() (pynetdicom.service_class_n.displaysystemmanagementserviceclass method)": [[268, "pynetdicom.service_class_n.DisplaySystemManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.displaysystemmanagementserviceclass method)": [[268, "pynetdicom.service_class_n.DisplaySystemManagementServiceClass.__init__"]], "instanceavailabilitynotificationserviceclass (class in pynetdicom.service_class_n)": [[269, "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass"]], "scp() (pynetdicom.service_class_n.instanceavailabilitynotificationserviceclass method)": [[269, "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.instanceavailabilitynotificationserviceclass method)": [[269, "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass.__init__"]], "mediacreationmanagementserviceclass (class in pynetdicom.service_class_n)": [[270, "pynetdicom.service_class_n.MediaCreationManagementServiceClass"]], "scp() (pynetdicom.service_class_n.mediacreationmanagementserviceclass method)": [[270, "pynetdicom.service_class_n.MediaCreationManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.mediacreationmanagementserviceclass method)": [[270, "pynetdicom.service_class_n.MediaCreationManagementServiceClass.__init__"]], "printmanagementserviceclass (class in pynetdicom.service_class_n)": [[271, "pynetdicom.service_class_n.PrintManagementServiceClass"]], "scp() (pynetdicom.service_class_n.printmanagementserviceclass method)": [[271, "pynetdicom.service_class_n.PrintManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.printmanagementserviceclass method)": [[271, "pynetdicom.service_class_n.PrintManagementServiceClass.__init__"]], "procedurestepserviceclass (class in pynetdicom.service_class_n)": [[272, "pynetdicom.service_class_n.ProcedureStepServiceClass"]], "scp() (pynetdicom.service_class_n.procedurestepserviceclass method)": [[272, "pynetdicom.service_class_n.ProcedureStepServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.procedurestepserviceclass method)": [[272, "pynetdicom.service_class_n.ProcedureStepServiceClass.__init__"]], "rtmachineverificationserviceclass (class in pynetdicom.service_class_n)": [[273, "pynetdicom.service_class_n.RTMachineVerificationServiceClass"]], "scp() (pynetdicom.service_class_n.rtmachineverificationserviceclass method)": [[273, "pynetdicom.service_class_n.RTMachineVerificationServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.rtmachineverificationserviceclass method)": [[273, "pynetdicom.service_class_n.RTMachineVerificationServiceClass.__init__"]], "scp() (pynetdicom.service_class_n.storagecommitmentserviceclass method)": [[274, "pynetdicom.service_class_n.StorageCommitmentServiceClass.SCP"]], "storagecommitmentserviceclass (class in pynetdicom.service_class_n)": [[274, "pynetdicom.service_class_n.StorageCommitmentServiceClass"]], "__init__() (pynetdicom.service_class_n.storagecommitmentserviceclass method)": [[274, "pynetdicom.service_class_n.StorageCommitmentServiceClass.__init__"]], "scp() (pynetdicom.service_class_n.unifiedprocedurestepserviceclass method)": [[275, "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass.SCP"]], "unifiedprocedurestepserviceclass (class in pynetdicom.service_class_n)": [[275, "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass"]], "__init__() (pynetdicom.service_class_n.unifiedprocedurestepserviceclass method)": [[275, "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass.__init__"]], "acquisitioncontextsrstorage (in module pynetdicom.sop_class)": [[276, "pynetdicom.sop_class.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pynetdicom.sop_class)": [[277, "pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage"]], "ambulatoryecgwaveformstorage (in module pynetdicom.sop_class)": [[278, "pynetdicom.sop_class.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pynetdicom.sop_class)": [[279, "pynetdicom.sop_class.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pynetdicom.sop_class)": [[280, "pynetdicom.sop_class.AutorefractionMeasurementsStorage"]], "basicannotationbox (in module pynetdicom.sop_class)": [[281, "pynetdicom.sop_class.BasicAnnotationBox"]], "basiccolorimagebox (in module pynetdicom.sop_class)": [[282, "pynetdicom.sop_class.BasicColorImageBox"]], "basiccolorprintmanagementmeta (in module pynetdicom.sop_class)": [[283, "pynetdicom.sop_class.BasicColorPrintManagementMeta"]], "basicfilmbox (in module pynetdicom.sop_class)": [[284, "pynetdicom.sop_class.BasicFilmBox"]], "basicfilmsession (in module pynetdicom.sop_class)": [[285, "pynetdicom.sop_class.BasicFilmSession"]], "basicgrayscaleimagebox (in module pynetdicom.sop_class)": [[286, "pynetdicom.sop_class.BasicGrayscaleImageBox"]], "basicgrayscaleprintmanagementmeta (in module pynetdicom.sop_class)": [[287, "pynetdicom.sop_class.BasicGrayscalePrintManagementMeta"]], "basicstructureddisplaystorage (in module pynetdicom.sop_class)": [[288, "pynetdicom.sop_class.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pynetdicom.sop_class)": [[289, "pynetdicom.sop_class.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pynetdicom.sop_class)": [[290, "pynetdicom.sop_class.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[291, "pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pynetdicom.sop_class)": [[292, "pynetdicom.sop_class.BodyPositionWaveformStorage"]], "breastimagingrelevantpatientinformationquery (in module pynetdicom.sop_class)": [[293, "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery"]], "breastprojectionxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[294, "pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[295, "pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pynetdicom.sop_class)": [[296, "pynetdicom.sop_class.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pynetdicom.sop_class)": [[297, "pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pynetdicom.sop_class)": [[298, "pynetdicom.sop_class.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[299, "pynetdicom.sop_class.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pynetdicom.sop_class)": [[300, "pynetdicom.sop_class.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[301, "pynetdicom.sop_class.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pynetdicom.sop_class)": [[302, "pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage"]], "cardiacrelevantpatientinformationquery (in module pynetdicom.sop_class)": [[303, "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery"]], "chestcadsrstorage (in module pynetdicom.sop_class)": [[304, "pynetdicom.sop_class.ChestCADSRStorage"]], "coloncadsrstorage (in module pynetdicom.sop_class)": [[305, "pynetdicom.sop_class.ColonCADSRStorage"]], "colorpaletteinformationmodelfind (in module pynetdicom.sop_class)": [[306, "pynetdicom.sop_class.ColorPaletteInformationModelFind"]], "colorpaletteinformationmodelget (in module pynetdicom.sop_class)": [[307, "pynetdicom.sop_class.ColorPaletteInformationModelGet"]], "colorpaletteinformationmodelmove (in module pynetdicom.sop_class)": [[308, "pynetdicom.sop_class.ColorPaletteInformationModelMove"]], "colorpalettestorage (in module pynetdicom.sop_class)": [[309, "pynetdicom.sop_class.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[310, "pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage"]], "compositeinstanceretrievewithoutbulkdataget (in module pynetdicom.sop_class)": [[311, "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet"]], "compositeinstancerootretrieveget (in module pynetdicom.sop_class)": [[312, "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet"]], "compositeinstancerootretrievemove (in module pynetdicom.sop_class)": [[313, "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[314, "pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pynetdicom.sop_class)": [[315, "pynetdicom.sop_class.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pynetdicom.sop_class)": [[316, "pynetdicom.sop_class.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pynetdicom.sop_class)": [[317, "pynetdicom.sop_class.ComputedRadiographyImageStorage"]], "contentassessmentresultsstorage (in module pynetdicom.sop_class)": [[318, "pynetdicom.sop_class.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pynetdicom.sop_class)": [[319, "pynetdicom.sop_class.CornealTopographyMapStorage"]], "definedprocedureprotocolinformationmodelfind (in module pynetdicom.sop_class)": [[320, "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind"]], "definedprocedureprotocolinformationmodelget (in module pynetdicom.sop_class)": [[321, "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet"]], "definedprocedureprotocolinformationmodelmove (in module pynetdicom.sop_class)": [[322, "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove"]], "deformablespatialregistrationstorage (in module pynetdicom.sop_class)": [[323, "pynetdicom.sop_class.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pynetdicom.sop_class)": [[324, "pynetdicom.sop_class.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[325, "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[326, "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[327, "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[328, "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[329, "pynetdicom.sop_class.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[330, "pynetdicom.sop_class.DigitalXRayImageStorageForProcessing"]], "displaysystem (in module pynetdicom.sop_class)": [[331, "pynetdicom.sop_class.DisplaySystem"]], "displaysysteminstance (in module pynetdicom.sop_class)": [[332, "pynetdicom.sop_class.DisplaySystemInstance"]], "electromyogramwaveformstorage (in module pynetdicom.sop_class)": [[333, "pynetdicom.sop_class.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pynetdicom.sop_class)": [[334, "pynetdicom.sop_class.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pynetdicom.sop_class)": [[335, "pynetdicom.sop_class.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pynetdicom.sop_class)": [[336, "pynetdicom.sop_class.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pynetdicom.sop_class)": [[337, "pynetdicom.sop_class.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pynetdicom.sop_class)": [[338, "pynetdicom.sop_class.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pynetdicom.sop_class)": [[339, "pynetdicom.sop_class.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pynetdicom.sop_class)": [[340, "pynetdicom.sop_class.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pynetdicom.sop_class)": [[341, "pynetdicom.sop_class.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pynetdicom.sop_class)": [[342, "pynetdicom.sop_class.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pynetdicom.sop_class)": [[343, "pynetdicom.sop_class.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pynetdicom.sop_class)": [[344, "pynetdicom.sop_class.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pynetdicom.sop_class)": [[345, "pynetdicom.sop_class.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pynetdicom.sop_class)": [[346, "pynetdicom.sop_class.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pynetdicom.sop_class)": [[347, "pynetdicom.sop_class.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pynetdicom.sop_class)": [[348, "pynetdicom.sop_class.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pynetdicom.sop_class)": [[349, "pynetdicom.sop_class.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pynetdicom.sop_class)": [[350, "pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage"]], "extensiblesrstorage (in module pynetdicom.sop_class)": [[351, "pynetdicom.sop_class.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pynetdicom.sop_class)": [[352, "pynetdicom.sop_class.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pynetdicom.sop_class)": [[353, "pynetdicom.sop_class.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pynetdicom.sop_class)": [[354, "pynetdicom.sop_class.GeneralECGWaveformStorage"]], "generalrelevantpatientinformationquery (in module pynetdicom.sop_class)": [[355, "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery"]], "genericimplanttemplateinformationmodelfind (in module pynetdicom.sop_class)": [[356, "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind"]], "genericimplanttemplateinformationmodelget (in module pynetdicom.sop_class)": [[357, "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet"]], "genericimplanttemplateinformationmodelmove (in module pynetdicom.sop_class)": [[358, "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove"]], "genericimplanttemplatestorage (in module pynetdicom.sop_class)": [[359, "pynetdicom.sop_class.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[360, "pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[361, "pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage"]], "hangingprotocolinformationmodelfind (in module pynetdicom.sop_class)": [[362, "pynetdicom.sop_class.HangingProtocolInformationModelFind"]], "hangingprotocolinformationmodelget (in module pynetdicom.sop_class)": [[363, "pynetdicom.sop_class.HangingProtocolInformationModelGet"]], "hangingprotocolinformationmodelmove (in module pynetdicom.sop_class)": [[364, "pynetdicom.sop_class.HangingProtocolInformationModelMove"]], "hangingprotocolstorage (in module pynetdicom.sop_class)": [[365, "pynetdicom.sop_class.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pynetdicom.sop_class)": [[366, "pynetdicom.sop_class.HemodynamicWaveformStorage"]], "implantassemblytemplateinformationmodelfind (in module pynetdicom.sop_class)": [[367, "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind"]], "implantassemblytemplateinformationmodelget (in module pynetdicom.sop_class)": [[368, "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet"]], "implantassemblytemplateinformationmodelmove (in module pynetdicom.sop_class)": [[369, "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove"]], "implantassemblytemplatestorage (in module pynetdicom.sop_class)": [[370, "pynetdicom.sop_class.ImplantAssemblyTemplateStorage"]], "implanttemplategroupinformationmodelfind (in module pynetdicom.sop_class)": [[371, "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind"]], "implanttemplategroupinformationmodelget (in module pynetdicom.sop_class)": [[372, "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet"]], "implanttemplategroupinformationmodelmove (in module pynetdicom.sop_class)": [[373, "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove"]], "implanttemplategroupstorage (in module pynetdicom.sop_class)": [[374, "pynetdicom.sop_class.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pynetdicom.sop_class)": [[375, "pynetdicom.sop_class.ImplantationPlanSRStorage"]], "instanceavailabilitynotification (in module pynetdicom.sop_class)": [[376, "pynetdicom.sop_class.InstanceAvailabilityNotification"]], "intraocularlenscalculationsstorage (in module pynetdicom.sop_class)": [[377, "pynetdicom.sop_class.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pynetdicom.sop_class)": [[378, "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pynetdicom.sop_class)": [[379, "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorycreation (in module pynetdicom.sop_class)": [[380, "pynetdicom.sop_class.InventoryCreation"]], "inventoryfind (in module pynetdicom.sop_class)": [[381, "pynetdicom.sop_class.InventoryFind"]], "inventoryget (in module pynetdicom.sop_class)": [[382, "pynetdicom.sop_class.InventoryGet"]], "inventorymove (in module pynetdicom.sop_class)": [[383, "pynetdicom.sop_class.InventoryMove"]], "inventorystorage (in module pynetdicom.sop_class)": [[384, "pynetdicom.sop_class.InventoryStorage"]], "keratometrymeasurementsstorage (in module pynetdicom.sop_class)": [[385, "pynetdicom.sop_class.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pynetdicom.sop_class)": [[386, "pynetdicom.sop_class.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pynetdicom.sop_class)": [[387, "pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pynetdicom.sop_class)": [[388, "pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pynetdicom.sop_class)": [[389, "pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pynetdicom.sop_class)": [[390, "pynetdicom.sop_class.LensometryMeasurementsStorage"]], "mrimagestorage (in module pynetdicom.sop_class)": [[391, "pynetdicom.sop_class.MRImageStorage"]], "mrspectroscopystorage (in module pynetdicom.sop_class)": [[392, "pynetdicom.sop_class.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pynetdicom.sop_class)": [[393, "pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pynetdicom.sop_class)": [[394, "pynetdicom.sop_class.MammographyCADSRStorage"]], "mediacreationmanagement (in module pynetdicom.sop_class)": [[395, "pynetdicom.sop_class.MediaCreationManagement"]], "mediastoragedirectorystorage (in module pynetdicom.sop_class)": [[396, "pynetdicom.sop_class.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pynetdicom.sop_class)": [[397, "pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage"]], "modalityperformedprocedurestep (in module pynetdicom.sop_class)": [[398, "pynetdicom.sop_class.ModalityPerformedProcedureStep"]], "modalityperformedprocedurestepnotification (in module pynetdicom.sop_class)": [[399, "pynetdicom.sop_class.ModalityPerformedProcedureStepNotification"]], "modalityperformedprocedurestepretrieve (in module pynetdicom.sop_class)": [[400, "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve"]], "modalityworklistinformationfind (in module pynetdicom.sop_class)": [[401, "pynetdicom.sop_class.ModalityWorklistInformationFind"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[402, "pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[403, "pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[404, "pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[405, "pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pynetdicom.sop_class)": [[406, "pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[407, "pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pynetdicom.sop_class)": [[408, "pynetdicom.sop_class.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pynetdicom.sop_class)": [[409, "pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pynetdicom.sop_class)": [[410, "pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pynetdicom.sop_class)": [[411, "pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pynetdicom.sop_class)": [[412, "pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pynetdicom.sop_class)": [[413, "pynetdicom.sop_class.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pynetdicom.sop_class)": [[414, "pynetdicom.sop_class.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pynetdicom.sop_class)": [[415, "pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "ophthlamicopticalcoherencetomographybscanvolumeanalysisstorage (in module pynetdicom.sop_class)": [[416, "pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "parametricmapstorage (in module pynetdicom.sop_class)": [[417, "pynetdicom.sop_class.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pynetdicom.sop_class)": [[418, "pynetdicom.sop_class.PatientRadiationDoseSRStorage"]], "patientrootqueryretrieveinformationmodelfind (in module pynetdicom.sop_class)": [[419, "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind"]], "patientrootqueryretrieveinformationmodelget (in module pynetdicom.sop_class)": [[420, "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet"]], "patientrootqueryretrieveinformationmodelmove (in module pynetdicom.sop_class)": [[421, "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove"]], "patientstudyonlyqueryretrieveinformationmodelfind (in module pynetdicom.sop_class)": [[422, "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind"]], "patientstudyonlyqueryretrieveinformationmodelget (in module pynetdicom.sop_class)": [[423, "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet"]], "patientstudyonlyqueryretrieveinformationmodelmove (in module pynetdicom.sop_class)": [[424, "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove"]], "performedimagingagentadministrationsrstorage (in module pynetdicom.sop_class)": [[425, "pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pynetdicom.sop_class)": [[426, "pynetdicom.sop_class.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pynetdicom.sop_class)": [[427, "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pynetdicom.sop_class)": [[428, "pynetdicom.sop_class.PositronEmissionTomographyImageStorage"]], "presentationlut (in module pynetdicom.sop_class)": [[429, "pynetdicom.sop_class.PresentationLUT"]], "printjob (in module pynetdicom.sop_class)": [[430, "pynetdicom.sop_class.PrintJob"]], "printer (in module pynetdicom.sop_class)": [[431, "pynetdicom.sop_class.Printer"]], "printerconfigurationretrieval (in module pynetdicom.sop_class)": [[432, "pynetdicom.sop_class.PrinterConfigurationRetrieval"]], "printerconfigurationretrievalinstance (in module pynetdicom.sop_class)": [[433, "pynetdicom.sop_class.PrinterConfigurationRetrievalInstance"]], "printerinstance (in module pynetdicom.sop_class)": [[434, "pynetdicom.sop_class.PrinterInstance"]], "proceduraleventlogging (in module pynetdicom.sop_class)": [[435, "pynetdicom.sop_class.ProceduralEventLogging"]], "proceduraleventlogginginstance (in module pynetdicom.sop_class)": [[436, "pynetdicom.sop_class.ProceduralEventLoggingInstance"]], "procedurelogstorage (in module pynetdicom.sop_class)": [[437, "pynetdicom.sop_class.ProcedureLogStorage"]], "productcharacteristicsquery (in module pynetdicom.sop_class)": [[438, "pynetdicom.sop_class.ProductCharacteristicsQuery"]], "protocolapprovalinformationmodelfind (in module pynetdicom.sop_class)": [[439, "pynetdicom.sop_class.ProtocolApprovalInformationModelFind"]], "protocolapprovalinformationmodelget (in module pynetdicom.sop_class)": [[440, "pynetdicom.sop_class.ProtocolApprovalInformationModelGet"]], "protocolapprovalinformationmodelmove (in module pynetdicom.sop_class)": [[441, "pynetdicom.sop_class.ProtocolApprovalInformationModelMove"]], "protocolapprovalstorage (in module pynetdicom.sop_class)": [[442, "pynetdicom.sop_class.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstagestorage (in module pynetdicom.sop_class)": [[443, "pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage"]], "rtbeamsdeliveryinstructionstorage (in module pynetdicom.sop_class)": [[444, "pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pynetdicom.sop_class)": [[445, "pynetdicom.sop_class.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionsstorage (in module pynetdicom.sop_class)": [[446, "pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage"]], "rtbrachytreatmentrecordstorage (in module pynetdicom.sop_class)": [[447, "pynetdicom.sop_class.RTBrachyTreatmentRecordStorage"]], "rtconventionalmachineverification (in module pynetdicom.sop_class)": [[448, "pynetdicom.sop_class.RTConventionalMachineVerification"]], "rtdosestorage (in module pynetdicom.sop_class)": [[449, "pynetdicom.sop_class.RTDoseStorage"]], "rtimagestorage (in module pynetdicom.sop_class)": [[450, "pynetdicom.sop_class.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pynetdicom.sop_class)": [[451, "pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage"]], "rtionmachineverification (in module pynetdicom.sop_class)": [[452, "pynetdicom.sop_class.RTIonMachineVerification"]], "rtionplanstorage (in module pynetdicom.sop_class)": [[453, "pynetdicom.sop_class.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pynetdicom.sop_class)": [[454, "pynetdicom.sop_class.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pynetdicom.sop_class)": [[455, "pynetdicom.sop_class.RTPhysicianIntentStorage"]], "rtplanstorage (in module pynetdicom.sop_class)": [[456, "pynetdicom.sop_class.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pynetdicom.sop_class)": [[457, "pynetdicom.sop_class.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pynetdicom.sop_class)": [[458, "pynetdicom.sop_class.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pynetdicom.sop_class)": [[459, "pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pynetdicom.sop_class)": [[460, "pynetdicom.sop_class.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pynetdicom.sop_class)": [[461, "pynetdicom.sop_class.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pynetdicom.sop_class)": [[462, "pynetdicom.sop_class.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pynetdicom.sop_class)": [[463, "pynetdicom.sop_class.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pynetdicom.sop_class)": [[464, "pynetdicom.sop_class.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pynetdicom.sop_class)": [[465, "pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pynetdicom.sop_class)": [[466, "pynetdicom.sop_class.RawDataStorage"]], "realworldvaluemappingstorage (in module pynetdicom.sop_class)": [[467, "pynetdicom.sop_class.RealWorldValueMappingStorage"]], "repositoryquery (in module pynetdicom.sop_class)": [[468, "pynetdicom.sop_class.RepositoryQuery"]], "respiratorywaveformstorage (in module pynetdicom.sop_class)": [[469, "pynetdicom.sop_class.RespiratoryWaveformStorage"]], "roboticarmradiationrecordstorage (in module pynetdicom.sop_class)": [[470, "pynetdicom.sop_class.RoboticArmRadiationRecordStorage"]], "roboticarmradiationstorage (in module pynetdicom.sop_class)": [[471, "pynetdicom.sop_class.RoboticArmRadiationStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pynetdicom.sop_class)": [[472, "pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage"]], "sopclass (class in pynetdicom.sop_class)": [[473, "pynetdicom.sop_class.SOPClass"]], "__init__() (pynetdicom.sop_class.sopclass method)": [[473, "pynetdicom.sop_class.SOPClass.__init__"]], "service_class (pynetdicom.sop_class.sopclass property)": [[473, "pynetdicom.sop_class.SOPClass.service_class"]], "secondarycaptureimagestorage (in module pynetdicom.sop_class)": [[474, "pynetdicom.sop_class.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pynetdicom.sop_class)": [[475, "pynetdicom.sop_class.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[476, "pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pynetdicom.sop_class)": [[477, "pynetdicom.sop_class.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pynetdicom.sop_class)": [[478, "pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pynetdicom.sop_class)": [[479, "pynetdicom.sop_class.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pynetdicom.sop_class)": [[480, "pynetdicom.sop_class.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pynetdicom.sop_class)": [[481, "pynetdicom.sop_class.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pynetdicom.sop_class)": [[482, "pynetdicom.sop_class.StereometricRelationshipStorage"]], "storagecommitmentpushmodel (in module pynetdicom.sop_class)": [[483, "pynetdicom.sop_class.StorageCommitmentPushModel"]], "storagecommitmentpushmodelinstance (in module pynetdicom.sop_class)": [[484, "pynetdicom.sop_class.StorageCommitmentPushModelInstance"]], "storagemanagementinstance (in module pynetdicom.sop_class)": [[485, "pynetdicom.sop_class.StorageManagementInstance"]], "studyrootqueryretrieveinformationmodelfind (in module pynetdicom.sop_class)": [[486, "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind"]], "studyrootqueryretrieveinformationmodelget (in module pynetdicom.sop_class)": [[487, "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet"]], "studyrootqueryretrieveinformationmodelmove (in module pynetdicom.sop_class)": [[488, "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove"]], "subjectiverefractionmeasurementsstorage (in module pynetdicom.sop_class)": [[489, "pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage"]], "substanceadministrationlogging (in module pynetdicom.sop_class)": [[490, "pynetdicom.sop_class.SubstanceAdministrationLogging"]], "substanceadministrationlogginginstance (in module pynetdicom.sop_class)": [[491, "pynetdicom.sop_class.SubstanceAdministrationLoggingInstance"]], "substanceapprovalquery (in module pynetdicom.sop_class)": [[492, "pynetdicom.sop_class.SubstanceApprovalQuery"]], "surfacescanmeshstorage (in module pynetdicom.sop_class)": [[493, "pynetdicom.sop_class.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pynetdicom.sop_class)": [[494, "pynetdicom.sop_class.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pynetdicom.sop_class)": [[495, "pynetdicom.sop_class.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pynetdicom.sop_class)": [[496, "pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pynetdicom.sop_class)": [[497, "pynetdicom.sop_class.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pynetdicom.sop_class)": [[498, "pynetdicom.sop_class.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pynetdicom.sop_class)": [[499, "pynetdicom.sop_class.TwelveLeadECGWaveformStorage"]], "upsfilteredglobalsubscriptioninstance (in module pynetdicom.sop_class)": [[500, "pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance"]], "upsglobalsubscriptioninstance (in module pynetdicom.sop_class)": [[501, "pynetdicom.sop_class.UPSGlobalSubscriptionInstance"]], "ultrasoundimagestorage (in module pynetdicom.sop_class)": [[502, "pynetdicom.sop_class.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pynetdicom.sop_class)": [[503, "pynetdicom.sop_class.UltrasoundMultiFrameImageStorage"]], "unifiedprocedurestepevent (in module pynetdicom.sop_class)": [[504, "pynetdicom.sop_class.UnifiedProcedureStepEvent"]], "unifiedproceduresteppull (in module pynetdicom.sop_class)": [[505, "pynetdicom.sop_class.UnifiedProcedureStepPull"]], "unifiedproceduresteppush (in module pynetdicom.sop_class)": [[506, "pynetdicom.sop_class.UnifiedProcedureStepPush"]], "unifiedprocedurestepquery (in module pynetdicom.sop_class)": [[507, "pynetdicom.sop_class.UnifiedProcedureStepQuery"]], "unifiedprocedurestepwatch (in module pynetdicom.sop_class)": [[508, "pynetdicom.sop_class.UnifiedProcedureStepWatch"]], "vlendoscopicimagestorage (in module pynetdicom.sop_class)": [[509, "pynetdicom.sop_class.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pynetdicom.sop_class)": [[510, "pynetdicom.sop_class.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pynetdicom.sop_class)": [[511, "pynetdicom.sop_class.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pynetdicom.sop_class)": [[512, "pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pynetdicom.sop_class)": [[513, "pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstagestorage (in module pynetdicom.sop_class)": [[514, "pynetdicom.sop_class.VariableModalityLUTSoftcopyPresentationStageStorage"]], "verification (in module pynetdicom.sop_class)": [[515, "pynetdicom.sop_class.Verification"]], "videoendoscopicimagestorage (in module pynetdicom.sop_class)": [[516, "pynetdicom.sop_class.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pynetdicom.sop_class)": [[517, "pynetdicom.sop_class.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pynetdicom.sop_class)": [[518, "pynetdicom.sop_class.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pynetdicom.sop_class)": [[519, "pynetdicom.sop_class.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[520, "pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pynetdicom.sop_class)": [[521, "pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pynetdicom.sop_class)": [[522, "pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[523, "pynetdicom.sop_class.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[524, "pynetdicom.sop_class.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[525, "pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pynetdicom.sop_class)": [[526, "pynetdicom.sop_class.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pynetdicom.sop_class)": [[527, "pynetdicom.sop_class.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pynetdicom.sop_class)": [[528, "pynetdicom.sop_class.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pynetdicom.sop_class)": [[529, "pynetdicom.sop_class.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pynetdicom.sop_class)": [[530, "pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage"]], "register_uid() (in module pynetdicom.sop_class)": [[531, "pynetdicom.sop_class.register_uid"]], "uid_to_service_class() (in module pynetdicom.sop_class)": [[532, "pynetdicom.sop_class.uid_to_service_class"]], "uid_to_sop_class() (in module pynetdicom.sop_class)": [[533, "pynetdicom.sop_class.uid_to_sop_class"]], "cancel (pynetdicom.status.status attribute)": [[534, "pynetdicom.status.Status.CANCEL"]], "move_destination_unknown (pynetdicom.status.status attribute)": [[534, "pynetdicom.status.Status.MOVE_DESTINATION_UNKNOWN"]], "pending (pynetdicom.status.status attribute)": [[534, "pynetdicom.status.Status.PENDING"]], "success (pynetdicom.status.status attribute)": [[534, "pynetdicom.status.Status.SUCCESS"]], "status (class in pynetdicom.status)": [[534, "pynetdicom.status.Status"]], "__init__() (pynetdicom.status.status method)": [[534, "pynetdicom.status.Status.__init__"]], "add() (pynetdicom.status.status class method)": [[534, "pynetdicom.status.Status.add"]], "code_to_category() (in module pynetdicom.status)": [[535, "pynetdicom.status.code_to_category"]], "code_to_status() (in module pynetdicom.status)": [[536, "pynetdicom.status.code_to_status"]], "timer (class in pynetdicom.timer)": [[537, "pynetdicom.timer.Timer"]], "__init__() (pynetdicom.timer.timer method)": [[537, "pynetdicom.timer.Timer.__init__"]], "expired (pynetdicom.timer.timer property)": [[537, "pynetdicom.timer.Timer.expired"]], "remaining (pynetdicom.timer.timer property)": [[537, "pynetdicom.timer.Timer.remaining"]], "restart() (pynetdicom.timer.timer method)": [[537, "pynetdicom.timer.Timer.restart"]], "start() (pynetdicom.timer.timer method)": [[537, "pynetdicom.timer.Timer.start"]], "stop() (pynetdicom.timer.timer method)": [[537, "pynetdicom.timer.Timer.stop"]], "timeout (pynetdicom.timer.timer property)": [[537, "pynetdicom.timer.Timer.timeout"]], "associationserver (class in pynetdicom.transport)": [[538, "pynetdicom.transport.AssociationServer"]], "__init__() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.__init__"]], "active_associations (pynetdicom.transport.associationserver property)": [[538, "pynetdicom.transport.AssociationServer.active_associations"]], "ae (pynetdicom.transport.associationserver attribute)": [[538, "pynetdicom.transport.AssociationServer.ae"]], "bind() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.bind"]], "get_events() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.get_events"]], "get_handlers() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.get_handlers"]], "get_request() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.get_request"]], "process_request() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.process_request"]], "request_queue_size (pynetdicom.transport.associationserver attribute)": [[538, "pynetdicom.transport.AssociationServer.request_queue_size"]], "server_address (pynetdicom.transport.associationserver attribute)": [[538, "pynetdicom.transport.AssociationServer.server_address"]], "server_bind() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.server_bind"]], "server_close() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.server_close"]], "service_actions() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.service_actions"]], "shutdown() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.shutdown"]], "ssl_context (pynetdicom.transport.associationserver property)": [[538, "pynetdicom.transport.AssociationServer.ssl_context"]], "unbind() (pynetdicom.transport.associationserver method)": [[538, "pynetdicom.transport.AssociationServer.unbind"]], "associationsocket (class in pynetdicom.transport)": [[539, "pynetdicom.transport.AssociationSocket"]], "__init__() (pynetdicom.transport.associationsocket method)": [[539, "pynetdicom.transport.AssociationSocket.__init__"]], "assoc (pynetdicom.transport.associationsocket property)": [[539, "pynetdicom.transport.AssociationSocket.assoc"]], "close() (pynetdicom.transport.associationsocket method)": [[539, "pynetdicom.transport.AssociationSocket.close"]], "connect() (pynetdicom.transport.associationsocket method)": [[539, "pynetdicom.transport.AssociationSocket.connect"]], "event_queue (pynetdicom.transport.associationsocket property)": [[539, "pynetdicom.transport.AssociationSocket.event_queue"]], "get_local_addr() (pynetdicom.transport.associationsocket method)": [[539, "pynetdicom.transport.AssociationSocket.get_local_addr"]], "provider_queue (pynetdicom.transport.associationsocket property)": [[539, "pynetdicom.transport.AssociationSocket.provider_queue"]], "ready (pynetdicom.transport.associationsocket property)": [[539, "pynetdicom.transport.AssociationSocket.ready"]], "recv() (pynetdicom.transport.associationsocket method)": [[539, "pynetdicom.transport.AssociationSocket.recv"]], "select_timeout (pynetdicom.transport.associationsocket attribute)": [[539, "pynetdicom.transport.AssociationSocket.select_timeout"]], "send() (pynetdicom.transport.associationsocket method)": [[539, "pynetdicom.transport.AssociationSocket.send"]], "socket (pynetdicom.transport.associationsocket attribute)": [[539, "pynetdicom.transport.AssociationSocket.socket"]], "tls_args (pynetdicom.transport.associationsocket property)": [[539, "pynetdicom.transport.AssociationSocket.tls_args"]], "requesthandler (class in pynetdicom.transport)": [[540, "pynetdicom.transport.RequestHandler"]], "__init__() (pynetdicom.transport.requesthandler method)": [[540, "pynetdicom.transport.RequestHandler.__init__"]], "ae (pynetdicom.transport.requesthandler property)": [[540, "pynetdicom.transport.RequestHandler.ae"]], "client_address (pynetdicom.transport.requesthandler attribute)": [[540, "pynetdicom.transport.RequestHandler.client_address"]], "handle() (pynetdicom.transport.requesthandler method)": [[540, "pynetdicom.transport.RequestHandler.handle"]], "local (pynetdicom.transport.requesthandler property)": [[540, "pynetdicom.transport.RequestHandler.local"]], "remote (pynetdicom.transport.requesthandler property)": [[540, "pynetdicom.transport.RequestHandler.remote"]], "request (pynetdicom.transport.requesthandler attribute)": [[540, "pynetdicom.transport.RequestHandler.request"]], "server (pynetdicom.transport.requesthandler attribute)": [[540, "pynetdicom.transport.RequestHandler.server"]], "t_connect (class in pynetdicom.transport)": [[541, "pynetdicom.transport.T_CONNECT"]], "__init__() (pynetdicom.transport.t_connect method)": [[541, "pynetdicom.transport.T_CONNECT.__init__"]], "address (pynetdicom.transport.t_connect property)": [[541, "pynetdicom.transport.T_CONNECT.address"]], "request (pynetdicom.transport.t_connect attribute)": [[541, "pynetdicom.transport.T_CONNECT.request"]], "result (pynetdicom.transport.t_connect property)": [[541, "pynetdicom.transport.T_CONNECT.result"]], "threadedassociationserver (class in pynetdicom.transport)": [[542, "pynetdicom.transport.ThreadedAssociationServer"]], "__init__() (pynetdicom.transport.threadedassociationserver method)": [[542, "pynetdicom.transport.ThreadedAssociationServer.__init__"]], "process_request_thread() (pynetdicom.transport.threadedassociationserver method)": [[542, "pynetdicom.transport.ThreadedAssociationServer.process_request_thread"]], "decode_bytes() (in module pynetdicom.utils)": [[543, "pynetdicom.utils.decode_bytes"]], "make_target() (in module pynetdicom.utils)": [[544, "pynetdicom.utils.make_target"]], "pretty_bytes() (in module pynetdicom.utils)": [[545, "pynetdicom.utils.pretty_bytes"]], "set_ae() (in module pynetdicom.utils)": [[546, "pynetdicom.utils.set_ae"]], "set_uid() (in module pynetdicom.utils)": [[547, "pynetdicom.utils.set_uid"]], "validate_uid() (in module pynetdicom.utils)": [[548, "pynetdicom.utils.validate_uid"]], "pynetdicom": [[549, "module-pynetdicom"]], "pynetdicom.presentation": [[551, "module-pynetdicom.presentation"]], "pynetdicom.service_class": [[552, "module-pynetdicom.service_class"]], "pynetdicom.sop_class": [[553, "module-pynetdicom.sop_class"]], "pynetdicom.status": [[554, "module-pynetdicom.status"]], "pynetdicom.timer": [[555, "module-pynetdicom.timer"]], "pynetdicom.transport": [[556, "module-pynetdicom.transport"]], "pynetdicom.utils": [[557, "module-pynetdicom.utils"]]}})