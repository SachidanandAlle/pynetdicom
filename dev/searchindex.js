Search.setIndex({"docnames": ["apps/echoscp", "apps/echoscu", "apps/findscu", "apps/getscu", "apps/index", "apps/keyword_pathing", "apps/movescu", "apps/qrscp", "apps/storescp", "apps/storescu", "changelog/index", "changelog/v1.0.0", "changelog/v1.1.0", "changelog/v1.2.0", "changelog/v1.3.0", "changelog/v1.3.1", "changelog/v1.4.0", "changelog/v1.4.1", "changelog/v1.5.0", "changelog/v1.5.1", "changelog/v1.5.2", "changelog/v1.5.3", "changelog/v1.5.4", "changelog/v1.5.5", "changelog/v1.5.6", "changelog/v1.5.7", "changelog/v2.0.0", "changelog/v2.0.1", "changelog/v2.1.0", "changelog/v2.2.0", "examples/basic_worklist", "examples/display", "examples/index", "examples/mpps", "examples/print", "examples/qr_find", "examples/qr_get", "examples/qr_move", "examples/relevant_patient", "examples/storage", "examples/verification", "index", "reference/acse", "reference/acse.provider", "reference/ae", "reference/association", "reference/config", "reference/dimse", "reference/dimse.messages", "reference/dimse.primitives", "reference/dimse.provider", "reference/dsutils", "reference/dul", "reference/dul.pdu", "reference/dul.pdu.a_abort_rq", "reference/dul.pdu.a_associate_ac", "reference/dul.pdu.a_associate_rj", "reference/dul.pdu.a_associate_rq", "reference/dul.pdu.a_release_rp", "reference/dul.pdu.a_release_rq", "reference/dul.pdu.p_data_tf", "reference/dul.pdu_items", "reference/dul.pdu_primitives", "reference/dul.pdu_primitives.a_abort", "reference/dul.pdu_primitives.a_associate", "reference/dul.pdu_primitives.a_p_abort", "reference/dul.pdu_primitives.a_release", "reference/dul.pdu_primitives.p_data", "reference/dul.provider", "reference/events", "reference/fsm", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_UID", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION", "reference/generated/pynetdicom.PYNETDICOM_UID_PREFIX", "reference/generated/pynetdicom._config.CODECS", "reference/generated/pynetdicom._config.ENFORCE_UID_CONFORMANCE", "reference/generated/pynetdicom._config.LOG_HANDLER_LEVEL", "reference/generated/pynetdicom._config.LOG_REQUEST_IDENTIFIERS", "reference/generated/pynetdicom._config.LOG_RESPONSE_IDENTIFIERS", "reference/generated/pynetdicom._config.PASS_CONTEXTVARS", "reference/generated/pynetdicom._config.STORE_RECV_CHUNKED_DATASET", "reference/generated/pynetdicom._config.STORE_SEND_CHUNKED_DATASET", "reference/generated/pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE", "reference/generated/pynetdicom._config.USE_SHORT_DIMSE_AET", "reference/generated/pynetdicom._config.VALIDATORS", "reference/generated/pynetdicom._config.WINDOWS_TIMER_RESOLUTION", "reference/generated/pynetdicom._globals.ALL_TRANSFER_SYNTAXES", "reference/generated/pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES", "reference/generated/pynetdicom._handlers.doc_handle_acse", "reference/generated/pynetdicom._handlers.doc_handle_action", "reference/generated/pynetdicom._handlers.doc_handle_assoc", "reference/generated/pynetdicom._handlers.doc_handle_async", "reference/generated/pynetdicom._handlers.doc_handle_c_get", "reference/generated/pynetdicom._handlers.doc_handle_create", "reference/generated/pynetdicom._handlers.doc_handle_data", "reference/generated/pynetdicom._handlers.doc_handle_delete", "reference/generated/pynetdicom._handlers.doc_handle_dimse", "reference/generated/pynetdicom._handlers.doc_handle_echo", "reference/generated/pynetdicom._handlers.doc_handle_event_report", "reference/generated/pynetdicom._handlers.doc_handle_find", "reference/generated/pynetdicom._handlers.doc_handle_fsm", "reference/generated/pynetdicom._handlers.doc_handle_move", "reference/generated/pynetdicom._handlers.doc_handle_n_get", "reference/generated/pynetdicom._handlers.doc_handle_pdu", "reference/generated/pynetdicom._handlers.doc_handle_set", "reference/generated/pynetdicom._handlers.doc_handle_sop_common", "reference/generated/pynetdicom._handlers.doc_handle_sop_extended", "reference/generated/pynetdicom._handlers.doc_handle_store", "reference/generated/pynetdicom._handlers.doc_handle_transport", "reference/generated/pynetdicom._handlers.doc_handle_userid", "reference/generated/pynetdicom.acse.ACSE", "reference/generated/pynetdicom.ae.ApplicationEntity", "reference/generated/pynetdicom.association.Association", "reference/generated/pynetdicom.association.ServiceUser", "reference/generated/pynetdicom.debug_logger", "reference/generated/pynetdicom.dimse.DIMSEServiceProvider", "reference/generated/pynetdicom.dimse_messages.C_CANCEL_RQ", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RQ", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RSP", "reference/generated/pynetdicom.dimse_messages.C_FIND_RQ", "reference/generated/pynetdicom.dimse_messages.C_FIND_RSP", "reference/generated/pynetdicom.dimse_messages.C_GET_RQ", "reference/generated/pynetdicom.dimse_messages.C_GET_RSP", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RQ", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RSP", "reference/generated/pynetdicom.dimse_messages.C_STORE_RQ", "reference/generated/pynetdicom.dimse_messages.C_STORE_RSP", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RQ", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RSP", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RQ", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RSP", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RQ", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RSP", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RQ", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RSP", "reference/generated/pynetdicom.dimse_messages.N_GET_RQ", "reference/generated/pynetdicom.dimse_messages.N_GET_RSP", "reference/generated/pynetdicom.dimse_messages.N_SET_RQ", "reference/generated/pynetdicom.dimse_messages.N_SET_RSP", "reference/generated/pynetdicom.dimse_primitives.C_CANCEL", "reference/generated/pynetdicom.dimse_primitives.C_ECHO", "reference/generated/pynetdicom.dimse_primitives.C_FIND", "reference/generated/pynetdicom.dimse_primitives.C_GET", "reference/generated/pynetdicom.dimse_primitives.C_MOVE", "reference/generated/pynetdicom.dimse_primitives.C_STORE", "reference/generated/pynetdicom.dimse_primitives.N_ACTION", "reference/generated/pynetdicom.dimse_primitives.N_CREATE", "reference/generated/pynetdicom.dimse_primitives.N_DELETE", "reference/generated/pynetdicom.dimse_primitives.N_EVENT_REPORT", "reference/generated/pynetdicom.dimse_primitives.N_GET", "reference/generated/pynetdicom.dimse_primitives.N_SET", "reference/generated/pynetdicom.dsutils.decode", "reference/generated/pynetdicom.dsutils.encode", "reference/generated/pynetdicom.dsutils.pretty_dataset", "reference/generated/pynetdicom.dsutils.pretty_element", "reference/generated/pynetdicom.dul.DULServiceProvider", "reference/generated/pynetdicom.events.Event", "reference/generated/pynetdicom.events.InterventionEvent", "reference/generated/pynetdicom.events.NotificationEvent", "reference/generated/pynetdicom.events.trigger", "reference/generated/pynetdicom.fsm.AA_1", "reference/generated/pynetdicom.fsm.AA_2", "reference/generated/pynetdicom.fsm.AA_3", "reference/generated/pynetdicom.fsm.AA_4", "reference/generated/pynetdicom.fsm.AA_5", "reference/generated/pynetdicom.fsm.AA_6", "reference/generated/pynetdicom.fsm.AA_7", "reference/generated/pynetdicom.fsm.AA_8", "reference/generated/pynetdicom.fsm.AE_1", "reference/generated/pynetdicom.fsm.AE_2", "reference/generated/pynetdicom.fsm.AE_3", "reference/generated/pynetdicom.fsm.AE_4", "reference/generated/pynetdicom.fsm.AE_5", "reference/generated/pynetdicom.fsm.AE_6", "reference/generated/pynetdicom.fsm.AE_7", "reference/generated/pynetdicom.fsm.AE_8", "reference/generated/pynetdicom.fsm.AR_1", "reference/generated/pynetdicom.fsm.AR_10", "reference/generated/pynetdicom.fsm.AR_2", "reference/generated/pynetdicom.fsm.AR_3", "reference/generated/pynetdicom.fsm.AR_4", "reference/generated/pynetdicom.fsm.AR_5", "reference/generated/pynetdicom.fsm.AR_6", "reference/generated/pynetdicom.fsm.AR_7", "reference/generated/pynetdicom.fsm.AR_8", "reference/generated/pynetdicom.fsm.AR_9", "reference/generated/pynetdicom.fsm.DT_1", "reference/generated/pynetdicom.fsm.DT_2", "reference/generated/pynetdicom.fsm.StateMachine", "reference/generated/pynetdicom.pdu.A_ABORT_RQ", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_AC", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RJ", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RQ", "reference/generated/pynetdicom.pdu.A_RELEASE_RP", "reference/generated/pynetdicom.pdu.A_RELEASE_RQ", "reference/generated/pynetdicom.pdu.P_DATA_TF", "reference/generated/pynetdicom.pdu.PresentationDataValueItem", "reference/generated/pynetdicom.pdu_items.AbstractSyntaxSubItem", "reference/generated/pynetdicom.pdu_items.ApplicationContextItem", "reference/generated/pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem", "reference/generated/pynetdicom.pdu_items.ImplementationClassUIDSubItem", "reference/generated/pynetdicom.pdu_items.ImplementationVersionNameSubItem", "reference/generated/pynetdicom.pdu_items.MaximumLengthSubItem", "reference/generated/pynetdicom.pdu_items.PresentationContextItemAC", "reference/generated/pynetdicom.pdu_items.PresentationContextItemRQ", "reference/generated/pynetdicom.pdu_items.PresentationDataValueItem", "reference/generated/pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem", "reference/generated/pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem", "reference/generated/pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem", "reference/generated/pynetdicom.pdu_items.TransferSyntaxSubItem", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemAC", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemRQ", "reference/generated/pynetdicom.pdu_items.UserInformationItem", "reference/generated/pynetdicom.pdu_primitives.A_ABORT", "reference/generated/pynetdicom.pdu_primitives.A_ASSOCIATE", "reference/generated/pynetdicom.pdu_primitives.A_P_ABORT", "reference/generated/pynetdicom.pdu_primitives.A_RELEASE", "reference/generated/pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation", "reference/generated/pynetdicom.pdu_primitives.ImplementationClassUIDNotification", "reference/generated/pynetdicom.pdu_primitives.ImplementationVersionNameNotification", "reference/generated/pynetdicom.pdu_primitives.MaximumLengthNotification", "reference/generated/pynetdicom.pdu_primitives.P_DATA", "reference/generated/pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation", "reference/generated/pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation", "reference/generated/pynetdicom.pdu_primitives.SOPClassExtendedNegotiation", "reference/generated/pynetdicom.pdu_primitives.UserIdentityNegotiation", "reference/generated/pynetdicom.presentation.AllStoragePresentationContexts", "reference/generated/pynetdicom.presentation.ApplicationEventLoggingPresentationContexts", "reference/generated/pynetdicom.presentation.BasicWorklistManagementPresentationContexts", "reference/generated/pynetdicom.presentation.ColorPalettePresentationContexts", "reference/generated/pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts", "reference/generated/pynetdicom.presentation.DisplaySystemPresentationContexts", "reference/generated/pynetdicom.presentation.HangingProtocolPresentationContexts", "reference/generated/pynetdicom.presentation.ImplantTemplatePresentationContexts", "reference/generated/pynetdicom.presentation.InstanceAvailabilityPresentationContexts", "reference/generated/pynetdicom.presentation.MediaCreationManagementPresentationContexts", "reference/generated/pynetdicom.presentation.MediaStoragePresentationContexts", "reference/generated/pynetdicom.presentation.ModalityPerformedPresentationContexts", "reference/generated/pynetdicom.presentation.NonPatientObjectPresentationContexts", "reference/generated/pynetdicom.presentation.PresentationContext", "reference/generated/pynetdicom.presentation.PresentationContextTuple", "reference/generated/pynetdicom.presentation.PrintManagementPresentationContexts", "reference/generated/pynetdicom.presentation.ProcedureStepPresentationContexts", "reference/generated/pynetdicom.presentation.ProtocolApprovalPresentationContexts", "reference/generated/pynetdicom.presentation.QueryRetrievePresentationContexts", "reference/generated/pynetdicom.presentation.RTMachineVerificationPresentationContexts", "reference/generated/pynetdicom.presentation.RelevantPatientInformationPresentationContexts", "reference/generated/pynetdicom.presentation.StorageCommitmentPresentationContexts", "reference/generated/pynetdicom.presentation.StoragePresentationContexts", "reference/generated/pynetdicom.presentation.SubstanceAdministrationPresentationContexts", "reference/generated/pynetdicom.presentation.UnifiedProcedurePresentationContexts", "reference/generated/pynetdicom.presentation.VerificationPresentationContexts", "reference/generated/pynetdicom.presentation.build_context", "reference/generated/pynetdicom.presentation.build_role", "reference/generated/pynetdicom.presentation.negotiate_as_acceptor", "reference/generated/pynetdicom.presentation.negotiate_as_requestor", "reference/generated/pynetdicom.service_class.BasicWorklistManagementServiceClass", "reference/generated/pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.NonPatientObjectStorageServiceClass", "reference/generated/pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.QueryRetrieveServiceClass", "reference/generated/pynetdicom.service_class.RelevantPatientInformationQueryServiceClass", "reference/generated/pynetdicom.service_class.StorageServiceClass", "reference/generated/pynetdicom.service_class.SubstanceAdministrationQueryServiceClass", "reference/generated/pynetdicom.service_class.VerificationServiceClass", "reference/generated/pynetdicom.service_class_n.ApplicationEventLoggingServiceClass", "reference/generated/pynetdicom.service_class_n.DisplaySystemManagementServiceClass", "reference/generated/pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass", "reference/generated/pynetdicom.service_class_n.MediaCreationManagementServiceClass", "reference/generated/pynetdicom.service_class_n.PrintManagementServiceClass", "reference/generated/pynetdicom.service_class_n.ProcedureStepServiceClass", "reference/generated/pynetdicom.service_class_n.RTMachineVerificationServiceClass", "reference/generated/pynetdicom.service_class_n.StorageCommitmentServiceClass", "reference/generated/pynetdicom.service_class_n.UnifiedProcedureStepServiceClass", "reference/generated/pynetdicom.sop_class.AcquisitionContextSRStorage", "reference/generated/pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage", "reference/generated/pynetdicom.sop_class.AmbulatoryECGWaveformStorage", "reference/generated/pynetdicom.sop_class.ArterialPulseWaveformStorage", "reference/generated/pynetdicom.sop_class.AutorefractionMeasurementsStorage", "reference/generated/pynetdicom.sop_class.BasicAnnotationBox", "reference/generated/pynetdicom.sop_class.BasicColorImageBox", "reference/generated/pynetdicom.sop_class.BasicColorPrintManagementMeta", "reference/generated/pynetdicom.sop_class.BasicFilmBox", "reference/generated/pynetdicom.sop_class.BasicFilmSession", "reference/generated/pynetdicom.sop_class.BasicGrayscaleImageBox", "reference/generated/pynetdicom.sop_class.BasicGrayscalePrintManagementMeta", "reference/generated/pynetdicom.sop_class.BasicStructuredDisplayStorage", "reference/generated/pynetdicom.sop_class.BasicTextSRStorage", "reference/generated/pynetdicom.sop_class.BasicVoiceAudioWaveformStorage", "reference/generated/pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.BodyPositionWaveformStorage", "reference/generated/pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.BreastTomosynthesisImageStorage", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationStorage", "reference/generated/pynetdicom.sop_class.CTDefinedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.CTImageStorage", "reference/generated/pynetdicom.sop_class.CTPerformedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage", "reference/generated/pynetdicom.sop_class.CardiacRelevantPatientInformationQuery", "reference/generated/pynetdicom.sop_class.ChestCADSRStorage", "reference/generated/pynetdicom.sop_class.ColonCADSRStorage", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelFind", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelGet", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelMove", "reference/generated/pynetdicom.sop_class.ColorPaletteStorage", "reference/generated/pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveGet", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveMove", "reference/generated/pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.Comprehensive3DSRStorage", "reference/generated/pynetdicom.sop_class.ComprehensiveSRStorage", "reference/generated/pynetdicom.sop_class.ComputedRadiographyImageStorage", "reference/generated/pynetdicom.sop_class.ContentAssessmentResultsStorage", "reference/generated/pynetdicom.sop_class.CornealTopographyMapStorage", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove", "reference/generated/pynetdicom.sop_class.DeformableSpatialRegistrationStorage", "reference/generated/pynetdicom.sop_class.DermoscopicPhotographyImageStorage", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.DisplaySystem", "reference/generated/pynetdicom.sop_class.DisplaySystemInstance", "reference/generated/pynetdicom.sop_class.ElectromyogramWaveformStorage", "reference/generated/pynetdicom.sop_class.ElectrooculogramWaveformStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedCDAStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedMTLStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedOBJStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedPDFStorage", "reference/generated/pynetdicom.sop_class.EncapsulatedSTLStorage", "reference/generated/pynetdicom.sop_class.EnhancedCTImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedMRColorImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedMRImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedPETImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedSRStorage", "reference/generated/pynetdicom.sop_class.EnhancedUSVolumeStorage", "reference/generated/pynetdicom.sop_class.EnhancedXAImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedXRFImageStorage", "reference/generated/pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.ExtensibleSRStorage", "reference/generated/pynetdicom.sop_class.GeneralAudioWaveformStorage", "reference/generated/pynetdicom.sop_class.GeneralECGWaveformStorage", "reference/generated/pynetdicom.sop_class.GeneralRelevantPatientInformationQuery", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelFind", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelGet", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelMove", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateStorage", "reference/generated/pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelFind", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelGet", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelMove", "reference/generated/pynetdicom.sop_class.HangingProtocolStorage", "reference/generated/pynetdicom.sop_class.HemodynamicWaveformStorage", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateStorage", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupStorage", "reference/generated/pynetdicom.sop_class.ImplantationPlanSRStorage", "reference/generated/pynetdicom.sop_class.InstanceAvailabilityNotification", "reference/generated/pynetdicom.sop_class.IntraocularLensCalculationsStorage", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pynetdicom.sop_class.KeratometryMeasurementsStorage", "reference/generated/pynetdicom.sop_class.KeyObjectSelectionDocumentStorage", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pynetdicom.sop_class.LensometryMeasurementsStorage", "reference/generated/pynetdicom.sop_class.MRImageStorage", "reference/generated/pynetdicom.sop_class.MRSpectroscopyStorage", "reference/generated/pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pynetdicom.sop_class.MammographyCADSRStorage", "reference/generated/pynetdicom.sop_class.MediaCreationManagement", "reference/generated/pynetdicom.sop_class.MediaStorageDirectoryStorage", "reference/generated/pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStep", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepNotification", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve", "reference/generated/pynetdicom.sop_class.ModalityWorklistInformationFind", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage", "reference/generated/pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.NuclearMedicineImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage", "reference/generated/pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicThicknessMapStorage", "reference/generated/pynetdicom.sop_class.OphthalmicTomographyImageStorage", "reference/generated/pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pynetdicom.sop_class.ParametricMapStorage", "reference/generated/pynetdicom.sop_class.PatientRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove", "reference/generated/pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pynetdicom.sop_class.PositronEmissionTomographyImageStorage", "reference/generated/pynetdicom.sop_class.PresentationLUT", "reference/generated/pynetdicom.sop_class.PrintJob", "reference/generated/pynetdicom.sop_class.Printer", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrieval", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrievalInstance", "reference/generated/pynetdicom.sop_class.PrinterInstance", "reference/generated/pynetdicom.sop_class.ProceduralEventLogging", "reference/generated/pynetdicom.sop_class.ProceduralEventLoggingInstance", "reference/generated/pynetdicom.sop_class.ProcedureLogStorage", "reference/generated/pynetdicom.sop_class.ProductCharacteristicsQuery", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelFind", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelGet", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelMove", "reference/generated/pynetdicom.sop_class.ProtocolApprovalStorage", "reference/generated/pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage", "reference/generated/pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage", "reference/generated/pynetdicom.sop_class.RTBeamsTreatmentRecordStorage", "reference/generated/pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage", "reference/generated/pynetdicom.sop_class.RTBrachyTreatmentRecordStorage", "reference/generated/pynetdicom.sop_class.RTConventionalMachineVerification", "reference/generated/pynetdicom.sop_class.RTDoseStorage", "reference/generated/pynetdicom.sop_class.RTImageStorage", "reference/generated/pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage", "reference/generated/pynetdicom.sop_class.RTIonMachineVerification", "reference/generated/pynetdicom.sop_class.RTIonPlanStorage", "reference/generated/pynetdicom.sop_class.RTPhysicianIntentStorage", "reference/generated/pynetdicom.sop_class.RTPlanStorage", "reference/generated/pynetdicom.sop_class.RTRadiationRecordSetStorage", "reference/generated/pynetdicom.sop_class.RTRadiationSalvageRecordStorage", "reference/generated/pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pynetdicom.sop_class.RTRadiationSetStorage", "reference/generated/pynetdicom.sop_class.RTSegmentAnnotationStorage", "reference/generated/pynetdicom.sop_class.RTStructureSetStorage", "reference/generated/pynetdicom.sop_class.RTTreatmentPreparationStorage", "reference/generated/pynetdicom.sop_class.RTTreatmentSummaryRecordStorage", "reference/generated/pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.RawDataStorage", "reference/generated/pynetdicom.sop_class.RealWorldValueMappingStorage", "reference/generated/pynetdicom.sop_class.RespiratoryWaveformStorage", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationRecordStorage", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationStorage", "reference/generated/pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pynetdicom.sop_class.SOPClass", "reference/generated/pynetdicom.sop_class.SecondaryCaptureImageStorage", "reference/generated/pynetdicom.sop_class.SegmentationStorage", "reference/generated/pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.SimplifiedAdultEchoSRStorage", "reference/generated/pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage", "reference/generated/pynetdicom.sop_class.SpatialFiducialsStorage", "reference/generated/pynetdicom.sop_class.SpatialRegistrationStorage", "reference/generated/pynetdicom.sop_class.SpectaclePrescriptionReportStorage", "reference/generated/pynetdicom.sop_class.StereometricRelationshipStorage", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModel", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModelInstance", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove", "reference/generated/pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLogging", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLoggingInstance", "reference/generated/pynetdicom.sop_class.SubstanceApprovalQuery", "reference/generated/pynetdicom.sop_class.SurfaceScanMeshStorage", "reference/generated/pynetdicom.sop_class.SurfaceScanPointCloudStorage", "reference/generated/pynetdicom.sop_class.SurfaceSegmentationStorage", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationStorage", "reference/generated/pynetdicom.sop_class.TractographyResultsStorage", "reference/generated/pynetdicom.sop_class.TwelveLeadECGWaveformStorage", "reference/generated/pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance", "reference/generated/pynetdicom.sop_class.UPSGlobalSubscriptionInstance", "reference/generated/pynetdicom.sop_class.UltrasoundImageStorage", "reference/generated/pynetdicom.sop_class.UltrasoundMultiFrameImageStorage", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepEvent", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPull", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPush", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepQuery", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepWatch", "reference/generated/pynetdicom.sop_class.VLEndoscopicImageStorage", "reference/generated/pynetdicom.sop_class.VLMicroscopicImageStorage", "reference/generated/pynetdicom.sop_class.VLPhotographicImageStorage", "reference/generated/pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage", "reference/generated/pynetdicom.sop_class.Verification", "reference/generated/pynetdicom.sop_class.VideoEndoscopicImageStorage", "reference/generated/pynetdicom.sop_class.VideoMicroscopicImageStorage", "reference/generated/pynetdicom.sop_class.VideoPhotographicImageStorage", "reference/generated/pynetdicom.sop_class.VisualAcuityMeasurementsStorage", "reference/generated/pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pynetdicom.sop_class.XADefinedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.XAPerformedProcedureProtocolStorage", "reference/generated/pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pynetdicom.sop_class.XRay3DAngiographicImageStorage", "reference/generated/pynetdicom.sop_class.XRay3DCraniofacialImageStorage", "reference/generated/pynetdicom.sop_class.XRayAngiographicImageStorage", "reference/generated/pynetdicom.sop_class.XRayRadiationDoseSRStorage", "reference/generated/pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage", "reference/generated/pynetdicom.sop_class.register_uid", "reference/generated/pynetdicom.sop_class.uid_to_service_class", "reference/generated/pynetdicom.sop_class.uid_to_sop_class", "reference/generated/pynetdicom.status.Status", "reference/generated/pynetdicom.status.code_to_category", "reference/generated/pynetdicom.status.code_to_status", "reference/generated/pynetdicom.timer.Timer", "reference/generated/pynetdicom.transport.AssociationServer", "reference/generated/pynetdicom.transport.AssociationSocket", "reference/generated/pynetdicom.transport.RequestHandler", "reference/generated/pynetdicom.transport.T_CONNECT", "reference/generated/pynetdicom.transport.ThreadedAssociationServer", "reference/generated/pynetdicom.utils.decode_bytes", "reference/generated/pynetdicom.utils.make_target", "reference/generated/pynetdicom.utils.pretty_bytes", "reference/generated/pynetdicom.utils.set_ae", "reference/generated/pynetdicom.utils.set_uid", "reference/generated/pynetdicom.utils.validate_uid", "reference/index", "reference/init", "reference/presentation", "reference/service_classes", "reference/sop_classes", "reference/status", "reference/timer", "reference/transport", "reference/utils", "service_classes/application_event", "service_classes/basic_worklist_service_class", "service_classes/color_palette_service_class", "service_classes/defined_procedure_service_class", "service_classes/display_system_service_class", "service_classes/hanging_protocol_service_class", "service_classes/implant_template_service_class", "service_classes/index", "service_classes/instance_availability", "service_classes/media_creation", "service_classes/modality_performed_procedure_step", "service_classes/non_patient_service_class", "service_classes/print_management", "service_classes/protocol_approval_service_class", "service_classes/query_retrieve_service_class", "service_classes/relevant_patient_service_class", "service_classes/rt_machine", "service_classes/storage_commitment", "service_classes/storage_service_class", "service_classes/substance_admin_service_class", "service_classes/ups", "service_classes/verification_service_class", "tutorials/create_scp", "tutorials/create_scu", "tutorials/index", "tutorials/installation", "tutorials/register_sop_class", "user/ae", "user/association", "user/concepts", "user/events", "user/index", "user/presentation"], "filenames": ["apps/echoscp.rst", "apps/echoscu.rst", "apps/findscu.rst", "apps/getscu.rst", "apps/index.rst", "apps/keyword_pathing.rst", "apps/movescu.rst", "apps/qrscp.rst", "apps/storescp.rst", "apps/storescu.rst", "changelog/index.rst", "changelog/v1.0.0.rst", "changelog/v1.1.0.rst", "changelog/v1.2.0.rst", "changelog/v1.3.0.rst", "changelog/v1.3.1.rst", "changelog/v1.4.0.rst", "changelog/v1.4.1.rst", "changelog/v1.5.0.rst", "changelog/v1.5.1.rst", "changelog/v1.5.2.rst", "changelog/v1.5.3.rst", "changelog/v1.5.4.rst", "changelog/v1.5.5.rst", "changelog/v1.5.6.rst", "changelog/v1.5.7.rst", "changelog/v2.0.0.rst", "changelog/v2.0.1.rst", "changelog/v2.1.0.rst", "changelog/v2.2.0.rst", "examples/basic_worklist.rst", "examples/display.rst", "examples/index.rst", "examples/mpps.rst", "examples/print.rst", "examples/qr_find.rst", "examples/qr_get.rst", "examples/qr_move.rst", "examples/relevant_patient.rst", "examples/storage.rst", "examples/verification.rst", "index.rst", "reference/acse.rst", "reference/acse.provider.rst", "reference/ae.rst", "reference/association.rst", "reference/config.rst", "reference/dimse.rst", "reference/dimse.messages.rst", "reference/dimse.primitives.rst", "reference/dimse.provider.rst", "reference/dsutils.rst", "reference/dul.rst", "reference/dul.pdu.rst", "reference/dul.pdu.a_abort_rq.rst", "reference/dul.pdu.a_associate_ac.rst", "reference/dul.pdu.a_associate_rj.rst", "reference/dul.pdu.a_associate_rq.rst", "reference/dul.pdu.a_release_rp.rst", "reference/dul.pdu.a_release_rq.rst", "reference/dul.pdu.p_data_tf.rst", "reference/dul.pdu_items.rst", "reference/dul.pdu_primitives.rst", "reference/dul.pdu_primitives.a_abort.rst", "reference/dul.pdu_primitives.a_associate.rst", "reference/dul.pdu_primitives.a_p_abort.rst", "reference/dul.pdu_primitives.a_release.rst", "reference/dul.pdu_primitives.p_data.rst", "reference/dul.provider.rst", "reference/events.rst", "reference/fsm.rst", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION.rst", "reference/generated/pynetdicom.PYNETDICOM_UID_PREFIX.rst", "reference/generated/pynetdicom._config.CODECS.rst", "reference/generated/pynetdicom._config.ENFORCE_UID_CONFORMANCE.rst", "reference/generated/pynetdicom._config.LOG_HANDLER_LEVEL.rst", "reference/generated/pynetdicom._config.LOG_REQUEST_IDENTIFIERS.rst", "reference/generated/pynetdicom._config.LOG_RESPONSE_IDENTIFIERS.rst", "reference/generated/pynetdicom._config.PASS_CONTEXTVARS.rst", "reference/generated/pynetdicom._config.STORE_RECV_CHUNKED_DATASET.rst", "reference/generated/pynetdicom._config.STORE_SEND_CHUNKED_DATASET.rst", "reference/generated/pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE.rst", "reference/generated/pynetdicom._config.USE_SHORT_DIMSE_AET.rst", "reference/generated/pynetdicom._config.VALIDATORS.rst", "reference/generated/pynetdicom._config.WINDOWS_TIMER_RESOLUTION.rst", "reference/generated/pynetdicom._globals.ALL_TRANSFER_SYNTAXES.rst", "reference/generated/pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES.rst", "reference/generated/pynetdicom._handlers.doc_handle_acse.rst", "reference/generated/pynetdicom._handlers.doc_handle_action.rst", "reference/generated/pynetdicom._handlers.doc_handle_assoc.rst", "reference/generated/pynetdicom._handlers.doc_handle_async.rst", "reference/generated/pynetdicom._handlers.doc_handle_c_get.rst", "reference/generated/pynetdicom._handlers.doc_handle_create.rst", "reference/generated/pynetdicom._handlers.doc_handle_data.rst", "reference/generated/pynetdicom._handlers.doc_handle_delete.rst", "reference/generated/pynetdicom._handlers.doc_handle_dimse.rst", "reference/generated/pynetdicom._handlers.doc_handle_echo.rst", "reference/generated/pynetdicom._handlers.doc_handle_event_report.rst", "reference/generated/pynetdicom._handlers.doc_handle_find.rst", "reference/generated/pynetdicom._handlers.doc_handle_fsm.rst", "reference/generated/pynetdicom._handlers.doc_handle_move.rst", "reference/generated/pynetdicom._handlers.doc_handle_n_get.rst", "reference/generated/pynetdicom._handlers.doc_handle_pdu.rst", "reference/generated/pynetdicom._handlers.doc_handle_set.rst", "reference/generated/pynetdicom._handlers.doc_handle_sop_common.rst", "reference/generated/pynetdicom._handlers.doc_handle_sop_extended.rst", "reference/generated/pynetdicom._handlers.doc_handle_store.rst", "reference/generated/pynetdicom._handlers.doc_handle_transport.rst", "reference/generated/pynetdicom._handlers.doc_handle_userid.rst", "reference/generated/pynetdicom.acse.ACSE.rst", "reference/generated/pynetdicom.ae.ApplicationEntity.rst", "reference/generated/pynetdicom.association.Association.rst", "reference/generated/pynetdicom.association.ServiceUser.rst", "reference/generated/pynetdicom.debug_logger.rst", "reference/generated/pynetdicom.dimse.DIMSEServiceProvider.rst", "reference/generated/pynetdicom.dimse_messages.C_CANCEL_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_ECHO_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_FIND_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_FIND_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_GET_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_GET_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_MOVE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.C_STORE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.C_STORE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_ACTION_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_CREATE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_DELETE_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_EVENT_REPORT_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_GET_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_GET_RSP.rst", "reference/generated/pynetdicom.dimse_messages.N_SET_RQ.rst", "reference/generated/pynetdicom.dimse_messages.N_SET_RSP.rst", "reference/generated/pynetdicom.dimse_primitives.C_CANCEL.rst", "reference/generated/pynetdicom.dimse_primitives.C_ECHO.rst", "reference/generated/pynetdicom.dimse_primitives.C_FIND.rst", "reference/generated/pynetdicom.dimse_primitives.C_GET.rst", "reference/generated/pynetdicom.dimse_primitives.C_MOVE.rst", "reference/generated/pynetdicom.dimse_primitives.C_STORE.rst", "reference/generated/pynetdicom.dimse_primitives.N_ACTION.rst", "reference/generated/pynetdicom.dimse_primitives.N_CREATE.rst", "reference/generated/pynetdicom.dimse_primitives.N_DELETE.rst", "reference/generated/pynetdicom.dimse_primitives.N_EVENT_REPORT.rst", "reference/generated/pynetdicom.dimse_primitives.N_GET.rst", "reference/generated/pynetdicom.dimse_primitives.N_SET.rst", "reference/generated/pynetdicom.dsutils.decode.rst", "reference/generated/pynetdicom.dsutils.encode.rst", "reference/generated/pynetdicom.dsutils.pretty_dataset.rst", "reference/generated/pynetdicom.dsutils.pretty_element.rst", "reference/generated/pynetdicom.dul.DULServiceProvider.rst", "reference/generated/pynetdicom.events.Event.rst", "reference/generated/pynetdicom.events.InterventionEvent.rst", "reference/generated/pynetdicom.events.NotificationEvent.rst", "reference/generated/pynetdicom.events.trigger.rst", "reference/generated/pynetdicom.fsm.AA_1.rst", "reference/generated/pynetdicom.fsm.AA_2.rst", "reference/generated/pynetdicom.fsm.AA_3.rst", "reference/generated/pynetdicom.fsm.AA_4.rst", "reference/generated/pynetdicom.fsm.AA_5.rst", "reference/generated/pynetdicom.fsm.AA_6.rst", "reference/generated/pynetdicom.fsm.AA_7.rst", "reference/generated/pynetdicom.fsm.AA_8.rst", "reference/generated/pynetdicom.fsm.AE_1.rst", "reference/generated/pynetdicom.fsm.AE_2.rst", "reference/generated/pynetdicom.fsm.AE_3.rst", "reference/generated/pynetdicom.fsm.AE_4.rst", "reference/generated/pynetdicom.fsm.AE_5.rst", "reference/generated/pynetdicom.fsm.AE_6.rst", "reference/generated/pynetdicom.fsm.AE_7.rst", "reference/generated/pynetdicom.fsm.AE_8.rst", "reference/generated/pynetdicom.fsm.AR_1.rst", "reference/generated/pynetdicom.fsm.AR_10.rst", "reference/generated/pynetdicom.fsm.AR_2.rst", "reference/generated/pynetdicom.fsm.AR_3.rst", "reference/generated/pynetdicom.fsm.AR_4.rst", "reference/generated/pynetdicom.fsm.AR_5.rst", "reference/generated/pynetdicom.fsm.AR_6.rst", "reference/generated/pynetdicom.fsm.AR_7.rst", "reference/generated/pynetdicom.fsm.AR_8.rst", "reference/generated/pynetdicom.fsm.AR_9.rst", "reference/generated/pynetdicom.fsm.DT_1.rst", "reference/generated/pynetdicom.fsm.DT_2.rst", "reference/generated/pynetdicom.fsm.StateMachine.rst", "reference/generated/pynetdicom.pdu.A_ABORT_RQ.rst", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_AC.rst", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RJ.rst", "reference/generated/pynetdicom.pdu.A_ASSOCIATE_RQ.rst", "reference/generated/pynetdicom.pdu.A_RELEASE_RP.rst", "reference/generated/pynetdicom.pdu.A_RELEASE_RQ.rst", "reference/generated/pynetdicom.pdu.P_DATA_TF.rst", "reference/generated/pynetdicom.pdu.PresentationDataValueItem.rst", "reference/generated/pynetdicom.pdu_items.AbstractSyntaxSubItem.rst", "reference/generated/pynetdicom.pdu_items.ApplicationContextItem.rst", "reference/generated/pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.rst", "reference/generated/pynetdicom.pdu_items.ImplementationClassUIDSubItem.rst", "reference/generated/pynetdicom.pdu_items.ImplementationVersionNameSubItem.rst", "reference/generated/pynetdicom.pdu_items.MaximumLengthSubItem.rst", "reference/generated/pynetdicom.pdu_items.PresentationContextItemAC.rst", "reference/generated/pynetdicom.pdu_items.PresentationContextItemRQ.rst", "reference/generated/pynetdicom.pdu_items.PresentationDataValueItem.rst", "reference/generated/pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.rst", "reference/generated/pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.rst", "reference/generated/pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.rst", "reference/generated/pynetdicom.pdu_items.TransferSyntaxSubItem.rst", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemAC.rst", "reference/generated/pynetdicom.pdu_items.UserIdentitySubItemRQ.rst", "reference/generated/pynetdicom.pdu_items.UserInformationItem.rst", "reference/generated/pynetdicom.pdu_primitives.A_ABORT.rst", "reference/generated/pynetdicom.pdu_primitives.A_ASSOCIATE.rst", "reference/generated/pynetdicom.pdu_primitives.A_P_ABORT.rst", "reference/generated/pynetdicom.pdu_primitives.A_RELEASE.rst", "reference/generated/pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.ImplementationClassUIDNotification.rst", "reference/generated/pynetdicom.pdu_primitives.ImplementationVersionNameNotification.rst", "reference/generated/pynetdicom.pdu_primitives.MaximumLengthNotification.rst", "reference/generated/pynetdicom.pdu_primitives.P_DATA.rst", "reference/generated/pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.rst", "reference/generated/pynetdicom.pdu_primitives.UserIdentityNegotiation.rst", "reference/generated/pynetdicom.presentation.AllStoragePresentationContexts.rst", "reference/generated/pynetdicom.presentation.ApplicationEventLoggingPresentationContexts.rst", "reference/generated/pynetdicom.presentation.BasicWorklistManagementPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ColorPalettePresentationContexts.rst", "reference/generated/pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts.rst", "reference/generated/pynetdicom.presentation.DisplaySystemPresentationContexts.rst", "reference/generated/pynetdicom.presentation.HangingProtocolPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ImplantTemplatePresentationContexts.rst", "reference/generated/pynetdicom.presentation.InstanceAvailabilityPresentationContexts.rst", "reference/generated/pynetdicom.presentation.MediaCreationManagementPresentationContexts.rst", "reference/generated/pynetdicom.presentation.MediaStoragePresentationContexts.rst", "reference/generated/pynetdicom.presentation.ModalityPerformedPresentationContexts.rst", "reference/generated/pynetdicom.presentation.NonPatientObjectPresentationContexts.rst", "reference/generated/pynetdicom.presentation.PresentationContext.rst", "reference/generated/pynetdicom.presentation.PresentationContextTuple.rst", "reference/generated/pynetdicom.presentation.PrintManagementPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ProcedureStepPresentationContexts.rst", "reference/generated/pynetdicom.presentation.ProtocolApprovalPresentationContexts.rst", "reference/generated/pynetdicom.presentation.QueryRetrievePresentationContexts.rst", "reference/generated/pynetdicom.presentation.RTMachineVerificationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.RelevantPatientInformationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.StorageCommitmentPresentationContexts.rst", "reference/generated/pynetdicom.presentation.StoragePresentationContexts.rst", "reference/generated/pynetdicom.presentation.SubstanceAdministrationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.UnifiedProcedurePresentationContexts.rst", "reference/generated/pynetdicom.presentation.VerificationPresentationContexts.rst", "reference/generated/pynetdicom.presentation.build_context.rst", "reference/generated/pynetdicom.presentation.build_role.rst", "reference/generated/pynetdicom.presentation.negotiate_as_acceptor.rst", "reference/generated/pynetdicom.presentation.negotiate_as_requestor.rst", "reference/generated/pynetdicom.service_class.BasicWorklistManagementServiceClass.rst", "reference/generated/pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.NonPatientObjectStorageServiceClass.rst", "reference/generated/pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.QueryRetrieveServiceClass.rst", "reference/generated/pynetdicom.service_class.RelevantPatientInformationQueryServiceClass.rst", "reference/generated/pynetdicom.service_class.StorageServiceClass.rst", "reference/generated/pynetdicom.service_class.SubstanceAdministrationQueryServiceClass.rst", "reference/generated/pynetdicom.service_class.VerificationServiceClass.rst", "reference/generated/pynetdicom.service_class_n.ApplicationEventLoggingServiceClass.rst", "reference/generated/pynetdicom.service_class_n.DisplaySystemManagementServiceClass.rst", "reference/generated/pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass.rst", "reference/generated/pynetdicom.service_class_n.MediaCreationManagementServiceClass.rst", "reference/generated/pynetdicom.service_class_n.PrintManagementServiceClass.rst", "reference/generated/pynetdicom.service_class_n.ProcedureStepServiceClass.rst", "reference/generated/pynetdicom.service_class_n.RTMachineVerificationServiceClass.rst", "reference/generated/pynetdicom.service_class_n.StorageCommitmentServiceClass.rst", "reference/generated/pynetdicom.service_class_n.UnifiedProcedureStepServiceClass.rst", "reference/generated/pynetdicom.sop_class.AcquisitionContextSRStorage.rst", "reference/generated/pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.AmbulatoryECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.ArterialPulseWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.AutorefractionMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.BasicAnnotationBox.rst", "reference/generated/pynetdicom.sop_class.BasicColorImageBox.rst", "reference/generated/pynetdicom.sop_class.BasicColorPrintManagementMeta.rst", "reference/generated/pynetdicom.sop_class.BasicFilmBox.rst", "reference/generated/pynetdicom.sop_class.BasicFilmSession.rst", "reference/generated/pynetdicom.sop_class.BasicGrayscaleImageBox.rst", "reference/generated/pynetdicom.sop_class.BasicGrayscalePrintManagementMeta.rst", "reference/generated/pynetdicom.sop_class.BasicStructuredDisplayStorage.rst", "reference/generated/pynetdicom.sop_class.BasicTextSRStorage.rst", "reference/generated/pynetdicom.sop_class.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.BodyPositionWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery.rst", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.BreastTomosynthesisImageStorage.rst", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pynetdicom.sop_class.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pynetdicom.sop_class.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.CTImageStorage.rst", "reference/generated/pynetdicom.sop_class.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.CardiacRelevantPatientInformationQuery.rst", "reference/generated/pynetdicom.sop_class.ChestCADSRStorage.rst", "reference/generated/pynetdicom.sop_class.ColonCADSRStorage.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ColorPaletteStorage.rst", "reference/generated/pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet.rst", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveGet.rst", "reference/generated/pynetdicom.sop_class.CompositeInstanceRootRetrieveMove.rst", "reference/generated/pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.Comprehensive3DSRStorage.rst", "reference/generated/pynetdicom.sop_class.ComprehensiveSRStorage.rst", "reference/generated/pynetdicom.sop_class.ComputedRadiographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.ContentAssessmentResultsStorage.rst", "reference/generated/pynetdicom.sop_class.CornealTopographyMapStorage.rst", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.DeformableSpatialRegistrationStorage.rst", "reference/generated/pynetdicom.sop_class.DermoscopicPhotographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.DisplaySystem.rst", "reference/generated/pynetdicom.sop_class.DisplaySystemInstance.rst", "reference/generated/pynetdicom.sop_class.ElectromyogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.ElectrooculogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedCDAStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedMTLStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedOBJStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedPDFStorage.rst", "reference/generated/pynetdicom.sop_class.EncapsulatedSTLStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedCTImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedMRColorImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedMRImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedPETImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedSRStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedUSVolumeStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedXAImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedXRFImageStorage.rst", "reference/generated/pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.ExtensibleSRStorage.rst", "reference/generated/pynetdicom.sop_class.GeneralAudioWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.GeneralECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.GeneralRelevantPatientInformationQuery.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.GenericImplantTemplateStorage.rst", "reference/generated/pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.HangingProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.HemodynamicWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ImplantAssemblyTemplateStorage.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ImplantTemplateGroupStorage.rst", "reference/generated/pynetdicom.sop_class.ImplantationPlanSRStorage.rst", "reference/generated/pynetdicom.sop_class.InstanceAvailabilityNotification.rst", "reference/generated/pynetdicom.sop_class.IntraocularLensCalculationsStorage.rst", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pynetdicom.sop_class.KeratometryMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pynetdicom.sop_class.LensometryMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.MRImageStorage.rst", "reference/generated/pynetdicom.sop_class.MRSpectroscopyStorage.rst", "reference/generated/pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pynetdicom.sop_class.MammographyCADSRStorage.rst", "reference/generated/pynetdicom.sop_class.MediaCreationManagement.rst", "reference/generated/pynetdicom.sop_class.MediaStorageDirectoryStorage.rst", "reference/generated/pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStep.rst", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepNotification.rst", "reference/generated/pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve.rst", "reference/generated/pynetdicom.sop_class.ModalityWorklistInformationFind.rst", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.NuclearMedicineImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicThicknessMapStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicTomographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pynetdicom.sop_class.ParametricMapStorage.rst", "reference/generated/pynetdicom.sop_class.PatientRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pynetdicom.sop_class.PositronEmissionTomographyImageStorage.rst", "reference/generated/pynetdicom.sop_class.PresentationLUT.rst", "reference/generated/pynetdicom.sop_class.PrintJob.rst", "reference/generated/pynetdicom.sop_class.Printer.rst", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrieval.rst", "reference/generated/pynetdicom.sop_class.PrinterConfigurationRetrievalInstance.rst", "reference/generated/pynetdicom.sop_class.PrinterInstance.rst", "reference/generated/pynetdicom.sop_class.ProceduralEventLogging.rst", "reference/generated/pynetdicom.sop_class.ProceduralEventLoggingInstance.rst", "reference/generated/pynetdicom.sop_class.ProcedureLogStorage.rst", "reference/generated/pynetdicom.sop_class.ProductCharacteristicsQuery.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.ProtocolApprovalStorage.rst", "reference/generated/pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage.rst", "reference/generated/pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pynetdicom.sop_class.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage.rst", "reference/generated/pynetdicom.sop_class.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTConventionalMachineVerification.rst", "reference/generated/pynetdicom.sop_class.RTDoseStorage.rst", "reference/generated/pynetdicom.sop_class.RTImageStorage.rst", "reference/generated/pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTIonMachineVerification.rst", "reference/generated/pynetdicom.sop_class.RTIonPlanStorage.rst", "reference/generated/pynetdicom.sop_class.RTPhysicianIntentStorage.rst", "reference/generated/pynetdicom.sop_class.RTPlanStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationRecordSetStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationSalvageRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pynetdicom.sop_class.RTRadiationSetStorage.rst", "reference/generated/pynetdicom.sop_class.RTSegmentAnnotationStorage.rst", "reference/generated/pynetdicom.sop_class.RTStructureSetStorage.rst", "reference/generated/pynetdicom.sop_class.RTTreatmentPreparationStorage.rst", "reference/generated/pynetdicom.sop_class.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.RawDataStorage.rst", "reference/generated/pynetdicom.sop_class.RealWorldValueMappingStorage.rst", "reference/generated/pynetdicom.sop_class.RespiratoryWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationRecordStorage.rst", "reference/generated/pynetdicom.sop_class.RoboticArmRadiationStorage.rst", "reference/generated/pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.SOPClass.rst", "reference/generated/pynetdicom.sop_class.SecondaryCaptureImageStorage.rst", "reference/generated/pynetdicom.sop_class.SegmentationStorage.rst", "reference/generated/pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.SpatialFiducialsStorage.rst", "reference/generated/pynetdicom.sop_class.SpatialRegistrationStorage.rst", "reference/generated/pynetdicom.sop_class.SpectaclePrescriptionReportStorage.rst", "reference/generated/pynetdicom.sop_class.StereometricRelationshipStorage.rst", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModel.rst", "reference/generated/pynetdicom.sop_class.StorageCommitmentPushModelInstance.rst", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind.rst", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet.rst", "reference/generated/pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove.rst", "reference/generated/pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLogging.rst", "reference/generated/pynetdicom.sop_class.SubstanceAdministrationLoggingInstance.rst", "reference/generated/pynetdicom.sop_class.SubstanceApprovalQuery.rst", "reference/generated/pynetdicom.sop_class.SurfaceScanMeshStorage.rst", "reference/generated/pynetdicom.sop_class.SurfaceScanPointCloudStorage.rst", "reference/generated/pynetdicom.sop_class.SurfaceSegmentationStorage.rst", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pynetdicom.sop_class.TomotherapeuticRadiationStorage.rst", "reference/generated/pynetdicom.sop_class.TractographyResultsStorage.rst", "reference/generated/pynetdicom.sop_class.TwelveLeadECGWaveformStorage.rst", "reference/generated/pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance.rst", "reference/generated/pynetdicom.sop_class.UPSGlobalSubscriptionInstance.rst", "reference/generated/pynetdicom.sop_class.UltrasoundImageStorage.rst", "reference/generated/pynetdicom.sop_class.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepEvent.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPull.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepPush.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepQuery.rst", "reference/generated/pynetdicom.sop_class.UnifiedProcedureStepWatch.rst", "reference/generated/pynetdicom.sop_class.VLEndoscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLMicroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLPhotographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pynetdicom.sop_class.Verification.rst", "reference/generated/pynetdicom.sop_class.VideoEndoscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VideoMicroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VideoPhotographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.VisualAcuityMeasurementsStorage.rst", "reference/generated/pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pynetdicom.sop_class.XADefinedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pynetdicom.sop_class.XRay3DAngiographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.XRay3DCraniofacialImageStorage.rst", "reference/generated/pynetdicom.sop_class.XRayAngiographicImageStorage.rst", "reference/generated/pynetdicom.sop_class.XRayRadiationDoseSRStorage.rst", "reference/generated/pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pynetdicom.sop_class.register_uid.rst", "reference/generated/pynetdicom.sop_class.uid_to_service_class.rst", "reference/generated/pynetdicom.sop_class.uid_to_sop_class.rst", "reference/generated/pynetdicom.status.Status.rst", "reference/generated/pynetdicom.status.code_to_category.rst", "reference/generated/pynetdicom.status.code_to_status.rst", "reference/generated/pynetdicom.timer.Timer.rst", "reference/generated/pynetdicom.transport.AssociationServer.rst", "reference/generated/pynetdicom.transport.AssociationSocket.rst", "reference/generated/pynetdicom.transport.RequestHandler.rst", "reference/generated/pynetdicom.transport.T_CONNECT.rst", "reference/generated/pynetdicom.transport.ThreadedAssociationServer.rst", "reference/generated/pynetdicom.utils.decode_bytes.rst", "reference/generated/pynetdicom.utils.make_target.rst", "reference/generated/pynetdicom.utils.pretty_bytes.rst", "reference/generated/pynetdicom.utils.set_ae.rst", "reference/generated/pynetdicom.utils.set_uid.rst", "reference/generated/pynetdicom.utils.validate_uid.rst", "reference/index.rst", "reference/init.rst", "reference/presentation.rst", "reference/service_classes.rst", "reference/sop_classes.rst", "reference/status.rst", "reference/timer.rst", "reference/transport.rst", "reference/utils.rst", "service_classes/application_event.rst", "service_classes/basic_worklist_service_class.rst", "service_classes/color_palette_service_class.rst", "service_classes/defined_procedure_service_class.rst", "service_classes/display_system_service_class.rst", "service_classes/hanging_protocol_service_class.rst", "service_classes/implant_template_service_class.rst", "service_classes/index.rst", "service_classes/instance_availability.rst", "service_classes/media_creation.rst", "service_classes/modality_performed_procedure_step.rst", "service_classes/non_patient_service_class.rst", "service_classes/print_management.rst", "service_classes/protocol_approval_service_class.rst", "service_classes/query_retrieve_service_class.rst", "service_classes/relevant_patient_service_class.rst", "service_classes/rt_machine.rst", "service_classes/storage_commitment.rst", "service_classes/storage_service_class.rst", "service_classes/substance_admin_service_class.rst", "service_classes/ups.rst", "service_classes/verification_service_class.rst", "tutorials/create_scp.rst", "tutorials/create_scu.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/register_sop_class.rst", "user/ae.rst", "user/association.rst", "user/concepts.rst", "user/events.rst", "user/index.rst", "user/presentation.rst"], "titles": ["echoscp", "echoscu", "findscu", "getscu", "Applications", "Keyword pathing", "movescu", "qrscp", "storescp", "storescu", "Release Notes", "1.0.0", "1.1.0", "1.2.0", "1.3.0", "1.3.1", "1.4.0", "1.4.1", "1.5.0", "1.5.1", "1.5.2", "1.5.3", "1.5.4", "1.5.5", "1.5.6", "1.5.7", "2.0.0", "2.0.1", "2.1.0", "2.2.0", "Basic Worklist Management Service Examples", "Display System Management Service Examples", "Code Examples", "Modality Performed Procedure Step Management Service Examples", "Print Management Service Examples", "Query/Retrieve (Find) Service Examples", "Query/Retrieve (Get) Service Examples", "Query/Retrieve (Move) Service Examples", "Relevant Patient Information Query Service Examples", "Storage Service Examples", "Verification Service Examples", "<em>pynetdicom</em>", "ACSE Service (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.acse</span></code>)", "ACSE Service Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.acse</span></code>)", "Application Entity (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.ae</span></code>)", "Association (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.association</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom._config</span></code>)", "DIMSE Service", "Messages (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dimse_messages</span></code>)", "Service Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dimse_primitives</span></code>)", "Service Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dimse</span></code>)", "Dataset Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dsutils</span></code>)", "DICOM Upper Layer", "PDUs (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.pdu</span></code>)", "A-ABORT-RQ PDU", "A-ASSOCIATE-AC PDU", "A-ASSOCIATE-RJ PDU", "A-ASSOCIATE-RQ PDU", "A-RELEASE-RP PDU", "A-RELEASE-RQ PDU", "P-DATA-TF PDU", "PDU Items and Sub-items (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.pdu_items</span></code>)", "Service Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.pdu_primitives</span></code>)", "A-ABORT", "A-ASSOCIATE", "A-P-ABORT", "A-RELEASE", "P-DATA", "DUL Service Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.dul</span></code>)", "Events and Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.events</span></code>)", "State Machine (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.fsm</span></code>)", "pynetdicom.PYNETDICOM_IMPLEMENTATION_UID", "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION", "pynetdicom.PYNETDICOM_UID_PREFIX", "pynetdicom._config.CODECS", "pynetdicom._config.ENFORCE_UID_CONFORMANCE", "pynetdicom._config.LOG_HANDLER_LEVEL", "pynetdicom._config.LOG_REQUEST_IDENTIFIERS", "pynetdicom._config.LOG_RESPONSE_IDENTIFIERS", "pynetdicom._config.PASS_CONTEXTVARS", "pynetdicom._config.STORE_RECV_CHUNKED_DATASET", "pynetdicom._config.STORE_SEND_CHUNKED_DATASET", "pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE", "pynetdicom._config.USE_SHORT_DIMSE_AET", "pynetdicom._config.VALIDATORS", "pynetdicom._config.WINDOWS_TIMER_RESOLUTION", "pynetdicom._globals.ALL_TRANSFER_SYNTAXES", "pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES", "pynetdicom._handlers.doc_handle_acse", "pynetdicom._handlers.doc_handle_action", "pynetdicom._handlers.doc_handle_assoc", "pynetdicom._handlers.doc_handle_async", "pynetdicom._handlers.doc_handle_c_get", "pynetdicom._handlers.doc_handle_create", "pynetdicom._handlers.doc_handle_data", "pynetdicom._handlers.doc_handle_delete", "pynetdicom._handlers.doc_handle_dimse", "pynetdicom._handlers.doc_handle_echo", "pynetdicom._handlers.doc_handle_event_report", "pynetdicom._handlers.doc_handle_find", "pynetdicom._handlers.doc_handle_fsm", "pynetdicom._handlers.doc_handle_move", "pynetdicom._handlers.doc_handle_n_get", "pynetdicom._handlers.doc_handle_pdu", "pynetdicom._handlers.doc_handle_set", "pynetdicom._handlers.doc_handle_sop_common", "pynetdicom._handlers.doc_handle_sop_extended", "pynetdicom._handlers.doc_handle_store", "pynetdicom._handlers.doc_handle_transport", "pynetdicom._handlers.doc_handle_userid", "pynetdicom.acse.ACSE", "pynetdicom.ae.ApplicationEntity", "pynetdicom.association.Association", "pynetdicom.association.ServiceUser", "pynetdicom.debug_logger", "pynetdicom.dimse.DIMSEServiceProvider", "pynetdicom.dimse_messages.C_CANCEL_RQ", "pynetdicom.dimse_messages.C_ECHO_RQ", "pynetdicom.dimse_messages.C_ECHO_RSP", "pynetdicom.dimse_messages.C_FIND_RQ", "pynetdicom.dimse_messages.C_FIND_RSP", "pynetdicom.dimse_messages.C_GET_RQ", "pynetdicom.dimse_messages.C_GET_RSP", "pynetdicom.dimse_messages.C_MOVE_RQ", "pynetdicom.dimse_messages.C_MOVE_RSP", "pynetdicom.dimse_messages.C_STORE_RQ", "pynetdicom.dimse_messages.C_STORE_RSP", "pynetdicom.dimse_messages.N_ACTION_RQ", "pynetdicom.dimse_messages.N_ACTION_RSP", "pynetdicom.dimse_messages.N_CREATE_RQ", "pynetdicom.dimse_messages.N_CREATE_RSP", "pynetdicom.dimse_messages.N_DELETE_RQ", "pynetdicom.dimse_messages.N_DELETE_RSP", "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ", "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP", "pynetdicom.dimse_messages.N_GET_RQ", "pynetdicom.dimse_messages.N_GET_RSP", "pynetdicom.dimse_messages.N_SET_RQ", "pynetdicom.dimse_messages.N_SET_RSP", "pynetdicom.dimse_primitives.C_CANCEL", "pynetdicom.dimse_primitives.C_ECHO", "pynetdicom.dimse_primitives.C_FIND", "pynetdicom.dimse_primitives.C_GET", "pynetdicom.dimse_primitives.C_MOVE", "pynetdicom.dimse_primitives.C_STORE", "pynetdicom.dimse_primitives.N_ACTION", "pynetdicom.dimse_primitives.N_CREATE", "pynetdicom.dimse_primitives.N_DELETE", "pynetdicom.dimse_primitives.N_EVENT_REPORT", "pynetdicom.dimse_primitives.N_GET", "pynetdicom.dimse_primitives.N_SET", "pynetdicom.dsutils.decode", "pynetdicom.dsutils.encode", "pynetdicom.dsutils.pretty_dataset", "pynetdicom.dsutils.pretty_element", "pynetdicom.dul.DULServiceProvider", "pynetdicom.events.Event", "pynetdicom.events.InterventionEvent", "pynetdicom.events.NotificationEvent", "pynetdicom.events.trigger", "pynetdicom.fsm.AA_1", "pynetdicom.fsm.AA_2", "pynetdicom.fsm.AA_3", "pynetdicom.fsm.AA_4", "pynetdicom.fsm.AA_5", "pynetdicom.fsm.AA_6", "pynetdicom.fsm.AA_7", "pynetdicom.fsm.AA_8", "pynetdicom.fsm.AE_1", "pynetdicom.fsm.AE_2", "pynetdicom.fsm.AE_3", "pynetdicom.fsm.AE_4", "pynetdicom.fsm.AE_5", "pynetdicom.fsm.AE_6", "pynetdicom.fsm.AE_7", "pynetdicom.fsm.AE_8", "pynetdicom.fsm.AR_1", "pynetdicom.fsm.AR_10", "pynetdicom.fsm.AR_2", "pynetdicom.fsm.AR_3", "pynetdicom.fsm.AR_4", "pynetdicom.fsm.AR_5", "pynetdicom.fsm.AR_6", "pynetdicom.fsm.AR_7", "pynetdicom.fsm.AR_8", "pynetdicom.fsm.AR_9", "pynetdicom.fsm.DT_1", "pynetdicom.fsm.DT_2", "pynetdicom.fsm.StateMachine", "pynetdicom.pdu.A_ABORT_RQ", "pynetdicom.pdu.A_ASSOCIATE_AC", "pynetdicom.pdu.A_ASSOCIATE_RJ", "pynetdicom.pdu.A_ASSOCIATE_RQ", "pynetdicom.pdu.A_RELEASE_RP", "pynetdicom.pdu.A_RELEASE_RQ", "pynetdicom.pdu.P_DATA_TF", "pynetdicom.pdu.PresentationDataValueItem", "pynetdicom.pdu_items.AbstractSyntaxSubItem", "pynetdicom.pdu_items.ApplicationContextItem", "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem", "pynetdicom.pdu_items.ImplementationClassUIDSubItem", "pynetdicom.pdu_items.ImplementationVersionNameSubItem", "pynetdicom.pdu_items.MaximumLengthSubItem", "pynetdicom.pdu_items.PresentationContextItemAC", "pynetdicom.pdu_items.PresentationContextItemRQ", "pynetdicom.pdu_items.PresentationDataValueItem", "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem", "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem", "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem", "pynetdicom.pdu_items.TransferSyntaxSubItem", "pynetdicom.pdu_items.UserIdentitySubItemAC", "pynetdicom.pdu_items.UserIdentitySubItemRQ", "pynetdicom.pdu_items.UserInformationItem", "pynetdicom.pdu_primitives.A_ABORT", "pynetdicom.pdu_primitives.A_ASSOCIATE", "pynetdicom.pdu_primitives.A_P_ABORT", "pynetdicom.pdu_primitives.A_RELEASE", "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation", "pynetdicom.pdu_primitives.ImplementationClassUIDNotification", "pynetdicom.pdu_primitives.ImplementationVersionNameNotification", "pynetdicom.pdu_primitives.MaximumLengthNotification", "pynetdicom.pdu_primitives.P_DATA", "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation", "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation", "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation", "pynetdicom.pdu_primitives.UserIdentityNegotiation", "pynetdicom.presentation.AllStoragePresentationContexts", "pynetdicom.presentation.ApplicationEventLoggingPresentationContexts", "pynetdicom.presentation.BasicWorklistManagementPresentationContexts", "pynetdicom.presentation.ColorPalettePresentationContexts", "pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts", "pynetdicom.presentation.DisplaySystemPresentationContexts", "pynetdicom.presentation.HangingProtocolPresentationContexts", "pynetdicom.presentation.ImplantTemplatePresentationContexts", "pynetdicom.presentation.InstanceAvailabilityPresentationContexts", "pynetdicom.presentation.MediaCreationManagementPresentationContexts", "pynetdicom.presentation.MediaStoragePresentationContexts", "pynetdicom.presentation.ModalityPerformedPresentationContexts", "pynetdicom.presentation.NonPatientObjectPresentationContexts", "pynetdicom.presentation.PresentationContext", "pynetdicom.presentation.PresentationContextTuple", "pynetdicom.presentation.PrintManagementPresentationContexts", "pynetdicom.presentation.ProcedureStepPresentationContexts", "pynetdicom.presentation.ProtocolApprovalPresentationContexts", "pynetdicom.presentation.QueryRetrievePresentationContexts", "pynetdicom.presentation.RTMachineVerificationPresentationContexts", "pynetdicom.presentation.RelevantPatientInformationPresentationContexts", "pynetdicom.presentation.StorageCommitmentPresentationContexts", "pynetdicom.presentation.StoragePresentationContexts", "pynetdicom.presentation.SubstanceAdministrationPresentationContexts", "pynetdicom.presentation.UnifiedProcedurePresentationContexts", "pynetdicom.presentation.VerificationPresentationContexts", "pynetdicom.presentation.build_context", "pynetdicom.presentation.build_role", "pynetdicom.presentation.negotiate_as_acceptor", "pynetdicom.presentation.negotiate_as_requestor", "pynetdicom.service_class.BasicWorklistManagementServiceClass", "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass", "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass", "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass", "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass", "pynetdicom.service_class.NonPatientObjectStorageServiceClass", "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass", "pynetdicom.service_class.QueryRetrieveServiceClass", "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass", "pynetdicom.service_class.StorageServiceClass", "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass", "pynetdicom.service_class.VerificationServiceClass", "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass", "pynetdicom.service_class_n.DisplaySystemManagementServiceClass", "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass", "pynetdicom.service_class_n.MediaCreationManagementServiceClass", "pynetdicom.service_class_n.PrintManagementServiceClass", "pynetdicom.service_class_n.ProcedureStepServiceClass", "pynetdicom.service_class_n.RTMachineVerificationServiceClass", "pynetdicom.service_class_n.StorageCommitmentServiceClass", "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass", "pynetdicom.sop_class.AcquisitionContextSRStorage", "pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage", "pynetdicom.sop_class.AmbulatoryECGWaveformStorage", "pynetdicom.sop_class.ArterialPulseWaveformStorage", "pynetdicom.sop_class.AutorefractionMeasurementsStorage", "pynetdicom.sop_class.BasicAnnotationBox", "pynetdicom.sop_class.BasicColorImageBox", "pynetdicom.sop_class.BasicColorPrintManagementMeta", "pynetdicom.sop_class.BasicFilmBox", "pynetdicom.sop_class.BasicFilmSession", "pynetdicom.sop_class.BasicGrayscaleImageBox", "pynetdicom.sop_class.BasicGrayscalePrintManagementMeta", "pynetdicom.sop_class.BasicStructuredDisplayStorage", "pynetdicom.sop_class.BasicTextSRStorage", "pynetdicom.sop_class.BasicVoiceAudioWaveformStorage", "pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage", "pynetdicom.sop_class.BodyPositionWaveformStorage", "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery", "pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation", "pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing", "pynetdicom.sop_class.BreastTomosynthesisImageStorage", "pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage", "pynetdicom.sop_class.CArmPhotonElectronRadiationStorage", "pynetdicom.sop_class.CTDefinedProcedureProtocolStorage", "pynetdicom.sop_class.CTImageStorage", "pynetdicom.sop_class.CTPerformedProcedureProtocolStorage", "pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage", "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery", "pynetdicom.sop_class.ChestCADSRStorage", "pynetdicom.sop_class.ColonCADSRStorage", "pynetdicom.sop_class.ColorPaletteInformationModelFind", "pynetdicom.sop_class.ColorPaletteInformationModelGet", "pynetdicom.sop_class.ColorPaletteInformationModelMove", "pynetdicom.sop_class.ColorPaletteStorage", "pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage", "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet", "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet", "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove", "pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage", "pynetdicom.sop_class.Comprehensive3DSRStorage", "pynetdicom.sop_class.ComprehensiveSRStorage", "pynetdicom.sop_class.ComputedRadiographyImageStorage", "pynetdicom.sop_class.ContentAssessmentResultsStorage", "pynetdicom.sop_class.CornealTopographyMapStorage", "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind", "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet", "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove", "pynetdicom.sop_class.DeformableSpatialRegistrationStorage", "pynetdicom.sop_class.DermoscopicPhotographyImageStorage", "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation", "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing", "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation", "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing", "pynetdicom.sop_class.DigitalXRayImageStorageForPresentation", "pynetdicom.sop_class.DigitalXRayImageStorageForProcessing", "pynetdicom.sop_class.DisplaySystem", "pynetdicom.sop_class.DisplaySystemInstance", "pynetdicom.sop_class.ElectromyogramWaveformStorage", "pynetdicom.sop_class.ElectrooculogramWaveformStorage", "pynetdicom.sop_class.EncapsulatedCDAStorage", "pynetdicom.sop_class.EncapsulatedMTLStorage", "pynetdicom.sop_class.EncapsulatedOBJStorage", "pynetdicom.sop_class.EncapsulatedPDFStorage", "pynetdicom.sop_class.EncapsulatedSTLStorage", "pynetdicom.sop_class.EnhancedCTImageStorage", "pynetdicom.sop_class.EnhancedMRColorImageStorage", "pynetdicom.sop_class.EnhancedMRImageStorage", "pynetdicom.sop_class.EnhancedPETImageStorage", "pynetdicom.sop_class.EnhancedSRStorage", "pynetdicom.sop_class.EnhancedUSVolumeStorage", "pynetdicom.sop_class.EnhancedXAImageStorage", "pynetdicom.sop_class.EnhancedXRFImageStorage", "pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage", "pynetdicom.sop_class.ExtensibleSRStorage", "pynetdicom.sop_class.GeneralAudioWaveformStorage", "pynetdicom.sop_class.GeneralECGWaveformStorage", "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery", "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind", "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet", "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove", "pynetdicom.sop_class.GenericImplantTemplateStorage", "pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage", "pynetdicom.sop_class.HangingProtocolInformationModelFind", "pynetdicom.sop_class.HangingProtocolInformationModelGet", "pynetdicom.sop_class.HangingProtocolInformationModelMove", "pynetdicom.sop_class.HangingProtocolStorage", "pynetdicom.sop_class.HemodynamicWaveformStorage", "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind", "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet", "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove", "pynetdicom.sop_class.ImplantAssemblyTemplateStorage", "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind", "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet", "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove", "pynetdicom.sop_class.ImplantTemplateGroupStorage", "pynetdicom.sop_class.ImplantationPlanSRStorage", "pynetdicom.sop_class.InstanceAvailabilityNotification", "pynetdicom.sop_class.IntraocularLensCalculationsStorage", "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pynetdicom.sop_class.KeratometryMeasurementsStorage", "pynetdicom.sop_class.KeyObjectSelectionDocumentStorage", "pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage", "pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage", "pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage", "pynetdicom.sop_class.LensometryMeasurementsStorage", "pynetdicom.sop_class.MRImageStorage", "pynetdicom.sop_class.MRSpectroscopyStorage", "pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage", "pynetdicom.sop_class.MammographyCADSRStorage", "pynetdicom.sop_class.MediaCreationManagement", "pynetdicom.sop_class.MediaStorageDirectoryStorage", "pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage", "pynetdicom.sop_class.ModalityPerformedProcedureStep", "pynetdicom.sop_class.ModalityPerformedProcedureStepNotification", "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve", "pynetdicom.sop_class.ModalityWorklistInformationFind", "pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage", "pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage", "pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pynetdicom.sop_class.NuclearMedicineImageStorage", "pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage", "pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage", "pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage", "pynetdicom.sop_class.OphthalmicThicknessMapStorage", "pynetdicom.sop_class.OphthalmicTomographyImageStorage", "pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pynetdicom.sop_class.ParametricMapStorage", "pynetdicom.sop_class.PatientRadiationDoseSRStorage", "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind", "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet", "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove", "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind", "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet", "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove", "pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage", "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage", "pynetdicom.sop_class.PositronEmissionTomographyImageStorage", "pynetdicom.sop_class.PresentationLUT", "pynetdicom.sop_class.PrintJob", "pynetdicom.sop_class.Printer", "pynetdicom.sop_class.PrinterConfigurationRetrieval", "pynetdicom.sop_class.PrinterConfigurationRetrievalInstance", "pynetdicom.sop_class.PrinterInstance", "pynetdicom.sop_class.ProceduralEventLogging", "pynetdicom.sop_class.ProceduralEventLoggingInstance", "pynetdicom.sop_class.ProcedureLogStorage", "pynetdicom.sop_class.ProductCharacteristicsQuery", "pynetdicom.sop_class.ProtocolApprovalInformationModelFind", "pynetdicom.sop_class.ProtocolApprovalInformationModelGet", "pynetdicom.sop_class.ProtocolApprovalInformationModelMove", "pynetdicom.sop_class.ProtocolApprovalStorage", "pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage", "pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage", "pynetdicom.sop_class.RTBeamsTreatmentRecordStorage", "pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage", "pynetdicom.sop_class.RTBrachyTreatmentRecordStorage", "pynetdicom.sop_class.RTConventionalMachineVerification", "pynetdicom.sop_class.RTDoseStorage", "pynetdicom.sop_class.RTImageStorage", "pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage", "pynetdicom.sop_class.RTIonMachineVerification", "pynetdicom.sop_class.RTIonPlanStorage", "pynetdicom.sop_class.RTPhysicianIntentStorage", "pynetdicom.sop_class.RTPlanStorage", "pynetdicom.sop_class.RTRadiationRecordSetStorage", "pynetdicom.sop_class.RTRadiationSalvageRecordStorage", "pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage", "pynetdicom.sop_class.RTRadiationSetStorage", "pynetdicom.sop_class.RTSegmentAnnotationStorage", "pynetdicom.sop_class.RTStructureSetStorage", "pynetdicom.sop_class.RTTreatmentPreparationStorage", "pynetdicom.sop_class.RTTreatmentSummaryRecordStorage", "pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage", "pynetdicom.sop_class.RawDataStorage", "pynetdicom.sop_class.RealWorldValueMappingStorage", "pynetdicom.sop_class.RespiratoryWaveformStorage", "pynetdicom.sop_class.RoboticArmRadiationRecordStorage", "pynetdicom.sop_class.RoboticArmRadiationStorage", "pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage", "pynetdicom.sop_class.SOPClass", "pynetdicom.sop_class.SecondaryCaptureImageStorage", "pynetdicom.sop_class.SegmentationStorage", "pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pynetdicom.sop_class.SimplifiedAdultEchoSRStorage", "pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage", "pynetdicom.sop_class.SpatialFiducialsStorage", "pynetdicom.sop_class.SpatialRegistrationStorage", "pynetdicom.sop_class.SpectaclePrescriptionReportStorage", "pynetdicom.sop_class.StereometricRelationshipStorage", "pynetdicom.sop_class.StorageCommitmentPushModel", "pynetdicom.sop_class.StorageCommitmentPushModelInstance", "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind", "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet", "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove", "pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage", "pynetdicom.sop_class.SubstanceAdministrationLogging", "pynetdicom.sop_class.SubstanceAdministrationLoggingInstance", "pynetdicom.sop_class.SubstanceApprovalQuery", "pynetdicom.sop_class.SurfaceScanMeshStorage", "pynetdicom.sop_class.SurfaceScanPointCloudStorage", "pynetdicom.sop_class.SurfaceSegmentationStorage", "pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage", "pynetdicom.sop_class.TomotherapeuticRadiationStorage", "pynetdicom.sop_class.TractographyResultsStorage", "pynetdicom.sop_class.TwelveLeadECGWaveformStorage", "pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance", "pynetdicom.sop_class.UPSGlobalSubscriptionInstance", "pynetdicom.sop_class.UltrasoundImageStorage", "pynetdicom.sop_class.UltrasoundMultiFrameImageStorage", "pynetdicom.sop_class.UnifiedProcedureStepEvent", "pynetdicom.sop_class.UnifiedProcedureStepPull", "pynetdicom.sop_class.UnifiedProcedureStepPush", "pynetdicom.sop_class.UnifiedProcedureStepQuery", "pynetdicom.sop_class.UnifiedProcedureStepWatch", "pynetdicom.sop_class.VLEndoscopicImageStorage", "pynetdicom.sop_class.VLMicroscopicImageStorage", "pynetdicom.sop_class.VLPhotographicImageStorage", "pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage", "pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage", "pynetdicom.sop_class.Verification", "pynetdicom.sop_class.VideoEndoscopicImageStorage", "pynetdicom.sop_class.VideoMicroscopicImageStorage", "pynetdicom.sop_class.VideoPhotographicImageStorage", "pynetdicom.sop_class.VisualAcuityMeasurementsStorage", "pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage", "pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pynetdicom.sop_class.XADefinedProcedureProtocolStorage", "pynetdicom.sop_class.XAPerformedProcedureProtocolStorage", "pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pynetdicom.sop_class.XRay3DAngiographicImageStorage", "pynetdicom.sop_class.XRay3DCraniofacialImageStorage", "pynetdicom.sop_class.XRayAngiographicImageStorage", "pynetdicom.sop_class.XRayRadiationDoseSRStorage", "pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage", "pynetdicom.sop_class.register_uid", "pynetdicom.sop_class.uid_to_service_class", "pynetdicom.sop_class.uid_to_sop_class", "pynetdicom.status.Status", "pynetdicom.status.code_to_category", "pynetdicom.status.code_to_status", "pynetdicom.timer.Timer", "pynetdicom.transport.AssociationServer", "pynetdicom.transport.AssociationSocket", "pynetdicom.transport.RequestHandler", "pynetdicom.transport.T_CONNECT", "pynetdicom.transport.ThreadedAssociationServer", "pynetdicom.utils.decode_bytes", "pynetdicom.utils.make_target", "pynetdicom.utils.pretty_bytes", "pynetdicom.utils.set_ae", "pynetdicom.utils.set_uid", "pynetdicom.utils.validate_uid", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom</span></code>", "Presentation Service (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.presentation</span></code>)", "Service Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.service_class</span></code>)", "SOP Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.sop_class</span></code>)", "Statuses (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.status</span></code>)", "Timer (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.timer</span></code>)", "Transport Service (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.transport</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynetdicom.utils</span></code>)", "Application Event Logging Service Class", "Basic Worklist Management Service Class", "Color Palette Query/Retrieve Service Class", "Defined Procedure Protocol Query/Retrieve Service Class", "Display System Management Service Class", "Hanging Protocol Query/Retrieve Service Class", "Implant Template Query/Retrieve Service Class", "Supported Service Classes", "Instance Availability Notification Service Class", "Media Creation Management Service Class", "Modality Performed Procedure Step Management", "Non-Patient Object Storage Service Class", "Print Management Service Class", "Protocol Approval Query/Retrieve Service Class", "Query/Retrieve Service Class", "Relevant Patient Information Query Service Class", "RT Machine Verification Service Class", "Storage Commitment Service Class", "Storage Service Class", "Substance Administration Query Service Class", "Unified Procedure Step Service Class", "Verification Service Class", "Writing your first SCP", "Writing your first SCU", "Tutorials", "How to install pynetdicom", "Registering a new SOP Class", "Application Entity", "Association", "Important Concepts", "Events", "User Guide", "Presentation Contexts"], "terms": {"python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 18, 26, 28, 41, 74, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 519, 568, 569, 571, 574, 576], "m": [0, 1, 2, 3, 6, 7, 8, 9, 18, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 213, 214, 215, 216, 221, 568, 569, 571], "pynetdicom": [0, 1, 2, 3, 6, 7, 8, 9, 11, 18, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 47, 52, 537, 568, 569, 570, 572, 573, 574, 575, 576], "port": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 18, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 101, 108, 111, 113, 214, 526, 527, 528, 529, 530, 542, 548, 549, 551, 552, 559, 560, 568, 569, 574], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 20, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 50, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 80, 84, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 542, 544, 546, 547, 548, 549, 550, 551, 552, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 578], "applic": [0, 1, 2, 3, 6, 7, 8, 9, 16, 18, 30, 31, 33, 35, 36, 37, 38, 39, 40, 45, 47, 53, 55, 57, 62, 63, 64, 66, 67, 74, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 110, 111, 112, 113, 144, 190, 192, 197, 198, 200, 201, 206, 207, 208, 209, 214, 223, 224, 225, 226, 227, 268, 537, 553, 562, 564, 567, 568, 571, 577], "implement": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 71, 72, 74, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 113, 115, 156, 188, 190, 192, 200, 201, 207, 212, 214, 218, 219, 220, 225, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 520, 521, 525, 526, 568, 569, 573, 574, 575, 576], "provid": [0, 6, 7, 8, 13, 30, 33, 35, 36, 37, 38, 39, 41, 42, 47, 51, 52, 54, 65, 84, 88, 89, 93, 96, 103, 104, 109, 110, 111, 112, 115, 155, 168, 173, 213, 214, 215, 218, 219, 225, 239, 527, 537, 542, 545, 563, 566, 568, 569, 573, 575, 576, 577, 578], "scp": [0, 1, 2, 3, 7, 8, 9, 11, 12, 13, 18, 23, 25, 26, 34, 41, 74, 80, 82, 89, 101, 102, 104, 111, 112, 113, 206, 212, 222, 224, 239, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 526, 530, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 575, 577], "It": [0, 1, 2, 3, 6, 7, 8, 9, 13, 31, 33, 37, 40, 41, 141, 142, 143, 144, 146, 156, 214, 218, 219, 532, 564, 568, 569, 573], "listen": [0, 1, 2, 3, 6, 7, 8, 9, 31, 33, 35, 36, 37, 38, 39, 40, 111, 112, 526, 530, 568, 569, 573, 577], "incom": [0, 7, 8, 9, 13, 31, 33, 35, 36, 37, 38, 39, 40, 77, 78, 111, 115, 155, 568, 569], "associ": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 52, 53, 62, 63, 65, 66, 74, 76, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 210, 211, 212, 214, 217, 218, 219, 220, 222, 223, 224, 225, 239, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 526, 527, 528, 529, 537, 539, 567, 568, 577], "request": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 16, 18, 20, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 64, 66, 77, 78, 80, 82, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 160, 164, 166, 168, 174, 175, 176, 178, 182, 183, 184, 186, 187, 192, 194, 211, 213, 214, 215, 216, 217, 221, 225, 239, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 526, 528, 529, 530, 555, 558, 559, 560, 561, 562, 563, 566, 568, 569, 575, 576, 577, 578], "specifi": [0, 2, 3, 5, 6, 8, 11, 12, 13, 31, 33, 35, 38, 74, 82, 89, 102, 104, 110, 111, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 214, 215, 252, 526, 527, 546, 566, 568, 569, 572, 575, 578], "onc": [0, 2, 3, 6, 7, 8, 9, 33, 47, 110, 112, 113, 193, 194, 195, 527, 569, 573, 574], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 22, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 54, 55, 56, 57, 58, 59, 64, 66, 74, 75, 79, 80, 81, 82, 88, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 139, 140, 141, 142, 143, 144, 149, 155, 156, 157, 159, 160, 161, 173, 178, 179, 180, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 220, 222, 225, 239, 240, 254, 255, 522, 526, 527, 528, 530, 534, 535, 542, 547, 548, 549, 551, 552, 555, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 571, 575, 576, 577, 578], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 74, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 172, 173, 184, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 206, 207, 208, 209, 210, 211, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 519, 522, 525, 526, 527, 530, 532, 534, 535, 536, 547, 548, 549, 551, 552, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 578], "establish": [0, 1, 2, 3, 6, 7, 8, 9, 47, 64, 109, 110, 111, 112, 168, 169, 170, 171, 172, 173, 174, 175, 193, 194, 195, 200, 201, 214, 218, 219, 225, 567, 569, 574, 575, 576], "respond": [0, 2, 3, 6, 9, 13, 16, 34, 37, 39, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 172, 214, 568, 569, 573, 575], "c": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 16, 18, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 77, 78, 80, 82, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 213, 214, 215, 216, 221, 226, 248, 256, 264, 265, 266, 267, 276, 519, 542, 568, 569, 571, 572, 574, 575, 576, 578], "echo": [0, 1, 3, 6, 7, 8, 9, 40, 41, 97, 112, 115, 140, 226, 267, 568, 574, 576], "can": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 18, 33, 34, 35, 39, 40, 41, 84, 107, 111, 112, 113, 159, 239, 254, 522, 568, 569, 572, 573, 574, 575, 576, 578], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 62, 63, 64, 65, 67, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 225, 239, 252, 253, 255, 519, 520, 525, 526, 527, 529, 530, 533, 534, 535, 542, 544, 546, 547, 548, 549, 551, 552, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 575, 576, 577, 578], "verifi": [0, 1, 7, 40, 93, 112, 562, 567, 569, 573], "basic": [0, 1, 3, 6, 8, 9, 16, 32, 34, 40, 41, 99, 112, 197, 198, 201, 209, 226, 228, 241, 248, 256, 536, 553, 558, 568, 569, 573], "connect": [0, 1, 7, 8, 12, 13, 26, 30, 31, 33, 35, 36, 37, 38, 39, 40, 108, 111, 115, 155, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 179, 181, 525, 526, 527, 528, 529, 530, 569, 574, 575, 576], "sourc": [0, 1, 2, 3, 6, 7, 8, 9, 22, 26, 71, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 571], "code": [0, 1, 2, 3, 6, 7, 8, 9, 13, 26, 37, 79, 522, 523, 524, 542, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573], "found": [0, 1, 2, 3, 6, 7, 8, 9, 38, 84, 89, 92, 93, 101, 102, 104, 112, 559, 560, 561, 562, 569, 575], "here": [0, 1, 2, 3, 6, 7, 8, 9, 37, 41, 74, 84, 569, 573, 574, 575], "follow": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 26, 31, 33, 34, 35, 36, 37, 38, 41, 53, 55, 57, 60, 62, 64, 74, 110, 111, 112, 113, 141, 142, 143, 144, 146, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 225, 536, 540, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 568, 569, 573, 574, 576, 578], "exampl": [0, 1, 8, 9, 11, 26, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 111, 156, 173, 217, 218, 219, 222, 223, 224, 225, 252, 519, 522, 568, 569, 573, 574, 575, 578], "show": [0, 1, 2, 3, 6, 8, 9, 574], "what": [0, 1, 2, 3, 6, 8, 9, 34, 35, 36, 39, 91, 156, 568, 573, 578], "happen": [0, 1, 2, 3, 6, 8, 9, 569], "when": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 20, 21, 25, 26, 28, 33, 34, 39, 40, 74, 80, 81, 82, 85, 87, 89, 92, 93, 98, 99, 101, 104, 105, 107, 111, 112, 113, 115, 153, 155, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 225, 239, 254, 526, 527, 529, 530, 534, 547, 548, 549, 551, 552, 557, 558, 559, 560, 561, 564, 565, 568, 569, 571, 572, 573, 574, 575, 578], "": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 30, 33, 34, 36, 37, 39, 44, 45, 79, 81, 82, 89, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 107, 109, 111, 112, 113, 115, 153, 155, 156, 159, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 252, 255, 525, 526, 527, 528, 529, 530, 558, 568, 569, 571, 572, 573, 574, 575, 576, 578], "start": [0, 6, 7, 8, 11, 12, 13, 14, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 111, 112, 113, 115, 167, 172, 173, 525, 526, 528, 530, 533, 536, 568, 573, 574, 575], "receiv": [0, 1, 2, 3, 6, 7, 8, 9, 13, 16, 18, 21, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 50, 77, 78, 80, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 155, 156, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 202, 212, 214, 220, 225, 239, 256, 263, 528, 542, 547, 548, 549, 551, 552, 555, 557, 559, 560, 561, 564, 565, 566, 568, 569, 572, 575, 576], "from": [0, 3, 7, 8, 11, 13, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 50, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 94, 103, 111, 112, 113, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 172, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 221, 222, 223, 224, 225, 239, 252, 256, 263, 267, 519, 522, 526, 527, 531, 532, 542, 546, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 578], "peer": [0, 1, 2, 3, 6, 8, 9, 13, 20, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 47, 50, 53, 62, 81, 89, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 106, 110, 111, 112, 115, 151, 155, 156, 169, 173, 208, 214, 217, 222, 223, 224, 225, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 527, 529, 542, 544, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 567, 569, 573, 574, 575, 576], "11112": [0, 1, 2, 3, 6, 7, 8, 9, 18, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 568, 569, 572, 573, 574, 576, 578], "more": [0, 1, 2, 3, 6, 7, 8, 9, 11, 26, 33, 34, 37, 38, 40, 53, 55, 57, 60, 62, 64, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 190, 192, 195, 204, 207, 209, 212, 221, 239, 254, 255, 547, 548, 549, 551, 552, 559, 560, 561, 566, 568, 569, 573, 574, 575, 576, 578], "inform": [0, 1, 7, 8, 9, 11, 32, 33, 34, 35, 36, 37, 39, 41, 53, 62, 64, 67, 74, 81, 89, 98, 99, 106, 107, 111, 112, 113, 145, 148, 156, 159, 190, 192, 197, 198, 207, 208, 212, 214, 218, 219, 220, 223, 224, 225, 228, 229, 230, 232, 233, 243, 244, 246, 264, 266, 546, 547, 548, 549, 551, 552, 553, 557, 559, 560, 565, 568, 569, 573, 574, 576, 577], "avail": [0, 1, 2, 3, 6, 7, 8, 9, 12, 16, 18, 35, 41, 79, 80, 89, 93, 98, 105, 113, 115, 155, 156, 190, 192, 203, 204, 212, 223, 224, 234, 239, 270, 526, 527, 546, 553, 568, 569, 571, 573, 574, 575, 576, 578], "run": [0, 1, 2, 3, 6, 8, 9, 12, 13, 26, 35, 36, 37, 38, 85, 89, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 109, 111, 115, 155, 525, 526, 530, 568, 569, 570, 571, 574], "v": [0, 1, 2, 3, 6, 7, 8, 9, 99, 112, 568, 569], "accept": [0, 1, 2, 3, 6, 8, 9, 12, 20, 36, 81, 82, 105, 109, 110, 111, 112, 113, 149, 170, 173, 174, 190, 203, 214, 225, 239, 240, 254, 568, 569, 573, 574, 575, 576, 578], "msgid": [0, 1, 2, 3, 6, 9, 568, 569], "1": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 71, 73, 75, 77, 78, 83, 85, 86, 87, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 109, 110, 111, 112, 113, 115, 141, 142, 143, 144, 151, 152, 153, 154, 156, 157, 158, 159, 160, 168, 176, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 223, 224, 225, 239, 240, 252, 253, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 525, 526, 527, 528, 530, 536, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578], "releas": [0, 1, 2, 3, 6, 8, 9, 12, 16, 17, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 52, 53, 62, 63, 65, 110, 112, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 193, 194, 216, 537, 568, 569, 572, 576], "ae": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 74, 83, 84, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 112, 113, 115, 144, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 214, 217, 218, 219, 220, 222, 223, 224, 225, 254, 519, 526, 528, 530, 534, 537, 544, 554, 557, 566, 568, 572, 573, 575, 576, 578], "attempt": [0, 1, 9, 18, 74, 112, 113, 172, 182, 183, 526, 527, 529, 573, 574], "send": [0, 1, 2, 3, 6, 9, 12, 13, 14, 18, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 50, 81, 88, 92, 101, 103, 110, 111, 112, 115, 155, 160, 166, 167, 169, 176, 178, 179, 180, 182, 183, 185, 186, 187, 195, 214, 527, 564, 568, 569, 574, 575, 578], "non": [0, 1, 2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 18, 26, 28, 37, 39, 41, 76, 92, 101, 107, 111, 112, 115, 156, 192, 207, 218, 219, 238, 239, 261, 542, 553, 559, 560, 568, 573, 574, 578], "messag": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 16, 18, 25, 26, 39, 47, 50, 53, 62, 67, 76, 83, 89, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 107, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 195, 196, 205, 519, 537, 568, 569, 572, 575, 576], "abort": [0, 1, 12, 13, 14, 15, 16, 18, 22, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 52, 53, 62, 110, 112, 115, 160, 161, 162, 163, 164, 165, 166, 167, 189, 213, 215, 569, 574, 575, 576], "much": [0, 8, 85, 569], "d": [0, 1, 2, 3, 6, 7, 8, 9, 18, 30, 33, 35, 36, 37, 38, 39, 91, 105, 106, 109, 152, 153, 156, 199, 200, 201, 202, 206, 207, 208, 210, 211, 217, 218, 219, 220, 222, 223, 224, 225, 239, 568, 569, 572, 578], "py": [0, 1, 8, 9, 12, 14, 568, 569], "v0": [0, 1, 8, 9], "7": [0, 1, 3, 6, 7, 8, 9, 10, 18, 26, 41, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 115, 139, 166, 167, 174, 183, 189, 191, 193, 198, 199, 200, 201, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 315, 325, 334, 335, 395, 396, 397, 398, 402, 403, 436, 455, 462, 464, 468, 511, 557, 564, 569, 574, 575, 578], "0": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 71, 73, 74, 79, 80, 81, 82, 84, 85, 91, 111, 112, 113, 141, 142, 143, 144, 153, 156, 157, 158, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 239, 240, 522, 526, 527, 529, 531, 536, 537, 568, 569, 573, 574, 575, 576, 578], "paramet": [0, 8, 11, 12, 13, 14, 16, 18, 26, 28, 31, 34, 37, 39, 74, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 519, 520, 521, 522, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 568, 569, 573, 574, 576, 578], "A": [0, 1, 8, 9, 11, 12, 13, 14, 16, 18, 22, 26, 28, 34, 38, 42, 44, 52, 53, 60, 62, 74, 91, 93, 97, 104, 110, 111, 112, 113, 115, 149, 155, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 185, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 255, 525, 526, 527, 529, 530, 533, 558, 564, 568, 569, 573, 575, 578], "rq": [0, 1, 8, 9, 25, 26, 52, 53, 74, 160, 169, 173, 189, 190, 192, 194, 199, 204, 210, 211, 214, 217, 222, 223, 224, 225, 568, 569], "pdu": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 16, 21, 26, 39, 52, 62, 81, 84, 103, 110, 111, 113, 115, 155, 165, 166, 167, 173, 199, 202, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 537, 569, 576], "Their": [0, 569], "uid": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 18, 25, 26, 28, 33, 34, 35, 36, 37, 39, 41, 71, 73, 74, 75, 84, 89, 92, 101, 102, 104, 105, 106, 111, 112, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 190, 192, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 212, 214, 218, 219, 222, 223, 224, 235, 239, 240, 252, 253, 254, 255, 463, 519, 520, 521, 535, 536, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 577, 578], "2": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 18, 19, 34, 36, 37, 41, 71, 73, 74, 79, 80, 81, 82, 84, 85, 86, 87, 99, 102, 109, 111, 112, 113, 115, 139, 141, 142, 143, 144, 156, 157, 158, 161, 169, 178, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 239, 240, 252, 253, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 526, 527, 528, 529, 530, 531, 537, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578], "276": 0, "7230010": 0, "3": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 18, 26, 28, 33, 34, 36, 37, 41, 75, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 115, 139, 156, 157, 158, 159, 162, 170, 179, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 239, 273, 279, 297, 303, 304, 309, 312, 313, 322, 324, 326, 327, 335, 340, 342, 356, 362, 367, 371, 378, 389, 391, 392, 393, 396, 413, 415, 416, 417, 434, 435, 453, 472, 476, 492, 494, 501, 526, 530, 548, 549, 551, 552, 556, 557, 560, 561, 564, 566, 568, 569, 573, 574, 575, 576, 578], "6": [0, 2, 3, 6, 7, 8, 9, 10, 18, 26, 41, 95, 105, 112, 165, 167, 173, 182, 189, 190, 191, 192, 193, 194, 195, 199, 203, 204, 206, 207, 208, 210, 211, 215, 221, 223, 346, 358, 399, 432, 439, 459, 471, 487, 491, 493, 494, 495, 496, 497, 502, 509, 559, 564, 566, 568, 573, 575], "dims": [0, 1, 2, 3, 6, 7, 8, 9, 13, 16, 18, 26, 30, 35, 36, 37, 38, 39, 40, 52, 76, 83, 84, 96, 105, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 195, 196, 205, 519, 537, 568, 569, 572, 575, 576, 577], "type": [0, 8, 9, 26, 33, 34, 39, 53, 89, 91, 95, 97, 98, 105, 106, 107, 109, 110, 111, 112, 113, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 222, 223, 224, 225, 239, 252, 253, 255, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 556, 558, 562, 563, 566, 568, 569, 572, 575, 576], "present": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 60, 65, 74, 81, 82, 87, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 111, 112, 113, 115, 156, 190, 192, 195, 196, 197, 198, 202, 203, 204, 205, 209, 214, 221, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 526, 530, 537, 547, 558, 568, 577], "context": [0, 1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 79, 81, 82, 87, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 111, 112, 113, 115, 156, 190, 192, 196, 198, 203, 204, 205, 214, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 526, 527, 530, 532, 537, 568, 577], "id": [0, 8, 9, 12, 13, 14, 25, 26, 35, 36, 37, 38, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 190, 192, 196, 203, 204, 205, 207, 221, 239, 254, 255, 546, 568, 569, 575, 578], "data": [0, 2, 3, 5, 6, 7, 8, 9, 12, 13, 26, 34, 35, 39, 41, 52, 53, 62, 80, 81, 89, 92, 93, 94, 96, 98, 99, 101, 104, 106, 107, 110, 111, 112, 115, 144, 155, 156, 159, 182, 183, 186, 187, 190, 192, 195, 196, 197, 202, 204, 205, 209, 212, 214, 220, 221, 226, 244, 248, 527, 558, 560, 564, 569, 573, 575, 576, 578], "set": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 26, 30, 34, 39, 40, 41, 74, 85, 89, 104, 107, 111, 112, 113, 115, 139, 141, 142, 143, 144, 148, 149, 150, 156, 159, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 239, 248, 255, 272, 273, 274, 276, 525, 526, 527, 528, 532, 536, 547, 555, 569, 573, 574, 575, 576, 578], "none": [0, 33, 34, 35, 36, 37, 38, 76, 85, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 159, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 519, 522, 525, 526, 527, 528, 529, 530, 533, 534, 535, 559, 560, 569, 573, 574, 575, 576], "end": [0, 1, 8, 9, 115, 225, 533, 568, 569, 575], "q": [0, 1, 2, 3, 6, 7, 8, 9, 99, 112], "quiet": [0, 1, 2, 3, 6, 7, 8, 9], "mode": [0, 1, 2, 3, 6, 7, 8, 9, 13, 37, 39, 40, 112, 113, 214, 568, 571, 574], "print": [0, 1, 2, 3, 6, 7, 8, 9, 16, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 89, 93, 95, 98, 102, 104, 111, 112, 241, 252, 272, 553, 569, 573, 574, 575, 578], "warn": [0, 1, 2, 3, 6, 7, 8, 9, 25, 26, 31, 33, 76, 89, 92, 93, 98, 99, 101, 102, 104, 107, 112, 142, 143, 546, 548, 549, 550, 551, 552, 555, 556, 558, 559, 560, 562, 564, 566], "error": [0, 1, 2, 3, 6, 7, 8, 9, 74, 76, 93, 102, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 554, 555, 556, 558, 562, 566, 568, 569], "verbos": [0, 1, 2, 3, 6, 7, 8, 9, 569], "process": [0, 1, 2, 3, 6, 7, 8, 9, 13, 21, 26, 34, 42, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 112, 115, 155, 188, 226, 248, 252, 254, 255, 526, 530, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 560, 561, 562, 563, 565, 566, 578], "detail": [0, 1, 2, 3, 6, 7, 8, 9, 34, 37, 41, 527, 537, 547, 569, 574, 575, 576], "debug": [0, 1, 2, 3, 6, 7, 8, 9, 40, 114, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 569], "ll": [0, 1, 2, 3, 6, 7, 8, 9, 37, 568, 569, 572], "log": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 16, 18, 33, 40, 41, 76, 77, 78, 79, 89, 114, 159, 226, 227, 248, 268, 553, 556, 568, 569, 574, 576], "level": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 14, 35, 36, 37, 40, 41, 86, 93, 104, 112, 153, 173, 558, 567, 573], "l": [0, 1, 2, 3, 6, 7, 8, 9, 86], "evel": [0, 1, 2, 3, 6, 7, 8, 9], "str": [0, 1, 2, 3, 6, 7, 8, 9, 26, 72, 74, 76, 84, 86, 87, 100, 101, 108, 110, 111, 112, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 201, 203, 205, 211, 212, 214, 216, 218, 219, 222, 223, 224, 239, 252, 253, 463, 519, 520, 521, 522, 523, 526, 527, 528, 529, 530, 531, 533, 534, 535, 573], "One": [0, 1, 2, 3, 6, 7, 8, 9, 36, 37, 88, 96, 103, 214, 225, 239, 519], "critic": [0, 1, 2, 3, 6, 7, 8, 9], "info": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 34, 113, 208, 213, 214, 216, 574], "correspond": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 16, 18, 34, 37, 53, 89, 93, 98, 102, 104, 105, 111, 112, 113, 155, 156, 159, 222, 223, 224, 239, 463, 520, 521, 522, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 568, 569, 573, 574, 576, 578], "lower": [0, 1, 7, 8, 173], "aet": [0, 1, 2, 3, 6, 7, 8, 9], "titl": [0, 1, 2, 3, 6, 7, 8, 9, 12, 16, 26, 30, 37, 74, 83, 84, 89, 110, 111, 112, 113, 144, 190, 192, 214, 526, 530, 566, 569, 573, 575], "etitl": [0, 1, 2, 3, 6, 7, 8, 9], "local": [0, 1, 2, 3, 6, 7, 8, 9, 18, 79, 110, 111, 112, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 214, 254, 527, 528, 569, 574, 576], "default": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 24, 26, 27, 40, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 91, 110, 111, 112, 141, 142, 143, 144, 151, 152, 153, 159, 190, 192, 220, 222, 239, 252, 253, 254, 255, 526, 527, 530, 534, 535, 568, 569, 573, 574, 576, 578], "ta": [0, 1, 2, 3, 6, 7, 8, 9], "acs": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 18, 26, 52, 63, 64, 65, 66, 88, 111, 112, 214, 225, 537, 576], "timeout": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 18, 26, 110, 111, 112, 115, 155, 525, 526, 527, 569, 574], "econd": [0, 1, 2, 3, 6, 7, 8, 9], "float": [0, 1, 2, 3, 5, 6, 7, 8, 9, 85, 110, 111, 112, 115, 155, 525, 527], "30": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 111, 410, 564], "td": [0, 1, 2, 3, 6, 7, 8, 9], "tn": [0, 1, 2, 3, 6, 7, 8, 9], "max": [0, 1, 2, 3, 6, 7, 8, 9, 93, 104, 112, 569], "n": [0, 1, 2, 3, 6, 7, 8, 9, 11, 31, 33, 34, 41, 47, 89, 93, 95, 98, 102, 104, 111, 112, 115, 145, 146, 147, 148, 149, 150, 156, 159, 239, 268, 269, 270, 271, 272, 273, 274, 275, 276, 569, 573, 574, 575, 576, 578], "umber": [0, 1, 2, 3, 6, 7, 8, 9], "byte": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 26, 39, 53, 61, 83, 94, 106, 109, 111, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 169, 190, 192, 196, 197, 198, 205, 206, 207, 208, 209, 210, 211, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 239, 248, 526, 527, 530, 531, 533, 535, 568, 575], "int": [0, 1, 2, 3, 5, 6, 7, 8, 9, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 225, 239, 240, 522, 523, 524, 526, 527, 528, 529, 530, 533, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 573], "maximum": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 18, 28, 39, 81, 83, 91, 93, 104, 111, 112, 113, 115, 140, 141, 142, 143, 144, 190, 192, 199, 202, 212, 214, 217, 220, 533, 558, 573, 574, 575], "16382": [0, 1, 2, 3, 6, 7, 8, 9, 111, 569], "x": [0, 3, 6, 7, 8, 9, 92, 99, 101, 112, 226, 248, 575], "uncompr": [0, 8], "explicit": [0, 1, 2, 3, 6, 7, 8, 9, 18, 86, 87, 111, 151, 152, 252, 568, 569, 573, 578], "vr": [0, 1, 2, 3, 5, 6, 7, 8, 9, 18, 26, 83, 86, 87, 111, 151, 152, 252, 568, 569, 573, 578], "order": [0, 6, 7, 8, 26, 33, 53, 61, 74, 113, 115, 151, 152, 190, 192, 209, 239, 573, 575], "xe": [0, 1, 8, 9], "littl": [0, 1, 2, 3, 6, 7, 8, 9, 18, 86, 87, 111, 151, 152, 252, 568, 569, 573, 578], "endian": [0, 1, 2, 3, 6, 7, 8, 9, 18, 53, 61, 86, 87, 111, 151, 152, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 252, 568, 569, 573, 578], "xb": [0, 1, 8, 9], "big": [0, 1, 2, 3, 6, 7, 8, 9, 53, 61, 86, 87, 111, 151, 152, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 252, 569, 573, 578], "xi": [0, 1, 8, 9], "implicit": [0, 1, 2, 3, 6, 7, 8, 9, 86, 87, 111, 151, 152, 252, 569, 573, 578], "onli": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 31, 33, 34, 39, 40, 74, 75, 89, 92, 93, 98, 99, 101, 104, 105, 106, 107, 111, 112, 113, 115, 156, 159, 211, 217, 218, 219, 220, 222, 223, 224, 225, 239, 244, 535, 560, 566, 568, 569, 574, 575, 576], "support": [0, 1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 16, 18, 26, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 54, 82, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 206, 209, 214, 222, 224, 225, 239, 254, 520, 526, 530, 539, 540, 569, 574, 575, 578], "ar": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 26, 34, 35, 36, 40, 53, 62, 74, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 155, 156, 157, 158, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 221, 222, 223, 224, 225, 239, 254, 255, 522, 532, 536, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566, 568, 569, 573, 574, 575, 576, 578], "840": [0, 1, 2, 3, 6, 7, 8, 9, 86, 87, 111, 198, 214, 222, 223, 224, 252, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 573, 574, 575, 578], "10008": [0, 1, 2, 3, 6, 7, 8, 9, 86, 87, 111, 198, 214, 222, 223, 224, 252, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 573, 574, 575, 578], "99": [0, 1, 2, 3, 6, 7, 8, 9, 86, 87, 573], "deflat": [0, 1, 2, 3, 6, 7, 8, 9, 18, 86, 87, 151, 152, 252, 573, 578], "4": [0, 2, 3, 5, 6, 7, 8, 9, 10, 14, 18, 19, 34, 36, 37, 41, 86, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 109, 111, 112, 156, 163, 171, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 224, 225, 239, 252, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 547, 548, 549, 551, 552, 554, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 573, 575, 578], "50": [0, 3, 6, 7, 8, 9, 11, 86, 252, 387, 564, 578], "jpeg": [0, 6, 7, 8, 86, 252, 578], "baselin": [0, 6, 7, 8, 86, 252, 578], "51": [0, 6, 7, 8, 86, 564], "extend": [0, 7, 8, 11, 74, 86, 105, 106, 111, 113, 207, 208, 212, 223, 224, 225, 463, 568, 569, 576, 578], "57": [0, 6, 7, 8, 86, 564], "lossless": [0, 6, 7, 8, 86], "hierarch": [0, 6, 7, 8], "14": [0, 3, 6, 7, 8, 9, 34, 86, 197, 211, 376, 377, 422, 486, 558, 564], "70": [0, 3, 6, 7, 8, 9, 86, 373, 519, 564, 572], "first": [0, 6, 7, 8, 18, 37, 39, 41, 53, 92, 101, 115, 156, 172, 197, 198, 209, 239, 248, 570, 573, 575, 578], "predict": [0, 6, 7, 8], "select": [0, 3, 6, 7, 8, 9, 11, 12, 13, 18, 35, 36, 74, 82, 86, 111, 112, 113, 206, 212, 222, 226, 239, 248, 253, 254, 255, 526, 527, 574, 575, 577], "valu": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 26, 31, 33, 35, 36, 53, 60, 74, 84, 86, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 109, 110, 111, 112, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 239, 248, 253, 254, 255, 267, 522, 524, 525, 526, 527, 531, 533, 534, 535, 536, 542, 546, 547, 548, 549, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 573, 574, 575, 576, 578], "80": [0, 3, 6, 7, 8, 9, 86, 408, 564], "imag": [0, 2, 3, 6, 7, 8, 9, 33, 34, 35, 36, 39, 89, 104, 111, 112, 226, 241, 246, 248, 558, 564, 565, 568, 569, 573, 575, 578], "compress": [0, 6, 7, 8, 209, 568, 575], "81": [0, 3, 6, 7, 8, 9, 86, 406, 564], "lossi": [0, 6, 7, 8, 86], "Near": [0, 6, 7, 8], "90": [0, 3, 6, 7, 8, 9, 86, 319, 564], "2000": [0, 6, 7, 8, 86], "91": [0, 3, 6, 7, 8, 9, 86, 390, 564], "92": [0, 6, 7, 8, 86], "part": [0, 6, 7, 8, 18, 33, 34, 38, 82, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 115, 139, 156, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 525, 564, 568, 569, 573, 574, 575, 578], "multi": [0, 2, 3, 6, 7, 8, 9, 86, 226, 248], "compon": [0, 6, 7, 8, 86, 197, 198, 209, 536, 575], "93": [0, 6, 7, 8, 86], "5": [0, 2, 3, 6, 7, 8, 9, 10, 13, 16, 26, 34, 41, 77, 78, 83, 85, 86, 93, 97, 101, 106, 109, 110, 111, 112, 115, 151, 152, 153, 154, 156, 164, 167, 172, 181, 195, 196, 203, 204, 205, 206, 207, 208, 211, 215, 222, 223, 224, 225, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 525, 526, 527, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 573, 575, 578], "rle": [0, 6, 7, 8, 86], "addr": [1, 2, 3, 6, 9, 18, 34, 37, 101, 111, 527, 574], "user": [1, 2, 3, 6, 7, 9, 11, 12, 13, 14, 18, 26, 30, 31, 35, 36, 37, 38, 42, 44, 45, 53, 54, 62, 64, 74, 76, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 168, 190, 192, 210, 211, 212, 213, 214, 215, 216, 220, 221, 225, 239, 267, 568, 569, 571, 575, 576], "scu": [1, 2, 3, 6, 7, 8, 9, 11, 13, 41, 74, 82, 93, 111, 112, 113, 206, 212, 222, 224, 239, 253, 254, 255, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 575, 577], "entiti": [1, 2, 3, 6, 9, 16, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 45, 47, 53, 62, 63, 64, 66, 67, 111, 112, 144, 197, 198, 200, 201, 206, 207, 208, 209, 537, 564, 567, 577], "wait": [1, 12, 18, 111, 115, 155, 165, 166], "respons": [1, 2, 3, 6, 9, 13, 18, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 64, 66, 75, 78, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 109, 110, 112, 113, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 179, 180, 185, 193, 210, 211, 213, 214, 215, 216, 221, 225, 239, 525, 568, 569, 573, 575, 576, 577], "successfulli": [1, 2, 3, 6, 9, 33, 34, 74, 568], "ip": [1, 2, 3, 6, 7, 9, 18, 30, 31, 33, 35, 36, 37, 38, 39, 40, 101, 111, 113, 214, 529, 569, 574], "127": [1, 2, 3, 6, 9, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 568, 569, 573, 574, 576, 578], "doesn": [1, 37, 91, 102, 112, 557, 564, 569, 574, 578], "t": [1, 3, 6, 8, 9, 12, 18, 27, 33, 37, 39, 80, 81, 91, 102, 111, 112, 223, 520, 557, 564, 568, 569, 572, 573, 574, 575, 576, 578], "e": [1, 3, 9, 18, 34, 67, 111, 196, 204, 205, 209, 239, 252, 568, 569, 571, 573, 575, 576, 578], "No": [1, 9, 12, 34, 89, 93, 95, 98, 102, 104, 112, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 197, 198, 209, 546, 550, 554, 555, 556, 558, 562, 563, 566, 568, 569], "reject": [1, 12, 14, 15, 16, 30, 31, 33, 35, 36, 37, 38, 39, 40, 109, 110, 111, 112, 113, 171, 173, 175, 191, 203, 214, 225, 239, 569, 573, 574, 575, 576, 578], "thi": [1, 2, 3, 5, 6, 7, 18, 34, 35, 36, 37, 38, 39, 40, 51, 79, 80, 81, 82, 85, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 169, 172, 173, 190, 217, 218, 219, 220, 222, 224, 225, 254, 255, 519, 521, 525, 526, 527, 530, 537, 545, 555, 559, 560, 562, 566, 567, 568, 569, 571, 572, 573, 574, 575, 578], "case": [1, 34, 38, 39, 101, 109, 526, 568, 569, 575], "becaus": [1, 34, 89, 91, 92, 93, 98, 99, 101, 104, 107, 112, 156, 568, 569, 575, 576, 578], "call": [1, 2, 3, 6, 9, 12, 16, 34, 74, 79, 110, 111, 112, 113, 159, 190, 192, 214, 526, 527, 568, 569, 573], "wasn": 1, "recognis": [1, 33, 104, 110, 214, 523, 556, 558, 562, 566, 569], "result": [1, 2, 3, 5, 6, 7, 8, 9, 14, 26, 33, 39, 74, 84, 110, 113, 190, 191, 203, 214, 216, 225, 226, 239, 248, 254, 255, 529, 566, 569, 575], "perman": [1, 110, 214, 225], "reason": [1, 12, 109, 110, 111, 189, 190, 191, 203, 214, 215, 216, 555, 569, 573, 575], "fail": [1, 3, 6, 25, 26, 33, 34, 84, 89, 92, 93, 98, 99, 101, 104, 107, 112, 142, 143, 152, 529, 535, 542, 546, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 576], "unabl": [1, 89, 92, 99, 101, 112, 190, 547, 548, 549, 551, 552, 558, 559, 560, 561, 565, 566, 568], "remot": [1, 12, 94, 108, 111, 112, 115, 172, 527, 528, 574, 576], "tcp": [1, 2, 3, 6, 9, 101, 111, 113, 214, 569], "initialis": [1, 11, 27, 30, 31, 33, 35, 36, 37, 38, 39, 40, 115, 139, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 569, 573], "refus": [1, 89, 93, 104, 546, 554, 555, 558, 562, 563, 566, 567, 569], "flag": [1, 6, 9, 569], "outgo": [1, 9, 13, 569], "ac": [1, 8, 9, 16, 28, 52, 53, 74, 170, 174, 190, 199, 203, 210, 214, 217, 222, 223, 224, 225, 569], "pydicom": [1, 2, 3, 5, 6, 8, 9, 11, 16, 19, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 111, 112, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 190, 192, 203, 204, 214, 218, 222, 223, 224, 239, 252, 520, 521, 535, 536, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 571, 573, 578], "read_dataset": [1, 8, 9, 569], "transfersyntax": [1, 8, 9, 569], "statu": [1, 9, 18, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 89, 90, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 239, 267, 537, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 576], "success": [1, 2, 3, 6, 9, 16, 23, 26, 31, 33, 34, 36, 37, 38, 39, 40, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 190, 267, 522, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 576], "address": [1, 2, 3, 6, 7, 9, 13, 14, 18, 26, 27, 37, 101, 108, 111, 113, 214, 526, 527, 528, 529, 530, 542, 548, 549, 551, 552, 559, 560, 569, 574], "hostnam": [1, 2, 3, 6, 9, 527], "number": [1, 2, 3, 5, 6, 9, 13, 36, 37, 39, 91, 92, 93, 101, 104, 111, 112, 113, 142, 143, 155, 157, 158, 199, 207, 214, 217, 240, 525, 527, 533, 542, 548, 549, 551, 552, 559, 560, 562, 569, 573, 575, 576, 578], "aec": [1, 2, 3, 6, 9], "ani": [1, 2, 3, 5, 6, 9, 12, 13, 34, 37, 39, 74, 79, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 149, 156, 159, 198, 239, 526, 530, 568, 569, 571, 573, 574, 576, 578], "repeat": [1, 34], "time": [1, 2, 13, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 156, 218, 219, 525, 559, 560, 568, 569, 574, 576], "instead": [1, 2, 3, 5, 6, 12, 13, 14, 16, 18, 37, 80, 81, 93, 101, 104, 111, 112, 159, 527, 558, 568, 569, 571, 573, 574, 576, 578], "new": [2, 3, 6, 7, 13, 18, 26, 29, 33, 34, 37, 41, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 93, 101, 104, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 153, 154, 155, 156, 157, 158, 159, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 333, 425, 426, 428, 474, 480, 489, 490, 522, 525, 526, 527, 528, 529, 530, 531, 532, 558, 559, 560, 566, 568, 569, 570, 571, 573, 574, 578], "version": [2, 3, 6, 7, 11, 18, 26, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 101, 110, 111, 112, 113, 115, 151, 152, 153, 154, 156, 157, 158, 159, 173, 190, 192, 198, 201, 207, 212, 214, 218, 219, 253, 268, 270, 271, 272, 273, 274, 275, 276, 333, 425, 426, 428, 474, 480, 489, 490, 522, 526, 527, 528, 529, 530, 531, 536, 568, 569, 574], "k": [2, 3, 5, 6, 99, 112], "f": [2, 3, 5, 6, 7, 39, 93, 98, 102, 104, 112, 156, 197, 198, 209, 568], "file": [2, 3, 5, 6, 8, 9, 24, 26, 34, 36, 39, 80, 81, 107, 112, 156, 569], "find": [2, 7, 11, 16, 18, 23, 26, 30, 32, 38, 41, 77, 78, 99, 112, 115, 141, 156, 159, 228, 229, 230, 232, 233, 243, 244, 256, 264, 266, 276, 519, 520, 542, 568, 569, 572, 574, 576], "match": [2, 3, 6, 12, 16, 18, 26, 35, 36, 37, 38, 81, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 190, 522, 546, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 569, 574, 578], "against": [2, 3, 6, 35, 36, 37, 38], "instanc": [2, 3, 5, 6, 7, 8, 9, 11, 13, 16, 18, 25, 26, 28, 31, 33, 34, 35, 36, 37, 38, 39, 41, 79, 89, 92, 93, 95, 98, 99, 101, 102, 104, 107, 111, 112, 144, 145, 146, 147, 148, 149, 150, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 234, 244, 252, 253, 270, 519, 526, 527, 528, 530, 537, 546, 550, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 573, 574, 575, 576, 578], "kei": [2, 3, 6, 7, 8, 9, 13, 16, 18, 34, 35, 36, 37, 92, 99, 112, 159, 226, 248, 547, 548, 549, 551, 552, 559, 560, 566, 574], "queryretrievelevel": [2, 3, 5, 6, 35, 36, 37], "patient": [2, 3, 5, 6, 7, 8, 9, 11, 32, 35, 36, 37, 41, 89, 99, 107, 112, 226, 238, 244, 246, 261, 264, 266, 546, 553, 560, 568, 575], "patientnam": [2, 3, 5, 6, 30, 33, 35, 38, 568], "identifi": [2, 3, 5, 6, 18, 23, 26, 30, 31, 34, 35, 36, 37, 38, 77, 78, 89, 92, 99, 101, 102, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 197, 198, 200, 201, 209, 218, 219, 221, 222, 519, 546, 547, 561, 565, 568, 575, 578], "0008": [2, 3, 5, 6, 31, 92, 101, 112, 568], "0052": [2, 3, 5, 6], "0010": [2, 3, 5, 6, 34, 89, 112, 156, 546, 568, 578], "pn": [2, 3, 5, 6], "0xff00": [2, 3, 6, 35, 36, 37, 38, 92, 99, 101, 112, 522, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "pend": [2, 3, 6, 18, 23, 26, 35, 36, 37, 78, 92, 99, 101, 112, 522, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "0054": 2, "qrscp": [2, 4, 18, 24, 26, 28, 35, 36, 37, 41, 571], "retrieveaetitl": [2, 33], "compressedsampl": 2, "ct1": 2, "0x0000": [2, 3, 6, 9, 16, 31, 33, 34, 36, 37, 39, 40, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 267, 522, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 576], "higher": [2, 3, 6, 9, 18, 569], "p": [2, 3, 6, 7, 12, 13, 14, 52, 53, 54, 62, 89, 96, 110, 112, 115, 163, 167, 182, 183, 186, 187, 189, 195, 202, 214, 215, 220, 221], "root": [2, 3, 6, 7, 11, 35, 36, 37, 73, 244, 560, 575], "studi": [2, 3, 6, 7, 35, 36, 37, 89, 244, 546, 560, 575], "o": [2, 3, 6, 33, 35, 36, 37, 38, 568, 569], "psonli": [2, 3, 6], "w": [2, 574], "modal": [2, 7, 14, 18, 30, 32, 41, 112, 228, 237, 242, 273, 553], "u": [2, 3, 5, 6, 7, 8, 9, 34, 92, 99, 101, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 213, 214, 215, 216, 221, 226, 248, 568, 569, 571], "up": [2, 3, 5, 6, 7, 18, 20, 83, 89, 93, 102, 104, 112, 207, 212, 568, 569, 570, 571, 573, 575, 578], "pull": [2, 7, 20, 250, 566, 571], "eyword": [2, 3, 6], "gggg": [2, 3, 6], "eeee": [2, 3, 6], "add": [2, 3, 6, 11, 14, 18, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 74, 79, 89, 111, 113, 155, 156, 214, 239, 522, 533, 546, 568, 569, 573, 574, 578], "overrid": [2, 3, 6, 7], "element": [2, 3, 5, 6, 11, 16, 18, 26, 33, 42, 47, 83, 84, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 112, 141, 142, 143, 144, 152, 154, 156, 197, 198, 204, 209, 524, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 573, 575], "either": [2, 3, 5, 6, 31, 33, 38, 63, 67, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 111, 112, 113, 115, 173, 184, 197, 209, 214, 239, 526, 568, 569, 573, 574, 578], "tag": [2, 3, 5, 6, 31, 112, 149, 156, 568], "group": [2, 3, 6, 93, 104, 112, 156, 233, 238, 552, 562, 568, 575], "see": [2, 3, 6, 7, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 99, 111, 112, 155, 156, 214, 224, 568, 569, 573, 574, 576], "section": [2, 3, 6, 7, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 111, 112, 139, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 239, 525, 569, 573], "il": [2, 3, 6, 7], "dataset": [2, 3, 5, 6, 9, 13, 18, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 77, 78, 80, 81, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 107, 112, 144, 151, 152, 153, 156, 159, 522, 524, 537, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 572, 575, 578], "ad": [2, 3, 6, 7, 11, 12, 13, 14, 16, 18, 26, 29, 36, 39, 74, 82, 83, 101, 107, 110, 111, 112, 113, 115, 151, 152, 255, 522, 526, 568, 572, 574], "overwrit": [2, 3, 6], "those": [2, 3, 6, 12, 16, 111, 112, 576], "relat": [2, 3, 6, 13, 14, 34, 35, 36, 42, 51, 74, 88, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 111, 113, 140, 141, 142, 143, 144, 198, 207, 214, 223, 225, 542, 547, 557, 558, 565, 569, 575], "dt": [2, 186, 187], "date": [2, 18, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 156, 537, 571, 576], "fuzzi": 2, "name": [2, 3, 5, 6, 11, 13, 14, 16, 18, 26, 35, 72, 74, 100, 110, 111, 113, 156, 157, 158, 159, 190, 192, 197, 198, 201, 203, 204, 207, 209, 212, 214, 218, 219, 222, 522, 534, 535, 568, 569, 572, 575], "semant": [2, 197, 204, 575], "person": 2, "timezon": 2, "adj": 2, "adjust": 2, "enhanc": [2, 3, 6, 7, 8, 9, 226, 248], "convers": [2, 3, 6], "frame": [2, 3, 6, 7, 8, 9, 11, 41, 89, 92, 101, 112, 226, 248, 546, 559, 560], "write": [2, 3, 6, 8, 36, 39, 41, 80, 156, 570], "rsp000001": 2, "dcm": [2, 9, 34, 156, 522, 568], "rsp000002": 2, "becom": [2, 3, 5, 6, 26, 89, 566, 568, 569, 578], "possibl": [2, 3, 5, 6, 13, 16, 18, 35, 36, 37, 74, 81, 115, 157, 158, 239, 569, 573, 574, 576, 578], "without": [2, 3, 5, 6, 26, 41, 79, 81, 112, 156, 244, 535, 560, 568, 571, 574], "need": [2, 3, 5, 6, 14, 26, 30, 34, 36, 39, 82, 101, 112, 568, 569, 571, 573, 576], "creat": [2, 3, 5, 6, 11, 13, 18, 30, 34, 35, 36, 37, 38, 39, 40, 41, 87, 89, 92, 93, 101, 104, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 149, 155, 156, 159, 188, 239, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 525, 526, 527, 528, 529, 530, 546, 559, 560, 571, 574, 575, 576, 577, 578], "multipl": [2, 3, 5, 6, 7, 8, 9, 21, 26, 39, 111, 159, 226, 248, 252, 573, 574, 575, 576, 578], "build": [2, 3, 5, 6, 573], "For": [2, 3, 5, 6, 7, 8, 9, 34, 35, 41, 79, 86, 111, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 226, 248, 568, 569, 573, 574, 575, 578], "produc": [2, 3, 5, 6, 18], "after": [2, 3, 5, 6, 14, 17, 18, 34, 74, 96, 100, 113, 156, 197, 198, 209, 239, 519, 525, 568, 574], "interpret": [2, 3, 5, 6], "so": [2, 3, 5, 6, 11, 18, 30, 35, 39, 568, 569, 572, 573, 574, 576, 578], "includ": [2, 3, 5, 6, 14, 25, 26, 34, 36, 37, 38, 41, 106, 111, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 212, 254, 255, 463, 537, 566, 569, 572, 573, 574, 575, 576, 578], "singl": [2, 3, 5, 6, 7, 8, 9, 12, 31, 34, 38, 39, 40, 111, 159, 198, 217, 218, 219, 220, 223, 224, 225, 226, 248, 252, 561, 568, 569, 573, 575, 576], "doubl": [2, 3, 5, 6], "quotat": [2, 3, 5, 6], "mark": [2, 3, 5, 6], "incorrect": [2, 3, 5, 6, 18], "citizen": [2, 3, 5, 6, 35], "jan": [2, 3, 5, 6, 35], "correct": [2, 3, 5, 6, 25, 26, 34, 89, 104, 112, 156, 566, 569], "altern": [2, 3, 5, 6, 569, 573, 578], "sequenc": [2, 3, 5, 6, 54, 55, 56, 57, 58, 59, 60, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111], "same": [2, 3, 5, 6, 13, 18, 34, 36, 37, 92, 99, 111, 112, 113, 190, 213, 214, 215, 216, 221, 239, 568, 569, 573, 575, 578], "index": [2, 3, 5, 6, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "otherpatientidssequ": [2, 3, 5, 6], "patientid": [2, 3, 5, 6, 28, 33, 35, 36, 37, 38], "12345678": [2, 3, 5, 6], "both": [2, 3, 5, 6, 11, 13, 18, 36, 39, 54, 110, 111, 113, 217, 222, 223, 224, 239, 568, 573, 574, 578], "updat": [2, 3, 5, 6, 11, 18, 26, 33, 34, 89, 104, 111, 112, 156, 546, 566, 571], "empti": [2, 3, 5, 6, 7, 12, 16, 89, 106, 111, 112, 143, 155, 156, 190, 203, 214, 219, 534, 535, 558, 569], "numer": [2, 3, 5, 6, 115, 197, 198, 209, 525, 575], "like": [2, 3, 5, 6, 26, 40, 111, 534, 568, 569, 572, 575], "fl": [2, 3, 5, 6], "convert": [2, 3, 5, 6, 7, 8, 9, 18, 74, 96, 115, 155, 192, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 248, 533, 534, 535, 578], "depend": [2, 3, 5, 6, 7, 19, 34, 35, 36, 39, 109, 111, 112, 225, 569, 573, 574, 575, 576], "column": [2, 3, 5, 6, 34, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "1024": [2, 3, 5, 6], "0028": [2, 3, 5, 6], "0011": [2, 3, 5, 6], "ob": [2, 3, 5, 6, 568], "ow": [2, 3, 5, 6], "pixeldata": [2, 3, 5, 6, 34], "00ffea08": [2, 3, 5, 6], "7fe0": [2, 3, 5, 6], "pixel": [2, 3, 5, 6, 34], "b": [2, 3, 5, 6, 7, 8, 9, 33, 39, 107, 112, 156, 197, 204, 209, 219, 224, 225, 226, 239, 248, 568, 573, 574], "x00": [2, 3, 5, 6, 39, 156, 568], "xff": [2, 3, 5, 6], "xea": [2, 3, 5, 6], "x08": [2, 3, 5, 6], "vm": [2, 3, 5, 6, 26], "where": [2, 3, 5, 6, 7, 18, 31, 35, 36, 37, 38, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 173, 526, 527, 547, 568, 574, 576, 578], "appropri": [2, 3, 5, 6, 34, 35, 75, 89, 566, 568], "acquisitionindex": [2, 3, 5, 6], "0020": [2, 3, 5, 6, 34, 89, 546], "9518": [2, 3, 5, 6], "acquisit": [2, 3, 5, 6, 7, 8, 9, 33, 226], "300a": [2, 3, 5, 6], "00b0": [2, 3, 5, 6], "beam": [2, 3, 5, 6, 7, 8, 9, 93, 104, 112, 226, 248, 562], "beamsequ": [2, 3, 5, 6], "item": [2, 3, 5, 6, 13, 16, 30, 34, 36, 52, 53, 62, 74, 82, 88, 91, 105, 106, 109, 111, 112, 113, 155, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 253, 254, 255, 533, 537, 566, 568, 573, 574, 575, 576, 578], "one": [2, 3, 5, 6, 9, 11, 12, 13, 16, 18, 33, 34, 35, 44, 45, 53, 55, 57, 60, 62, 64, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 141, 142, 143, 144, 146, 155, 156, 190, 192, 209, 212, 213, 221, 222, 239, 254, 255, 547, 548, 549, 551, 552, 554, 559, 560, 561, 564, 566, 568, 569, 573, 574, 575, 578], "four": [2, 3, 5, 6, 239, 568, 573, 574, 578], "nest": [2, 3, 5, 6], "beamlimitingdevicesequ": [2, 3, 5, 6], "numberofleafjawpair": [2, 3, 5, 6], "00b6": [2, 3, 5, 6], "limit": [2, 3, 5, 6, 37, 89, 93, 95, 98, 102, 104, 110, 112, 115, 202, 214, 220, 546, 550, 554, 555, 556, 558, 562, 563, 566, 568, 569, 573, 574, 575], "devic": [2, 3, 5, 6, 34, 104, 112, 555, 562, 565], "00bc": [2, 3, 5, 6], "leaf": [2, 3, 5, 6], "jaw": [2, 3, 5, 6], "pair": [2, 3, 5, 6, 92, 99, 101, 112, 156, 542, 548, 549, 551, 552, 559, 560, 575], "31": [2, 7, 394, 547, 564], "34": [2, 3, 6, 7, 8, 9, 316, 436, 438, 440, 444, 489, 490, 493, 494, 495, 496, 497, 562, 564, 566], "get": [3, 7, 11, 14, 18, 25, 26, 31, 32, 33, 34, 37, 77, 78, 82, 92, 102, 111, 112, 113, 115, 139, 141, 142, 143, 144, 148, 149, 150, 155, 156, 159, 190, 192, 203, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 232, 233, 239, 243, 244, 269, 271, 272, 273, 274, 276, 519, 527, 542, 568, 569, 570, 572, 574, 575, 576, 578], "manag": [3, 6, 11, 14, 16, 32, 35, 36, 37, 38, 41, 89, 93, 95, 98, 99, 102, 104, 112, 228, 231, 235, 241, 256, 269, 271, 272, 553, 566, 569, 575], "qr": [3, 6, 7, 11, 18, 26, 35, 36, 37, 257, 258, 259, 260, 262, 574], "copi": [3, 6, 571], "act": [3, 8, 13, 14, 16, 18, 21, 25, 26, 34, 36, 41, 82, 111, 112, 113, 239, 254, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 568, 573, 574, 578], "storag": [3, 11, 13, 16, 18, 26, 32, 33, 36, 37, 41, 82, 89, 98, 101, 107, 111, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 226, 236, 238, 247, 248, 261, 265, 275, 553, 569, 573, 574, 575, 578], "store": [3, 6, 7, 8, 9, 13, 16, 24, 25, 26, 35, 36, 37, 38, 39, 41, 80, 92, 101, 104, 107, 112, 115, 144, 156, 159, 265, 542, 558, 560, 561, 568, 569, 574, 575, 576], "ct": [3, 6, 7, 8, 9, 30, 33, 36, 39, 111, 226, 238, 248, 568, 569, 573, 575, 578], "5962": [3, 6, 8, 9, 568], "20040119072730": [3, 6, 8, 9, 568], "12322": [3, 6, 8, 9, 568], "sub": [3, 6, 13, 14, 16, 18, 25, 26, 36, 37, 52, 53, 62, 74, 92, 101, 112, 142, 143, 155, 190, 192, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 217, 522, 537, 542, 548, 549, 551, 552, 559, 560], "oper": [3, 6, 11, 13, 14, 18, 25, 26, 36, 37, 89, 91, 92, 93, 95, 97, 98, 101, 102, 104, 107, 112, 113, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 199, 212, 217, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 522, 542, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 574, 575, 576], "remain": [3, 6, 101, 111, 142, 143, 525, 569, 574, 578], "complet": [3, 6, 12, 13, 33, 89, 92, 101, 111, 112, 115, 142, 143, 239, 526, 527, 548, 549, 551, 552, 555, 559, 560, 566, 575, 576], "od": [3, 6, 8], "irectori": [3, 6, 7, 8], "directori": [3, 6, 7, 8, 9, 35, 36, 37, 38, 236, 568, 571], "object": [3, 6, 7, 8, 9, 11, 18, 41, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 111, 112, 113, 155, 156, 190, 192, 197, 198, 209, 214, 224, 225, 226, 238, 239, 248, 261, 519, 520, 521, 527, 537, 542, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 574, 576], "ignor": [3, 6, 8, 16, 34, 37, 74, 82, 84, 91, 92, 99, 101, 110, 111, 165, 576], "don": [3, 6, 8, 27, 39, 80, 81, 568, 569, 575, 576], "sent": [3, 7, 13, 18, 25, 26, 31, 33, 34, 35, 36, 37, 38, 53, 75, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 151, 155, 190, 191, 192, 203, 214, 239, 254, 255, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 568, 569, 573, 574, 576], "comput": [3, 6, 7, 8, 9, 226, 248, 527, 569], "radiographi": [3, 6, 7, 8, 9, 226, 248], "digit": [3, 6, 7, 8, 9, 197, 198, 209, 226, 248], "rai": [3, 6, 7, 8, 9, 226, 248], "mammographi": [3, 6, 7, 8, 9, 226, 248], "intra": [3, 6, 7, 8, 9, 226, 248], "oral": [3, 6, 7, 8, 9, 226, 248], "legaci": [3, 6, 7, 8, 9, 226, 248], "ultrasound": [3, 6, 7, 8, 9, 226, 248], "mr": [3, 6, 7, 8, 9, 226, 248, 578], "spectroscopi": [3, 6, 7, 8, 9, 226, 248], "color": [3, 6, 7, 8, 9, 11, 16, 34, 41, 92, 99, 101, 112, 226, 229, 238, 241, 248, 257, 553, 558], "volum": [3, 6, 7, 8, 9, 226, 248], "secondari": [3, 6, 7, 8, 9, 109, 211, 225, 226, 248], "captur": [3, 6, 7, 8, 9, 226, 248], "bit": [3, 6, 7, 8, 9, 226, 248, 568, 569], "grayscal": [3, 6, 7, 8, 9, 16, 41, 112, 226, 241, 248, 558], "word": [3, 6, 7, 8, 9, 92, 101, 226, 248], "true": [3, 6, 7, 8, 9, 12, 13, 14, 36, 40, 75, 77, 78, 79, 80, 81, 82, 83, 84, 92, 99, 101, 107, 109, 110, 111, 112, 113, 115, 151, 152, 155, 156, 157, 158, 222, 225, 226, 239, 248, 253, 525, 527, 532, 534, 535, 536, 568, 573, 574, 578], "9": [3, 6, 7, 8, 9, 26, 71, 73, 92, 97, 99, 101, 107, 111, 112, 139, 167, 169, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 279, 280, 288, 291, 293, 303, 334, 335, 351, 352, 364, 399, 443, 444, 459, 462, 468, 488, 508, 525, 536, 558, 562, 564, 569, 573, 575], "12": [3, 6, 7, 8, 9, 28, 33, 167, 198, 207, 226, 347, 348, 451, 516, 518, 564], "lead": [3, 6, 7, 8, 9, 192, 226, 573], "ecg": [3, 6, 7, 8, 9, 226], "waveform": [3, 6, 7, 8, 9, 39, 226, 564], "ambulatori": [3, 6, 7, 8, 9, 226], "hemodynam": [3, 6, 7, 8, 9, 226], "cardiac": [3, 6, 7, 8, 9, 226, 246], "electrophysiologi": [3, 6, 7, 8, 9, 226], "voic": [3, 6, 7, 8, 9, 226], "audio": [3, 6, 7, 8, 9, 26, 226], "arteri": [3, 6, 7, 8, 9, 226], "puls": [3, 6, 7, 8, 9, 226], "respiratori": [3, 6, 7, 8, 9, 226], "multichannel": [3, 7, 8, 9], "routin": [3, 7, 8, 9, 226], "scalp": [3, 7, 8, 9, 226], "sleepelectroencephalogram": [3, 7, 8, 9], "electromyogram": [3, 7, 8, 9, 226], "electrooculogram": [3, 7, 8, 9, 226], "sleep": [3, 7, 8, 9, 39, 226, 574], "electroencephalogram": [3, 7, 8, 9, 226], "8": [3, 6, 7, 8, 9, 18, 74, 109, 111, 112, 167, 175, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 225, 226, 239, 248, 278, 293, 375, 409, 440, 445, 512, 525, 562, 564, 573, 575], "bodi": [3, 7, 8, 9, 226], "posit": [3, 7, 8, 9, 155, 211, 225, 226, 574], "11": [3, 6, 7, 8, 9, 167, 169, 190, 192, 208, 278, 290, 292, 311, 315, 358, 359, 400, 435, 452, 466, 508, 513, 564], "softcopi": [3, 6, 7, 8, 9, 41, 226, 248], "state": [3, 6, 7, 8, 9, 12, 13, 26, 41, 79, 89, 90, 93, 100, 104, 112, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 226, 248, 525, 527, 537, 566, 569, 576], "pseudo": [3, 6, 7, 8, 9, 226, 248], "blend": [3, 6, 7, 8, 9, 226, 248], "xa": [3, 6, 7, 8, 9, 226, 238, 248], "xrf": [3, 6, 7, 8, 9, 226, 248], "planar": [3, 6, 7, 8, 9, 226, 248], "mpr": [3, 6, 7, 8, 9, 226, 248], "volumetr": [3, 6, 7, 8, 9, 41, 226, 248], "composit": [3, 6, 7, 8, 9, 11, 26, 41, 226, 244, 248, 555, 559, 560, 575], "advanc": [3, 6, 7, 8, 9, 37, 226, 248], "render": [3, 6, 7, 8, 9, 226, 248], "10": [3, 6, 7, 8, 9, 13, 26, 33, 86, 89, 93, 95, 98, 102, 104, 111, 112, 115, 167, 177, 190, 192, 206, 207, 211, 389, 438, 446, 466, 527, 564, 569], "segment": [3, 6, 7, 8, 9, 226, 248], "angiograph": [3, 6, 7, 8, 9, 226, 248], "radiofluoroscop": [3, 6, 7, 8, 9, 226, 248], "13": [3, 6, 7, 8, 9, 12, 111, 112, 203, 204, 207, 295, 296, 297, 299, 514, 515, 564], "3d": [3, 6, 7, 8, 9, 86, 226, 248], "craniofaci": [3, 6, 7, 8, 9, 226, 248], "breast": [3, 6, 7, 8, 9, 226, 246, 248], "tomosynthesi": [3, 6, 7, 8, 9, 226, 248], "project": [3, 6, 7, 8, 9, 11, 226, 248], "intravascular": [3, 6, 7, 8, 9, 226, 248], "optic": [3, 6, 7, 8, 9, 226, 248], "coher": [3, 6, 7, 8, 9, 226, 248], "tomographi": [3, 6, 7, 8, 9, 226, 248], "20": [3, 6, 7, 8, 9, 321, 322, 323, 401, 460, 473, 474, 549, 563, 564, 574], "nuclear": [3, 6, 7, 8, 9, 226, 248], "medicin": [3, 6, 7, 8, 9, 226, 248], "parametr": [3, 6, 7, 8, 9, 226, 248], "map": [3, 6, 7, 8, 9, 226, 248], "66": [3, 6, 7, 8, 9, 11, 324, 457, 465, 469, 470, 484, 487, 564], "raw": [3, 6, 7, 8, 9, 26, 39, 80, 81, 106, 226, 248, 568], "spatial": [3, 6, 7, 8, 9, 226, 248], "registr": [3, 6, 7, 8, 9, 226, 248, 519], "fiduci": [3, 6, 7, 8, 9, 226, 248], "deform": [3, 6, 7, 8, 9, 226, 248], "surfac": [3, 6, 7, 8, 9, 226, 248], "tractographi": [3, 6, 7, 8, 9, 226, 248], "67": [3, 6, 7, 8, 9, 458, 517, 564], "real": [3, 6, 7, 8, 9, 34, 226, 248, 568, 575], "world": [3, 6, 7, 8, 9, 226, 248, 568, 575], "68": [3, 6, 7, 8, 9, 456, 482, 483, 564], "scan": [3, 6, 7, 8, 9, 226, 248, 575], "mesh": [3, 6, 7, 8, 9, 226, 248], "point": [3, 6, 7, 8, 9, 40, 226, 248, 569], "cloud": [3, 6, 7, 8, 9, 226, 248], "77": [3, 6, 7, 8, 9, 325, 403, 404, 405, 407, 409, 472, 498, 499, 500, 501, 502, 504, 505, 506, 509, 510, 564], "vl": [3, 6, 7, 8, 9, 226, 248], "endoscop": [3, 6, 7, 8, 9, 226, 248], "video": [3, 6, 7, 8, 9, 86, 226, 248], "microscop": [3, 6, 7, 8, 9, 226, 248], "slide": [3, 6, 7, 8, 9, 226, 248], "coordin": [3, 6, 7, 8, 9, 52, 226, 248], "photograph": [3, 6, 7, 8, 9, 226, 248], "ophthalm": [3, 6, 7, 8, 9, 41, 226, 248], "photographi": [3, 6, 7, 8, 9, 226, 248], "16": [3, 6, 7, 8, 9, 18, 38, 83, 190, 192, 201, 212, 214, 219, 226, 248, 423, 424, 448, 533, 558, 564, 573], "stereometr": [3, 6, 7, 8, 9, 226, 248], "relationship": [3, 6, 7, 8, 9, 33, 226, 248, 575], "wide": [3, 6, 7, 8, 9, 226, 248, 575], "field": [3, 6, 7, 8, 9, 53, 54, 55, 56, 57, 58, 59, 60, 62, 109, 140, 141, 142, 143, 144, 157, 158, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 225, 226, 240, 248], "stereograph": [3, 6, 7, 8, 9, 226, 248], "en": [3, 6, 7, 8, 9, 226, 248], "face": [3, 6, 7, 8, 9, 226, 248], "analysi": [3, 6, 7, 8, 9, 226, 248], "whole": [3, 6, 7, 8, 9, 226, 248], "microscopi": [3, 6, 7, 8, 9, 226, 248], "dermoscop": [3, 7, 8, 9, 226, 248], "78": [3, 6, 7, 8, 9, 281, 375, 378, 383, 402, 471, 478, 507, 564], "lensometri": [3, 6, 7, 8, 9, 226, 248], "measur": [3, 6, 7, 8, 9, 41, 226, 248], "autorefract": [3, 6, 7, 8, 9, 226, 248], "keratometri": [3, 6, 7, 8, 9, 226, 248], "subject": [3, 6, 7, 8, 9, 226, 248], "refract": [3, 6, 7, 8, 9, 41, 226, 248], "visual": [3, 6, 7, 8, 9, 226, 248], "acuiti": [3, 6, 7, 8, 9, 226, 248], "spectacl": [3, 6, 7, 8, 9, 226, 248], "prescript": [3, 6, 7, 8, 9, 226, 248], "report": [3, 6, 7, 8, 9, 11, 33, 34, 41, 89, 98, 112, 115, 148, 156, 159, 226, 248, 272, 273, 274, 275, 276, 564, 568, 574, 575, 576], "axial": [3, 6, 7, 8, 9, 226, 248], "intraocular": [3, 6, 7, 8, 9, 226, 248], "len": [3, 6, 7, 8, 9, 36, 37, 38, 111, 226, 248, 573], "calcul": [3, 6, 7, 8, 9, 92, 101, 112, 226, 248, 548, 549, 551, 552, 559, 560], "79": [3, 6, 7, 8, 9, 386, 564], "macular": [3, 6, 7, 8, 9, 226, 248], "grid": [3, 6, 7, 8, 9, 226, 248], "thick": [3, 6, 7, 8, 9, 226, 248], "static": [3, 6, 7, 8, 9, 193, 194, 226, 248], "perimetri": [3, 6, 7, 8, 9, 226, 248], "82": [3, 6, 7, 8, 9, 320, 564], "corneal": [3, 6, 7, 8, 9, 226, 248], "topographi": [3, 6, 7, 8, 9, 226, 248], "88": [3, 6, 7, 8, 9, 223, 277, 290, 305, 306, 316, 317, 345, 349, 350, 373, 379, 387, 411, 418, 419, 429, 456, 467, 517, 564], "text": [3, 6, 7, 8, 9, 26, 74, 140, 141, 142, 143, 144, 226, 248, 568, 569], "sr": [3, 6, 7, 8, 9, 226, 248], "22": [3, 6, 7, 8, 9, 195, 223, 345, 454, 564], "33": [3, 6, 7, 8, 9, 317, 374, 388, 554, 555, 564], "comprehens": [3, 6, 7, 8, 9, 226, 248], "35": [3, 6, 7, 8, 9, 350, 564], "extens": [3, 6, 7, 8, 9, 226, 248], "40": [3, 6, 7, 8, 9, 223, 332, 333, 427, 428, 429, 546, 550, 564], "procedur": [3, 6, 8, 9, 11, 14, 16, 32, 41, 89, 92, 93, 98, 99, 101, 102, 104, 112, 226, 227, 230, 237, 238, 242, 248, 250, 258, 273, 276, 546, 553, 565, 568, 575], "cad": [3, 6, 7, 8, 9, 226, 248], "59": [3, 6, 7, 8, 9, 379, 564], "document": [3, 6, 7, 8, 9, 11, 31, 33, 35, 36, 37, 38, 39, 40, 41, 74, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 156, 224, 226, 248, 522, 537, 568, 569, 573, 574, 576], "65": [3, 6, 7, 8, 9, 11, 305, 564], "chest": [3, 6, 7, 8, 9, 226, 248], "radiat": [3, 6, 7, 8, 9, 226, 248, 562], "dose": [3, 6, 7, 8, 9, 226, 248], "radiopharmaceut": [3, 6, 7, 8, 9, 226], "69": [3, 6, 7, 8, 9, 306, 564], "colon": [3, 6, 7, 8, 9, 226], "implant": [3, 6, 7, 8, 9, 11, 41, 92, 99, 101, 112, 226, 233, 238, 260, 553], "plan": [3, 6, 7, 8, 9, 13, 14, 16, 18, 93, 112, 226, 248, 562], "71": [3, 6, 7, 8, 9, 13, 277, 564], "72": [3, 6, 7, 8, 9, 467, 564], "simplifi": [3, 6, 7, 8, 9, 11, 13, 226], "adult": [3, 6, 7, 8, 9, 226], "73": [3, 6, 7, 8, 9, 411, 564], "74": [3, 6, 7, 8, 9, 190, 192, 419, 564], "agent": [3, 6, 7, 8, 9, 226], "administr": [3, 6, 7, 8, 9, 11, 41, 89, 99, 112, 226, 227, 249, 266, 546, 553], "75": [3, 6, 7, 8, 9, 418, 564], "perform": [3, 6, 7, 8, 9, 12, 14, 15, 26, 32, 41, 64, 66, 84, 89, 91, 92, 100, 101, 110, 112, 113, 199, 214, 217, 226, 237, 242, 248, 273, 535, 548, 549, 551, 552, 553, 559, 560, 566, 569], "76": [3, 7, 8, 9, 349, 564], "content": [3, 6, 7, 8, 9, 18, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 226, 569, 578], "assess": [3, 6, 7, 8, 9, 226], "bulk": [3, 7, 8, 9, 26, 41, 226, 244, 560], "simpl": [3, 7, 8, 9, 226, 564, 566, 568, 578], "annot": [3, 6, 7, 8, 9, 34, 226, 241, 248, 558], "104": [3, 6, 7, 8, 9, 86, 336, 337, 338, 339, 340, 564, 569], "encapsul": [3, 6, 7, 8, 9, 226, 248], "pdf": [3, 6, 7, 8, 9, 226, 248], "cda": [3, 6, 7, 8, 9, 226, 248], "128": [3, 6, 7, 8, 9, 11, 18, 39, 111, 156, 248, 382, 420, 564, 568, 573, 574, 575, 578], "positron": [3, 6, 7, 8, 9, 226, 248], "emiss": [3, 6, 7, 8, 9, 226, 248], "echoscp": [4, 18, 41, 569], "echoscu": [4, 18, 41], "findscu": [4, 18, 41], "getscu": [4, 18, 41], "movescu": [4, 18, 24, 41], "storescp": [4, 6, 7, 18, 24, 41, 569], "storescu": [4, 18, 41, 568], "option": [5, 18, 26, 34, 35, 39, 40, 53, 62, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 190, 192, 198, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 253, 519, 526, 527, 530, 534, 535, 537, 547, 548, 549, 551, 552, 555, 558, 559, 560, 566, 574, 575, 576, 578], "queri": [5, 11, 16, 20, 25, 26, 30, 32, 41, 92, 99, 101, 112, 229, 230, 232, 233, 243, 244, 246, 249, 250, 263, 264, 266, 553, 566, 574, 575, 578], "dicom": [5, 14, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 51, 53, 61, 62, 67, 74, 75, 80, 81, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 115, 139, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 525, 537, 564, 567, 572, 573, 577, 578], "retriev": [5, 11, 16, 25, 26, 30, 31, 32, 33, 34, 41, 92, 99, 101, 112, 149, 229, 230, 232, 233, 237, 241, 242, 243, 244, 263, 553, 554, 556, 558, 574, 575, 578], "syntax": [5, 15, 16, 18, 74, 82, 86, 87, 111, 112, 151, 152, 156, 190, 192, 197, 203, 204, 209, 221, 222, 224, 239, 252, 254, 255, 537, 568, 569, 573, 578], "move": [6, 7, 11, 13, 14, 16, 18, 25, 26, 32, 41, 77, 78, 90, 101, 112, 115, 143, 144, 156, 159, 229, 230, 232, 233, 243, 244, 519, 522, 542, 569, 572, 574, 576], "destin": [6, 7, 13, 18, 37, 101, 112, 143, 156, 522, 548, 549, 551, 552, 559, 560, 574], "aem": 6, "aetitl": 6, "you": [6, 30, 34, 35, 36, 37, 39, 40, 41, 101, 109, 111, 192, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578], "also": [6, 34, 37, 39, 40, 41, 82, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 111, 115, 525, 568, 569, 571, 572, 573, 574, 575, 578], "11113": [6, 37, 573, 574], "configur": [6, 14, 18, 26, 34, 37, 112, 241, 528, 537, 558, 569], "ort": [6, 7], "stl": [6, 7, 8, 9, 226, 248], "pet": [6, 7, 8, 9, 226, 248], "130": [6, 7, 8, 9, 344, 564], "131": [6, 7, 8, 9, 289, 564], "structur": [6, 7, 8, 9, 41, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 226, 248, 547, 568], "displai": [6, 7, 8, 9, 11, 32, 33, 34, 41, 102, 226, 231, 248, 269, 553], "200": [6, 7, 8, 9, 300, 302, 431, 432, 433, 434, 511, 512, 557, 559, 564], "protocol": [6, 7, 8, 9, 11, 16, 33, 41, 53, 62, 92, 99, 101, 110, 112, 173, 190, 192, 214, 226, 230, 232, 238, 243, 248, 258, 259, 262, 553, 568, 569], "481": [6, 7, 8, 9, 298, 299, 437, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 485, 486, 564], "rt": [6, 7, 8, 9, 16, 41, 89, 93, 95, 98, 102, 104, 112, 226, 245, 248, 274, 553], "treatment": [6, 7, 8, 9, 226, 248, 562, 565], "record": [6, 7, 8, 9, 89, 226, 248, 546], "brachi": [6, 7, 8, 9, 226, 248], "summari": [6, 7, 8, 9, 226, 248, 569], "ion": [6, 7, 8, 9, 226, 245, 248, 562], "physician": [6, 7, 8, 9, 226, 248], "intent": [6, 7, 8, 9, 226, 248], "arm": [6, 7, 8, 9, 226, 248], "photon": [6, 7, 8, 9, 226, 248], "electron": [6, 7, 8, 9, 226, 248], "deliveri": [6, 7, 8, 9, 226, 248, 562], "instruct": [6, 7, 8, 9, 226, 248, 555, 568, 569], "setup": [6, 7, 8, 9, 114, 189, 190, 191, 192, 193, 194, 195, 226], "allow": [7, 8, 11, 12, 13, 16, 20, 26, 27, 31, 33, 35, 36, 37, 40, 41, 79, 81, 83, 101, 111, 192, 197, 200, 201, 202, 206, 207, 208, 209, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 535, 542, 554, 555, 564, 569, 571, 573, 575, 578], "its": [7, 14, 18, 34, 35, 36, 37, 38, 53, 93, 104, 111, 112, 155, 196, 205, 214, 222, 558, 568, 569, 573, 574, 575], "have": [7, 11, 14, 16, 18, 26, 33, 34, 37, 82, 111, 112, 113, 156, 196, 203, 205, 213, 214, 215, 216, 221, 568, 569, 571, 573, 574, 575, 576, 578], "some": [7, 33, 39, 41, 76, 156, 568, 569, 574, 575, 576], "attribut": [7, 11, 13, 28, 30, 31, 33, 34, 35, 36, 37, 38, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 240, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 522, 525, 526, 527, 528, 529, 530, 554, 555, 556, 558, 562, 566, 568, 576, 578], "sqlite": 7, "In": [7, 13, 26, 33, 34, 35, 37, 39, 92, 101, 112, 197, 209, 225, 568, 569, 571, 572, 573, 575, 578], "addit": [7, 18, 74, 111, 112, 571, 573, 575, 576], "current": [7, 18, 31, 33, 34, 38, 41, 86, 89, 92, 93, 99, 100, 112, 113, 115, 153, 155, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 239, 526, 532, 546, 562, 569, 571, 574], "return": [7, 12, 13, 18, 25, 26, 31, 33, 34, 35, 36, 37, 39, 40, 84, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 239, 252, 253, 254, 255, 267, 463, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 542, 557, 564, 568, 569, 572, 573, 574, 576, 578], "standard": [7, 14, 18, 26, 33, 34, 38, 74, 75, 76, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 115, 139, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 525, 568, 569, 572, 573, 575, 578], "requir": [7, 9, 11, 13, 14, 16, 18, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 80, 81, 82, 89, 92, 93, 95, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 113, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 218, 219, 220, 224, 225, 532, 566, 568, 569, 571, 573, 574, 575, 576], "sqlalchemi": [7, 571], "packag": [7, 41, 571], "which": [7, 11, 13, 14, 16, 18, 34, 35, 36, 37, 39, 41, 91, 92, 101, 105, 106, 109, 111, 112, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 203, 206, 222, 525, 526, 527, 568, 569, 571, 572, 573, 574, 575, 576, 578], "custom": [7, 111, 542], "my_config": 7, "ini": [7, 24], "config": 7, "ilenam": 7, "exit": [7, 34], "ba": 7, "bind": [7, 14, 18, 26, 27, 34, 40, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 526, 527, 530, 568, 576], "ddress": 7, "locat": [7, 33], "clean": [7, 26], "remov": [7, 11, 12, 13, 14, 16, 18, 26, 111, 113, 156, 573, 576], "all": [7, 11, 12, 13, 14, 18, 25, 26, 34, 35, 36, 37, 39, 76, 82, 86, 111, 113, 115, 220, 226, 532, 533, 568, 569, 573, 574, 575, 576], "entri": [7, 89, 546], "delet": [7, 11, 34, 41, 89, 95, 112, 115, 147, 272, 274, 566, 574, 576], "format": [7, 30, 31, 33, 35, 36, 37, 38, 39, 40, 53, 62, 80, 107, 156, 169, 196, 205, 533, 574], "compat": [7, 86], "configpars": 7, "modul": [7, 11, 13, 14, 33, 51, 85, 519, 537, 545, 572], "contain": [7, 9, 16, 18, 26, 31, 33, 34, 35, 37, 39, 53, 55, 57, 60, 62, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 140, 141, 142, 143, 144, 156, 159, 190, 192, 196, 205, 212, 214, 221, 223, 226, 239, 248, 526, 555, 558, 568, 569, 573, 574, 575], "itself": [7, 33, 40, 239, 519, 536, 568, 569, 575], "while": [7, 8, 18, 85, 115, 165, 166, 184, 190, 568, 569, 571, 573, 574, 575, 578], "other": [7, 12, 33, 35, 36, 37, 39, 41, 82, 92, 101, 109, 111, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 198, 200, 201, 218, 219, 239, 569, 572, 573, 574, 575, 576], "assum": [7, 34, 82, 111, 112, 239, 526, 532, 568, 573, 574, 578], "definit": [7, 14, 113, 155, 197, 214, 255], "our": [7, 30, 33, 35, 36, 37, 38, 39, 568], "ae_titl": [7, 12, 16, 37, 111, 113, 526, 530, 569, 573, 574], "size": [7, 34, 39, 81, 89, 104, 111, 112, 113, 202, 220, 558, 569], "unlimit": [7, 39, 91, 111, 220, 578], "max_pdu": [7, 111], "second": [7, 101, 110, 111, 112, 155, 525, 526, 527, 568], "acse_timeout": [7, 13, 110, 111, 112], "dimse_timeout": [7, 14, 111, 112, 115], "network_timeout": [7, 13, 111, 112, 155, 526], "interfac": [7, 11, 527], "If": [7, 12, 14, 18, 31, 33, 36, 37, 39, 40, 41, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 159, 160, 163, 164, 165, 166, 167, 188, 203, 214, 217, 218, 219, 220, 222, 223, 224, 225, 239, 254, 255, 519, 521, 525, 526, 527, 530, 532, 534, 535, 536, 568, 569, 571, 573, 574, 575, 576, 578], "unset": [7, 526], "bind_address": [7, 13, 14, 111, 573], "instance_loc": 7, "sqlite3": 7, "database_loc": 7, "ascii": [7, 26, 74, 111, 113, 531, 536, 573], "pacs_scp": 7, "192": [7, 12], "168": 7, "obj": [7, 8, 9, 226, 248], "mtl": [7, 8, 9, 226, 248], "tomotherapeut": [7, 8, 9, 226, 248], "15": [7, 8, 9, 85, 209, 210, 282, 461, 558, 564], "robot": [7, 8, 9, 226, 248], "17": [7, 8, 9, 33, 190, 425, 426, 449, 564], "salvag": [7, 8, 9, 226, 248], "18": [7, 8, 9, 111, 284, 485, 558, 564], "19": [7, 8, 9, 298, 564], "21": [7, 8, 9, 191, 450, 564], "prepar": [7, 8, 9, 34, 226, 248], "model": [7, 35, 36, 37, 38, 112, 228, 229, 230, 232, 233, 243, 244, 247, 548, 549, 551, 552, 559, 560, 577], "affect": [8, 9, 16, 20, 33, 34, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 568], "prioriti": [8, 9, 112, 141, 142, 143, 144, 568], "low": [8, 9, 34, 112, 141, 142, 143, 144, 568], "unless": [8, 12, 109, 111, 267, 526, 536, 575, 578], "path": [9, 26, 34, 35, 36, 37, 38, 39, 80, 81, 107, 112, 156, 568], "unsupport": 9, "check": [9, 13, 15, 18, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 75, 110, 111, 155, 173, 190, 525, 536, 568, 569, 573, 574], "ctimagestorag": [9, 33, 36, 39, 111, 564, 568, 573, 574, 576, 578], "rsp": [9, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "Being": [9, 13, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156], "To": [9, 13, 34, 85, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 568, 569, 571, 572, 573, 574, 578], "transmit": 9, "r": [9, 93, 112], "recurs": 9, "search": [9, 35], "given": [9, 16, 18, 34, 74, 110, 156, 169, 214, 521, 542, 568], "cx": [9, 36, 568, 578], "By": [9, 569, 573, 576], "upstream": 11, "break": [11, 26, 568], "195": 11, "typo": 11, "sop": [11, 14, 16, 18, 20, 25, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 74, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 111, 112, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 206, 207, 208, 212, 222, 223, 224, 225, 226, 227, 231, 234, 235, 237, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 519, 520, 521, 537, 568, 569, 570, 573, 574, 576, 578], "class": [11, 13, 14, 16, 18, 20, 26, 29, 31, 33, 34, 35, 36, 37, 39, 40, 44, 45, 53, 71, 74, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 234, 235, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 537, 542, 568, 569, 570, 573, 574, 578], "bad": [11, 35, 36, 37, 38], "role": [11, 13, 36, 74, 82, 111, 112, 113, 206, 212, 222, 239, 253, 254, 255, 569, 574, 575, 577], "negoti": [11, 13, 18, 26, 34, 36, 74, 76, 88, 91, 96, 105, 106, 109, 110, 111, 112, 113, 190, 191, 192, 197, 206, 207, 208, 212, 217, 218, 219, 220, 222, 223, 224, 225, 239, 253, 254, 255, 537, 568, 569, 576, 577], "requestor": [11, 12, 13, 16, 21, 26, 36, 91, 105, 106, 110, 111, 112, 113, 172, 192, 204, 210, 211, 212, 214, 222, 225, 239, 253, 254, 255, 526, 569, 573, 574, 575, 577], "v1": [11, 12, 13, 14, 16, 18, 41, 574], "should": [11, 12, 13, 16, 26, 33, 34, 35, 53, 74, 80, 81, 84, 92, 99, 101, 111, 112, 190, 214, 519, 526, 527, 530, 533, 568, 569, 570, 573, 574, 576, 578], "consist": [11, 34, 53, 62, 192, 221, 568, 575, 578], "applicationent": [11, 112, 526, 528, 530, 537], "renam": 11, "scu_supported_sop": 11, "scp_supported_sop": 11, "transfer_syntax": [11, 12, 111, 203, 204, 209, 239, 240, 252, 573, 578], "presentation_contexts_scu": 11, "presentation_contexts_scp": 11, "scu_sop_class": 11, "scp_sop_class": 11, "bind_addr": [11, 13], "argument": [11, 12, 13, 16, 18, 89, 93, 95, 97, 98, 101, 102, 104, 107, 111, 112, 526, 527, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "network": [11, 12, 18, 26, 41, 111, 112, 155, 568, 574, 575], "adapt": [11, 569], "add_supported_context": [11, 12, 31, 33, 35, 36, 37, 38, 39, 40, 111, 519, 568, 572, 573, 574, 576, 578], "supported_context": [11, 26, 36, 37, 39, 111, 113, 573, 578], "remove_supported_context": [11, 111], "add_requested_context": [11, 12, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 111, 569, 573, 574, 578], "requested_context": [11, 26, 37, 39, 40, 111, 113, 573, 574, 578], "remove_requested_context": [11, 111], "verificationsopclass": [11, 26], "storagesopclasslist": 11, "queryretrievesopclasslist": 11, "verificationpresentationcontext": [11, 40, 111], "storagepresentationcontext": [11, 18, 36, 37, 39, 111, 573, 574], "queryretrievepresentationcontext": 11, "basicworklistmanagmentpresentationcontext": 11, "replac": [11, 14], "them": [11, 34, 47, 112, 149, 568, 569, 575, 578], "service_class": [11, 463, 519, 520, 537, 568, 572], "servic": [11, 12, 13, 14, 16, 18, 32, 52, 54, 63, 64, 65, 67, 74, 82, 88, 89, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 207, 208, 213, 214, 223, 224, 225, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 519, 520, 527, 537, 542, 568, 569, 573, 577, 578], "sop_class": [11, 16, 18, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 111, 252, 253, 537, 568, 572, 573, 574, 576, 578], "three": [11, 33, 222, 572, 576, 578], "been": [11, 13, 14, 16, 20, 26, 33, 35, 36, 37, 47, 82, 89, 92, 93, 95, 98, 99, 100, 101, 104, 107, 109, 110, 111, 112, 113, 151, 156, 190, 191, 193, 194, 195, 196, 203, 205, 239, 521, 526, 547, 548, 549, 551, 552, 555, 558, 559, 560, 561, 565, 566, 568, 569, 572, 574, 578], "consolid": [11, 13], "basicworklistmanagementserviceclass": [11, 99, 112, 537], "reimplement": 11, "separ": [11, 197, 198, 209, 536, 568], "sopclass": [11, 111, 252, 253, 521], "now": [11, 12, 13, 14, 16, 18, 20, 26, 111, 112, 115, 568, 569, 571], "inherit": 11, "rather": [11, 12, 13, 14, 16, 18, 26, 111, 112, 527, 568], "than": [11, 12, 13, 14, 16, 18, 26, 38, 81, 85, 89, 104, 111, 112, 192, 217, 219, 220, 239, 525, 527, 558, 561, 568, 569, 573, 578], "util": [11, 12, 537], "presentationcontextmanag": 11, "maximumlengthnegoti": 11, "maximumlengthnotif": [11, 111, 113, 202, 212, 214], "implementationclassuidnegoti": 11, "implementationclassuidnotif": [11, 111, 113, 200, 212, 214], "implementationversionnamenegoti": 11, "implementationversionamenotif": 11, "serviceclass": [11, 13, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 519, 520], "refactor": 11, "do": [11, 255, 568, 569, 571, 574, 576], "work": [11, 13, 26, 41, 198, 569], "independ": [11, 562], "send_abort": [11, 110], "send_ap_abort": [11, 110], "send_reject": [11, 110], "send_releas": [11, 110], "send_request": [11, 110], "send_accept": [11, 110], "method": [11, 13, 14, 16, 18, 20, 34, 37, 50, 53, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 240, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 522, 525, 526, 527, 528, 529, 530, 569, 573, 574, 575, 576, 578], "negotiate_associ": [11, 110], "release_associ": [11, 12, 13], "serviceus": [11, 26, 110, 112, 537], "less": [11, 217], "acceptor": [11, 12, 13, 14, 16, 18, 26, 105, 110, 111, 112, 113, 172, 190, 191, 192, 203, 211, 212, 214, 222, 225, 239, 254, 255, 526, 528, 568, 569, 573, 574, 575, 577], "track": [11, 33, 556], "pynetdicom3": 11, "on_c_": 11, "callback": [11, 14], "45": [11, 369, 370, 371, 372, 552, 557, 564], "54": [11, 564], "106": [11, 86], "contribut": 11, "issu": [11, 112, 162, 163, 167, 168, 170, 171, 173, 174, 175, 177, 184, 225, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565], "pr": 11, "guid": [11, 537, 565, 568, 569, 575, 576], "pep8": 11, "conform": [11, 14, 16, 26, 28, 30, 34, 36, 39, 75, 89, 93, 98, 102, 104, 107, 156, 220, 568, 569], "pynetdicom_implementation_vers": [11, 156], "pynetdicom_implementation_uid": [11, 156], "variabl": [11, 14, 26, 53, 62, 190, 192, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 522, 537, 572], "old": [11, 14, 26], "ones": [11, 568], "implementation_version_nam": [11, 111, 113, 201, 212, 219], "implementation_class_uid": [11, 111, 113, 200, 212, 214, 218], "dure": [11, 13, 14, 16, 18, 26, 36, 111, 113, 156, 164, 182, 183, 218, 220, 539, 568, 569, 573, 575], "per": [11, 13, 14, 16, 18, 34, 39, 206, 207, 208, 224, 239, 255, 573, 574, 575], "api": [11, 569], "refer": [11, 34, 79, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 115, 139, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 525, 536, 546, 568, 569, 575], "49": [11, 564], "relev": [11, 32, 41, 99, 112, 246, 264, 266, 553, 569], "hang": [11, 41, 92, 99, 101, 112, 232, 238, 259, 553], "substanc": [11, 41, 99, 112, 227, 249, 266, 546, 553], "palett": [11, 41, 92, 99, 101, 112, 229, 238, 257, 553], "templat": [11, 38, 41, 89, 92, 99, 101, 112, 233, 238, 260, 546, 553, 561], "defin": [11, 14, 26, 31, 34, 38, 41, 79, 82, 92, 99, 101, 112, 113, 197, 198, 208, 209, 224, 230, 238, 258, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 575, 578], "system": [11, 14, 32, 33, 41, 102, 231, 269, 553, 562, 568, 569, 576], "event": [11, 13, 14, 16, 18, 20, 26, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 76, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 148, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 218, 219, 227, 250, 268, 272, 273, 274, 275, 276, 522, 526, 527, 530, 537, 542, 553, 572, 573, 575, 577], "action": [11, 34, 41, 89, 93, 100, 104, 112, 115, 145, 156, 159, 168, 169, 170, 171, 172, 173, 174, 175, 188, 268, 271, 272, 274, 275, 276, 537, 574, 576], "full": [11, 89, 558, 575], "asynchron": [11, 91, 113, 199, 212, 217, 569, 574, 575, 576], "window": [11, 13, 26, 85, 91, 113, 199, 212, 217, 569, 574, 575], "howev": [11, 30, 76, 82, 85, 99, 101, 112, 568, 569, 574, 575, 578], "doe": [11, 12, 89, 92, 93, 99, 101, 104, 107, 111, 112, 546, 547, 548, 549, 551, 552, 558, 559, 560, 561, 562, 565, 566, 568], "ident": [11, 96, 106, 109, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 190, 210, 211, 212, 217, 222, 223, 224, 225, 568, 569, 575, 576, 577], "common": [11, 33, 34, 74, 105, 113, 207, 212, 223, 225, 522, 569, 574, 575, 576], "null": [11, 206, 207, 208], "trail": [11, 26, 83, 156, 192, 206, 207, 208, 573], "pad": [11, 18, 26, 83, 156, 192, 197, 198, 206, 207, 208, 209], "handl": [11, 12, 14, 16, 18, 22, 26, 31, 35, 36, 37, 38, 39, 40, 41, 42, 110, 156, 225, 526, 528, 544, 568, 574, 575], "longer": [12, 14, 18, 25, 26, 75, 82, 89, 104, 111, 112, 192, 219, 526, 566, 569], "list": [12, 13, 14, 18, 25, 26, 31, 33, 34, 35, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 141, 142, 143, 144, 146, 149, 150, 153, 155, 156, 159, 190, 192, 195, 202, 204, 207, 212, 214, 221, 223, 239, 252, 254, 255, 526, 530, 533, 537, 554, 555, 556, 558, 562, 566, 568, 569, 573, 574, 575, 576, 578], "keyword": [12, 13, 16, 18, 26, 34, 37, 101, 110, 111, 112, 151, 152, 519, 526, 527, 568, 569, 572, 573, 574, 576, 578], "build_context": [12, 39, 573, 574, 578], "length": [12, 14, 18, 28, 55, 57, 60, 83, 113, 115, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 220, 568, 575], "193": 12, "dimsemessag": [12, 13, 115], "subclass": [12, 252, 253, 520, 521, 526, 530, 569], "creation": [12, 16, 34, 41, 89, 93, 98, 102, 112, 235, 271, 539, 544, 553, 566, 573], "primitive_to_messag": 12, "thread": [12, 13, 14, 26, 111, 112, 155, 530, 532, 569, 574], "safe": 12, "137": 12, "collis": [12, 16, 184], "being": [12, 13, 14, 15, 16, 18, 26, 28, 53, 91, 94, 100, 105, 106, 109, 112, 115, 156, 519, 534, 535, 569, 575, 578], "correctli": [12, 18, 28, 568, 569, 575], "269": 12, "bug": [12, 18, 522, 571], "fsm": [12, 13, 14, 100, 155, 537], "ar_8": 12, "aa_7": 12, "dul": [12, 14, 26, 52, 88, 103, 110, 112, 115, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 214, 537, 576], "primit": [12, 13, 26, 42, 47, 52, 64, 66, 88, 96, 112, 113, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 168, 173, 185, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 527, 529, 537, 576], "270": 12, "endlessli": 12, "didn": 12, "close": [12, 13, 17, 18, 108, 115, 161, 162, 163, 164, 165, 166, 171, 179, 181, 526, 527, 569, 574, 576], "wa": [12, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 141, 142, 143, 144, 156, 225, 547, 548, 549, 551, 552, 559, 560, 566, 568, 569, 573], "still": [12, 76, 82, 569, 573], "read": [12, 26, 39, 89, 92, 93, 98, 99, 101, 104, 107, 112, 527, 568, 574], "272": 12, "select_timeout": [12, 527], "how": [12, 38, 224, 225, 568, 569, 570, 572, 573, 574, 575, 578], "long": [12, 214], "block": [12, 13, 34, 37, 39, 40, 111, 115, 155, 526, 527, 568, 569, 574], "260": 12, "improv": [12, 13, 16, 18, 111], "cpu": 12, "usag": [12, 34, 80, 81, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 574], "idl": [12, 112, 155, 161, 162, 163, 164, 172, 179, 181], "60": [12, 39, 111, 564, 569], "quit": [12, 13], "deprec": [12, 13, 14, 16, 18], "stop": [12, 13, 14, 18, 37, 111, 155, 164, 173, 181, 525, 574], "context_id": [12, 112, 115, 196, 203, 204, 205, 239, 240, 578], "_global": 12, "frequent": [12, 569], "global": 12, "constant": [12, 522], "validate_ae_titl": 12, "require_calling_aet": [12, 111], "take": [12, 13, 14, 26, 100, 111, 115, 527, 568, 569, 572, 573, 578], "require_called_aet": [12, 111], "bool": [12, 75, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110, 111, 112, 113, 115, 151, 152, 155, 156, 157, 158, 211, 222, 225, 239, 253, 254, 255, 525, 527, 534, 535, 536], "fals": [12, 13, 14, 34, 36, 37, 39, 75, 77, 78, 79, 80, 81, 82, 83, 92, 99, 101, 109, 110, 111, 112, 115, 151, 152, 155, 156, 157, 158, 222, 225, 239, 253, 525, 527, 535, 536, 568, 573, 574, 578], "184": 12, "is_releas": [12, 13, 112], "is_release_request": [12, 110], "negotiate_releas": [12, 110], "expir": [13, 18, 115, 155, 161, 525, 569, 574], "286": 13, "propag": 13, "actual": [13, 34, 35, 36, 112, 156, 568, 569], "timer": [13, 26, 85, 155, 161, 164, 167, 173, 181, 537], "properli": [13, 14, 17, 18], "within": [13, 34, 37, 53, 62, 89, 92, 93, 98, 99, 101, 102, 104, 107, 112, 115, 542, 562, 571, 574, 575, 576], "yield": [13, 16, 18, 35, 36, 37, 38, 92, 99, 101, 111, 112, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566, 576], "expect": [13, 26, 85, 569, 576], "119": 13, "befor": [13, 18, 26, 111, 155, 156, 197, 198, 209, 525, 568, 574, 576], "120": 13, "293": 13, "_config": [13, 14, 16, 18, 537, 576], "abil": [13, 18, 26, 101], "skip": [13, 33, 35, 36, 37, 39, 156, 534, 568], "decod": [13, 16, 18, 26, 39, 74, 80, 81, 89, 92, 93, 96, 98, 99, 101, 104, 107, 112, 115, 156, 159, 190, 531, 537, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 575, 576], "step": [13, 14, 16, 32, 34, 36, 39, 41, 89, 93, 98, 99, 102, 104, 112, 172, 237, 242, 250, 273, 276, 553, 573], "decode_store_dataset": [13, 14, 16], "282": 13, "robust": [13, 18], "transport": [13, 52, 108, 111, 112, 155, 168, 181, 537], "42": [13, 190, 192, 479, 480, 481, 546, 564, 565], "associationsocket": [13, 18, 26, 110, 112, 155, 537], "wrap": [13, 111, 155, 526, 527, 530, 532, 574], "client": [13, 111, 526, 528, 530, 544, 574], "socket": [13, 17, 18, 94, 110, 111, 112, 155, 526, 527, 528, 530, 573, 574], "integr": [13, 527], "machin": [13, 16, 26, 41, 89, 93, 95, 98, 100, 102, 104, 112, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 245, 274, 525, 527, 537, 553, 576], "particular": [13, 26, 37, 197, 209, 547, 568, 575], "emit": [13, 527], "evt17": [13, 163, 164, 181, 527, 529], "204": 13, "associationserv": [13, 14, 18, 26, 34, 111, 528, 530, 537, 576], "threadedassociationserv": [13, 111, 528, 537, 574], "ae_1": 13, "evt2": [13, 169, 529], "trivial": 13, "manner": [13, 92, 99, 112, 574], "start_serv": [13, 16, 31, 33, 34, 35, 36, 37, 38, 39, 40, 111, 568, 572, 573, 574, 576, 578], "shutdown": [13, 37, 39, 111, 526, 527, 574], "server": [13, 17, 109, 111, 206, 210, 225, 526, 528, 530, 544, 573, 574], "mai": [13, 18, 30, 31, 33, 34, 36, 74, 85, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 111, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 190, 197, 209, 212, 217, 219, 222, 223, 224, 225, 239, 519, 525, 534, 535, 536, 554, 566, 568, 569, 571, 572, 573, 574, 575, 578], "tl": [13, 18, 21, 26, 111, 526, 527, 530, 569], "via": [13, 37, 89, 92, 101, 111, 112, 566, 568, 574, 578], "tls_arg": [13, 111, 527, 574], "ssl_context": [13, 111, 526, 530, 574], "175": 13, "over": [13, 18, 34, 36, 37, 39, 40, 92, 94, 101, 112, 569], "181": 13, "dimseserviceprovid": [13, 14, 16, 47, 112], "get_msg": [13, 115], "receive_primit": [13, 115], "peek_msg": [13, 115], "msg_queue": [13, 115], "significantli": 13, "cancel": [13, 26, 35, 36, 37, 89, 92, 99, 101, 112, 115, 139, 156, 522, 547, 548, 549, 551, 552, 555, 559, 560, 561, 565, 566], "is_cancel": [13, 35, 36, 37, 92, 99, 101, 156, 159], "whether": [13, 18, 37, 111, 225, 569, 573, 575], "ha": [13, 20, 26, 31, 33, 35, 36, 37, 38, 40, 47, 53, 84, 89, 92, 93, 95, 98, 99, 100, 101, 104, 107, 109, 110, 111, 112, 113, 115, 151, 155, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 254, 255, 521, 525, 526, 527, 547, 548, 549, 551, 552, 555, 557, 558, 559, 560, 561, 564, 565, 566, 568, 569, 574, 575, 576], "pass": [13, 16, 18, 26, 27, 37, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 159, 526, 530, 532, 574, 576], "on_c_get": [13, 16], "on_c_find": [13, 16], "on_c_mov": [13, 16], "callabl": [13, 84, 111, 112, 159, 526, 530, 532, 568, 576], "function": [13, 14, 18, 31, 34, 38, 41, 84, 111, 112, 115, 159, 214, 225, 526, 530, 532, 537, 568, 572, 573, 576, 578], "threadtyp": 13, "timestamp": [13, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 156, 576], "build_rol": [13, 36, 574, 578], "properti": [13, 14, 16, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 110, 111, 112, 113, 115, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 463, 525, 526, 527, 528, 529, 569, 573, 574, 575, 576], "local_socket": [13, 14], "active_associ": [13, 111, 526], "activ": [13, 85, 111, 569, 571, 574], "synchron": 13, "until": [13, 112, 115, 155, 156, 525, 526, 527, 569, 574], "108": [13, 86], "receive_msg": 13, "send_c_cancel_get": [13, 14], "send_c_cancel_find": [13, 14], "send_c_cancel_mov": [13, 14], "send_c_cancel": [13, 26, 112], "on_c_get_cancel": 13, "on_c_find_cancel": 13, "on_c_move_cancel": 13, "except": [14, 16, 26, 37, 89, 92, 93, 98, 99, 101, 104, 107, 115, 156, 159, 522, 535, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569, 573, 576, 578], "rais": [14, 16, 89, 92, 93, 95, 98, 99, 101, 104, 107, 110, 111, 112, 113, 156, 159, 188, 196, 205, 217, 218, 219, 220, 222, 223, 224, 225, 521, 535, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 573, 574, 576], "gener": [14, 31, 33, 38, 74, 112, 113, 207, 223, 225, 226, 233, 238, 246, 525, 529, 542, 552, 568, 569, 573, 574, 575, 578], "aa_4": 14, "aa_8": 14, "iter": [14, 92, 99, 101, 112], "just": [14, 18, 34, 39, 568, 569, 574], "re": [14, 36, 39, 41, 75, 156, 197, 209, 568, 569, 573, 574, 575, 578], "315": 14, "nullhandl": 14, "321": 14, "unifi": [14, 16, 41, 89, 93, 98, 99, 102, 104, 112, 250, 276, 553], "memori": [14, 26, 80, 81, 93, 104, 112, 558], "leak": [14, 26], "caus": [14, 63, 67, 568], "keep": [14, 569, 571], "around": [14, 39, 85], "thei": [14, 75, 107, 113, 197, 198, 206, 209, 222, 542, 568, 569, 573, 575, 578], "di": 14, "328": 14, "handler": [14, 16, 18, 24, 26, 31, 33, 34, 35, 36, 37, 38, 39, 40, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 156, 159, 267, 526, 528, 530, 537, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 573, 577], "_handler": 14, "unbind": [14, 112, 526, 574, 576], "get_handl": [14, 18, 112, 526], "get_ev": [14, 112, 526], "assoc": [14, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 155, 156, 159, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 527, 569, 573, 574, 576, 578], "enforce_uid_conform": [14, 536, 537], "determin": [14, 18, 35, 36, 112, 527, 568], "meet": [14, 26, 30, 38, 573], "rule": [14, 197, 198, 204, 206, 207, 208, 209, 239, 536, 569, 575, 578], "316": 14, "322": 14, "56": [14, 564], "init": 14, "maximum_pdu_s": [14, 39, 111, 115], "due": [15, 16, 18, 26, 65, 92, 99, 101, 111, 112, 225, 522, 569], "valid": [15, 18, 26, 74, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 113, 188, 214, 267, 519, 534, 535, 536, 537, 542, 548, 549, 551, 552, 559, 560, 566, 573, 575], "transfer": [15, 16, 18, 28, 35, 36, 39, 74, 86, 87, 111, 112, 151, 152, 156, 186, 187, 190, 192, 203, 204, 209, 221, 239, 252, 254, 255, 537, 546, 557, 564, 568, 569, 573, 578], "342": [15, 16], "were": [16, 18, 92, 99, 101, 112, 149, 559, 560, 569, 573], "failur": [16, 25, 26, 33, 35, 36, 37, 38, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 225, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574], "checkpoint": 16, "reactor": [16, 26, 112, 155, 528], "prevent": 16, "race": [16, 18], "condit": [16, 18, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 213, 214, 215, 216, 221, 573], "send_": [16, 18, 569], "move_destin": [16, 37, 101, 156], "evt": [16, 18, 31, 33, 34, 35, 36, 37, 38, 39, 40, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 156, 267, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 572, 573, 574, 576], "evt_c_mov": [16, 18, 37, 101, 157, 542, 548, 549, 551, 552, 559, 560, 574, 576], "action_typ": [16, 89, 112, 156], "evt_n_act": [16, 89, 157, 574, 576], "event_typ": [16, 98, 112, 156], "evt_n_event_report": [16, 34, 98, 157, 574, 576], "353": 16, "meta_uid": [16, 34, 112], "send_n_": [16, 20], "meta": [16, 34, 36, 39, 81, 107, 112, 156, 206, 222, 241, 568, 578], "approv": [16, 41, 92, 99, 101, 112, 238, 243, 249, 262, 553], "327": 16, "notif": [16, 33, 34, 37, 40, 41, 93, 98, 112, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 158, 159, 218, 219, 220, 234, 237, 242, 526, 537, 553, 556, 568, 577], "media": [16, 41, 89, 93, 98, 102, 112, 156, 235, 236, 271, 553, 568], "verif": [16, 26, 32, 41, 89, 93, 95, 97, 98, 102, 104, 111, 112, 245, 251, 252, 267, 274, 553, 569, 573, 574, 575, 576, 578], "commit": [16, 41, 89, 98, 247, 275, 553], "361": 16, "invalid": [16, 30, 31, 33, 35, 36, 37, 38, 39, 40, 89, 92, 93, 95, 98, 101, 102, 104, 107, 110, 112, 144, 160, 166, 167, 215, 542, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 575], "0000": [16, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 156, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569], "1030": 16, "origin": [16, 25, 26, 92, 101, 112, 144, 255, 532, 559, 560], "on_c_stor": 16, "on_c_echo": 16, "on_n_get": 16, "on_async_ops_window": 16, "on_sop_class_common_extend": 16, "on_sop_class_extend": 16, "on_user_ident": 16, "on_association_accept": 16, "on_association_reject": 16, "on_association_releas": 16, "on_association_abort": 16, "on_send_dimse_messag": 16, "on_receive_dimse_messag": 16, "send_c_find": [16, 18, 30, 35, 38, 99, 112, 574], "send_c_get": [16, 18, 36, 92, 112, 574], "send_c_mov": [16, 18, 37, 101, 112, 574], "query_model": [16, 26, 112], "string": [16, 18, 74, 109, 111, 112, 113, 143, 153, 154, 190, 196, 197, 198, 201, 203, 205, 209, 211, 214, 225, 239, 531, 533, 534, 568], "348": 16, "descript": [16, 33, 140, 141, 142, 143, 144, 157, 158, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 542, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576], "382": [17, 18], "last": [18, 197, 198, 209, 568], "seriou": 18, "year": 18, "394": 18, "abl": [18, 209, 568, 569, 572, 575, 578], "414": 18, "implantationplansrdocumentstorag": 18, "implantationplansrstorag": [18, 564], "436": 18, "exchang": [18, 47, 53, 62, 67, 207, 208, 223, 224, 225, 568, 569, 575, 576], "435": 18, "propos": [18, 36, 111, 113, 204, 214, 239, 253, 254, 569, 573, 574, 575, 578], "445": 18, "worklist": [18, 32, 33, 41, 99, 112, 228, 256, 553, 566], "462": 18, "invalideventerror": 18, "two": [18, 34, 44, 45, 64, 66, 111, 113, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 214, 218, 219, 255, 568, 569, 573, 575, 576], "trigger": [18, 88, 90, 94, 100, 103, 108, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 537, 568], "460": 18, "encod": [18, 39, 53, 61, 74, 81, 96, 106, 109, 112, 115, 151, 155, 156, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 531, 537, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566, 568, 569, 575, 576, 578], "482": 18, "use_short_dimse_aet": [18, 537], "charact": [18, 75, 140, 141, 142, 143, 144, 153, 192, 197, 198, 201, 209, 214, 219, 536, 573, 575], "403": 18, "hasn": [18, 111, 572, 575, 576], "rj": [18, 26, 52, 53, 171, 173, 175, 191, 214, 569], "408": 18, "message_id": [18, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 156], "well": [18, 31, 34, 537, 569, 574, 575, 576, 578], "intervent": [18, 112, 157, 159, 526, 537, 568, 574, 577], "2019e": 18, "424": 18, "allstoragepresentationcontext": [18, 39, 568, 573], "overhaul": 18, "app": [18, 24, 28, 214], "toi": [18, 31, 33, 35, 36, 37, 38, 574], "invok": [18, 91, 112, 113, 199, 217], "command": [18, 26, 34, 196, 205, 569, 571], "line": [18, 568, 569], "appnam": 18, "g": [18, 34, 209, 575], "extra": [18, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 526, 530, 574, 576], "evt_nam": 18, "arg": [18, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 526, 530, 574], "447": 18, "make_serv": [18, 111], "453": 18, "request_handl": [18, 526, 530], "hook": [18, 159], "455": 18, "customis": [18, 26, 74, 84, 101, 522], "conveni": [18, 113, 573, 578], "compar": [18, 111], "454": 18, "requesthandl": [18, 537], "prefer": 18, "exact": [18, 81, 99, 111, 112], "472": 18, "log_request_identifi": [18, 537], "log_response_identifi": [18, 537], "control": [18, 37, 42, 53, 62, 110, 112, 196, 205, 573], "pretty_dataset": 18, "pretty_el": 18, "pretti": [18, 153, 154, 568], "output": [18, 533, 568, 569], "kwarg": [18, 37, 101, 111], "dict": [18, 37, 84, 101, 105, 106, 112, 113, 115, 156, 159, 212, 254, 255], "initi": [18, 26, 34, 54, 93, 101, 112, 173, 192, 194, 214, 215, 555, 569, 575], "directli": [18, 26, 39, 568, 578], "offici": [18, 575], "immedi": [18, 155], "430": 18, "abort_typ": [18, 110], "is_abort": [18, 110, 112], "tupl": [18, 27, 74, 84, 89, 91, 93, 98, 99, 101, 102, 104, 109, 111, 112, 113, 115, 214, 221, 239, 254, 255, 526, 527, 528, 529, 530, 568, 573, 574, 576], "encode_el": 18, "default_transfer_syntax": [18, 111], "openssl": [18, 574], "364": 18, "switch": 19, "493": 19, "push": [20, 247, 250, 566], "watch": [20, 250, 566], "509": 20, "ssl": [21, 26, 111, 526, 527, 530, 574], "528": [21, 26], "reserv": [22, 28, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 575], "0x01": [22, 53, 110, 190, 192, 239, 255], "561": 22, "previou": [23, 26, 33, 93, 104, 112, 156, 558, 568], "final": [23, 25, 26, 33, 89, 92, 96, 99, 101, 112, 566, 568, 578], "571": [23, 26], "579": 24, "581": 24, "miss": [24, 33, 93, 104, 112, 522, 554, 555, 556, 558, 562, 566, 568], "583": 24, "577": [25, 26], "541": [25, 26], "major": 26, "simpli": [26, 34], "space": [26, 83, 156, 190, 192, 573], "strip": 26, "overlai": 26, "sampl": 26, "curv": 26, "608": 26, "636": 26, "681": 26, "682": 26, "garbag": 26, "collect": [26, 112, 568], "669": 26, "721": 26, "653": 26, "send_c_stor": [26, 39, 81, 107, 112, 569, 574], "517": 26, "pars": [26, 156], "554": 26, "592": 26, "connection_timeout": [26, 111], "616": 26, "2021e": 26, "hint": 26, "diagnost": [26, 110, 189, 191, 214], "633": 26, "make": [26, 29, 35, 64, 82, 115, 255, 529, 563, 568, 569, 571, 574, 575], "easier": [26, 29, 255, 578], "535": 26, "codec": [26, 537], "611": 26, "515": 26, "549": 26, "windows_timer_resolut": [26, 537], "resolut": [26, 85], "620": 26, "pass_contextvar": [26, 532, 537], "contextu": [26, 79], "behavior": [26, 79], "store_send_chunked_dataset": [26, 112, 537], "chunk": [26, 80, 81], "reduc": [26, 39, 111], "store_recv_chunked_dataset": [26, 28, 107, 156, 537], "unrestricted_storage_servic": [26, 537], "unrestrict": 26, "505": 26, "651": 26, "network_timeout_respons": [26, 112], "normal": [26, 34, 110, 112], "expiri": [26, 112, 525], "619": 26, "minimum": [26, 34, 85, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 111, 112, 113, 558, 568, 576], "680": [26, 575], "dulserviceprovid": [26, 52, 110, 112, 115, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "t_connect": [26, 27, 527, 537], "revert": 27, "test": [28, 33, 34, 190, 255, 569, 574], "746": 28, "756": 28, "785": 28, "sanit": 28, "filenam": [28, 36, 39], "823": 28, "preliminari": 28, "register_uid": [29, 572], "regist": [29, 41, 197, 209, 519, 570, 575], "privat": [29, 82, 197, 209, 519, 572, 575, 578], "public": [29, 82, 519, 572], "799": 29, "mechan": [30, 33, 35, 36, 37, 38, 39, 47, 563, 575], "access": [30, 38, 156, 547, 548, 549, 550, 551, 552, 559, 568, 569, 573, 576, 577], "anoth": [30, 40, 554, 557, 564, 568], "accomplish": [30, 35, 36, 37, 38, 39, 567, 575, 578], "utilis": [30, 34, 39], "ctscanner": 30, "5th": 30, "octob": 30, "2018": 30, "chang": [30, 81, 85, 89, 90, 101, 110, 111, 112, 113, 115, 151, 152, 156, 526, 527, 566, 568, 569, 571, 574], "statement": [30, 34, 569], "approach": [30, 35, 36, 37, 573], "veri": [30, 35, 36, 37, 38, 568, 569, 578], "similar": [30, 569, 573, 574], "bwm": 30, "differ": [30, 89, 111, 214, 267, 546, 569, 573, 574, 575, 576, 578], "import": [30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 111, 156, 217, 218, 219, 222, 223, 224, 225, 252, 519, 522, 568, 569, 572, 573, 574, 576, 577, 578], "debug_logg": [30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 568, 569, 574], "modalityworklistinformationfind": [30, 547], "scheduledprocedurestepsequ": 30, "scheduledstationaetitl": 30, "scheduledprocedurestepstartd": 30, "20181005": 30, "is_establish": [30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 111, 112, 569, 574], "0x": [30, 31, 33, 35, 36, 37, 38, 39, 40], "04x": [30, 31, 33, 35, 36, 37, 38, 39, 40], "els": [30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 532, 569], "out": [30, 31, 33, 35, 36, 37, 38, 39, 40, 92, 93, 99, 101, 104, 107, 112, 115, 155, 547, 548, 549, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569], "never": [30, 31, 33, 35, 36, 37, 38, 39, 40, 525, 526, 527, 569], "subsystem": 31, "displaysystem": [31, 550], "displaysysteminst": 31, "code_to_categori": [31, 33, 537], "attributelist": [31, 146, 149, 150], "attr_list": [31, 33, 34], "send_n_get": [31, 34, 102, 112, 574], "0x0008": 31, "0x0070": 31, "known": [31, 34, 37, 101, 112, 537, 569], "succeed": [31, 33, 39, 40, 529], "categori": [31, 33, 89, 92, 93, 98, 99, 102, 104, 112, 523, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569], "repres": [31, 33, 35, 36, 37, 38, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 199, 209, 568, 575, 578], "0070": 31, "evt_n_get": [31, 102, 157, 574, 576], "my_cod": [31, 573], "create_attribute_list": 31, "def": [31, 33, 34, 35, 36, 37, 38, 39, 40, 84, 522, 568, 572, 573, 574, 576], "handle_get": [31, 36], "attr": [31, 156, 159], "attributeidentifierlist": [31, 149], "outsid": [31, 38, 93, 104, 112, 225, 558, 573], "scope": [31, 38, 225, 573, 575], "we": [31, 34, 35, 36, 37, 39, 40, 160, 255, 568, 569, 571, 574, 576], "pretend": 31, "evt_handl": [31, 33, 34, 35, 36, 37, 38, 39, 40, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 526, 530, 568, 572, 573, 574, 576], "through": [33, 35, 36, 37, 38, 64, 66, 214, 568, 569, 573, 574, 575, 576, 578], "notifi": [33, 211, 554, 568, 569, 576], "usual": [33, 37, 82, 112, 190, 568, 569, 571, 575, 576, 578], "combin": [33, 89, 104, 112, 558, 573, 575], "ri": 33, "pac": 33, "typic": [33, 569, 578], "generate_uid": [33, 34], "modalityperformedprocedurestep": [33, 556], "ct_study_uid": 33, "mpps_instance_uid": 33, "build_attr_list": 33, "scheduledstepattributessequ": 33, "step_seq": 33, "studyinstanceuid": [33, 35, 36, 37], "referencedstudysequ": 33, "accessionnumb": 33, "requestedprocedureid": 33, "requestedproceduredescript": 33, "scheduledprocedurestepid": 33, "scheduledprocedurestepdescript": 33, "scheduledprocedureprotocolcodesequ": 33, "123456": 33, "patientbirthd": 33, "20000101": 33, "patientsex": 33, "referencedpatientsequ": 33, "performedprocedurestepid": 33, "performedstationaetitl": 33, "somea": 33, "performedstationnam": 33, "station": 33, "performedloc": 33, "performedprocedurestepstartd": 33, "performedprocedurestepstarttim": 33, "1200": 33, "performedprocedurestepstatu": 33, "IN": [33, 89, 104, 112, 566], "progress": [33, 89, 104, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 555, 566, 569], "performedprocedurestepdescript": 33, "performedproceduretypedescript": 33, "performedprocedurecodesequ": 33, "performedprocedurestependd": 33, "performedprocedurestependtim": 33, "studyid": 33, "performedprotocolcodesequ": 33, "performedseriessequ": 33, "send_n_creat": [33, 34, 93, 112, 574], "modif": [33, 93, 104, 112, 150, 156, 159, 566], "0040": 33, "0252": 33, "continu": [33, 92, 99, 101, 112, 522, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566, 568, 569], "seri": [33, 35, 36, 37, 575], "ten": 33, "ct_series_uid": 33, "ct_instance_uid": 33, "ii": [33, 92, 99, 101, 112], "rang": [33, 93, 104, 112, 542, 554, 555, 556, 558, 562, 566, 568], "build_mod_list": 33, "series_inst": 33, "sop_inst": 33, "series_seq": 33, "performingphysiciannam": 33, "protocolnam": 33, "operatornam": 33, "seriesinstanceuid": [33, 36, 37], "seriesdescript": 33, "referencedimagesequ": 33, "img_seq": 33, "img_d": 33, "referencedsopclassuid": [33, 34], "referencedsopinstanceuid": [33, 34], "append": [33, 35, 36, 37, 38, 156, 239, 533, 574], "referencednonimagecompositesopinstancesequ": 33, "final_d": 33, "1300": 33, "again": [33, 569], "send_n_set": [33, 34, 104, 112, 574], "evt_n_creat": [33, 93, 157, 574, 576], "evt_n_set": [33, 104, 157, 574, 576], "managed_inst": 33, "handle_cr": 33, "must": [33, 34, 37, 38, 55, 57, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 111, 112, 115, 212, 214, 216, 218, 220, 225, 519, 568, 569, 572, 573, 574, 575, 576, 578], "req": [33, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 214, 239, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 568], "affectedsopinstanceuid": [33, 39, 144, 145, 146, 147, 148, 149, 150, 568], "0x0106": [33, 93, 104, 112, 554, 555, 556, 558, 562, 566], "duplic": [33, 89, 93, 95, 97, 98, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "0x0111": [33, 93, 554, 555, 556, 558, 562, 566], "attribute_list": [33, 93, 112, 156, 159], "0x0120": [33, 93, 554, 555, 556, 558, 562, 566], "upper": [33, 53, 61, 62, 65, 112, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 525, 537, 569], "annex": [33, 38, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 112, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 217, 218, 219, 220, 222, 223, 224, 225, 239, 564, 569, 573], "sopclassuid": [33, 34], "sopinstanceuid": [33, 34, 36, 39, 568, 572], "handle_set": 33, "requestedsopinstanceuid": [33, 145, 147, 149, 150], "0x0112": [33, 89, 95, 98, 102, 104, 112, 546, 550, 555, 556, 558, 562, 563, 566], "mod_list": 33, "facilit": [34, 546, 547, 548, 549, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 569], "There": [34, 38, 93, 104, 112, 558, 568, 569, 573, 574, 575, 578], "shall": [34, 35, 36, 55, 57, 60, 63, 64, 65, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 190, 197, 198, 201, 209, 213, 214, 215, 216, 221, 222, 225, 575], "film": [34, 89, 93, 104, 112, 241, 558, 575], "session": [34, 89, 93, 104, 112, 214, 241, 558], "box": [34, 89, 93, 104, 112, 241, 558], "greyscal": 34, "printer": [34, 93, 104, 112, 241, 558], "describ": [34, 191, 203, 569], "sheet": 34, "area": [34, 568], "colour": 34, "monitor": [34, 525, 569], "under": [34, 35, 36, 37, 38, 89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 115, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 546, 568, 571], "job": [34, 89, 241, 558, 575], "execut": [34, 188], "automat": [34, 568, 569], "characterist": [34, 249], "lut": [34, 241, 558], "each": [34, 35, 36, 53, 111, 112, 196, 200, 201, 202, 205, 206, 214, 218, 219, 220, 221, 222, 223, 224, 239, 254, 526, 530, 533, 536, 547, 568, 569, 573, 575, 576, 578], "termin": [34, 92, 99, 101, 112, 522, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566, 568, 569], "hierarchi": [34, 89, 558], "next": [34, 37, 100, 115, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "evt_n_report": 34, "bound": [34, 40, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 159, 267, 526, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 574, 576], "minim": [34, 573], "manual": [34, 573], "mandatori": [34, 53, 54, 55, 56, 57, 58, 59, 60, 62, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 213, 214, 215, 216, 221, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567], "onto": 34, "a4": 34, "page": [34, 89, 558, 568, 573], "life": 34, "would": [34, 111, 569, 574], "medium": [34, 112, 141, 142, 143, 144], "layout": 34, "etc": [34, 76, 156, 209, 564, 575], "alwai": [34, 53, 61, 82, 91, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 267, 525, 568, 574, 578], "sy": 34, "dcmread": [34, 35, 36, 37, 38, 39, 112], "basicgrayscaleprintmanagementmeta": [34, 558], "basicfilmsess": [34, 558], "basicfilmbox": [34, 558], "basicgrayscaleimagebox": [34, 558], "printerinst": 34, "build_sess": 34, "numberofcopi": 34, "printprior": 34, "mediumtyp": 34, "paper": 34, "filmdestin": 34, "somewher": 34, "filmsessionlabel": 34, "lo": 34, "memoryalloc": 34, "ownerid": 34, "sh": 34, "build_film_box": 34, "imagedisplayformat": 34, "filmorient": 34, "portrait": 34, "filmsizeid": 34, "referencedfilmsessionsequ": 34, "build_image_box": 34, "im": 34, "imageboxposit": 34, "zero": 34, "referencedimageboxsequ": 34, "samplesperpixel": 34, "photometricinterpret": 34, "row": 34, "bitsalloc": 34, "bitsstor": 34, "highbit": 34, "pixelrepresent": 34, "handle_n_": 34, "2110": 34, "ensur": [34, 36, 39, 75, 568], "0x21100010": 34, "0x21100020": 34, "getattr": [34, 568], "printerstatu": 34, "readi": [34, 217, 218, 219, 220, 222, 223, 224, 225, 526, 527], "film_sess": 34, "film_box": 34, "image_box": 34, "action_repli": [34, 112], "send_n_act": [34, 89, 112, 574], "occur": [34, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 156, 159, 526, 530, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 568, 569, 574, 576], "send_n_delet": [34, 95, 112, 574], "tabl": [35, 111, 112, 169, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 576, 578], "specif": [35, 89, 93, 98, 99, 102, 104, 111, 112, 156, 197, 204, 207, 208, 224, 526, 542, 561, 568, 569, 575], "effect": [35, 36, 111], "individu": [35, 36, 575], "patientrootqueryretrieveinformationmodelfind": [35, 560], "variou": [35, 569], "1234567": [35, 36, 37, 38], "sopclassesinstudi": 35, "wai": [35, 36, 37, 38, 111, 568, 571, 573, 575, 576], "realiti": [35, 36, 37, 38], "probabl": [35, 36, 37, 38], "best": [35, 36, 37, 38], "databas": [35, 36, 37, 38], "taken": [35, 36, 37, 115, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221], "evt_c_find": [35, 38, 99, 157, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566, 574, 576], "handle_find": [35, 38], "fdir": [35, 36, 37, 38], "fpath": [35, 36, 37, 38], "listdir": [35, 36, 37, 38], "join": [35, 36, 37, 38, 568], "0xc000": [35, 36, 37, 92, 99, 101, 107, 112, 522, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569], "inst": [35, 36, 37, 38], "0xfe00": [35, 36, 37, 92, 99, 101, 112, 522, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "vice": 36, "versa": 36, "belong": [36, 37, 82, 573], "go": [36, 39, 179, 181, 569], "recommend": [36, 39, 569, 571], "evt_c_stor": [36, 37, 39, 80, 107, 112, 156, 157, 542, 557, 564, 568, 572, 574, 576], "patientrootqueryretrieveinformationmodelget": [36, 560, 574], "handle_stor": [36, 37, 39, 522, 568, 572, 574, 576], "file_meta": [36, 39, 107, 156, 568, 572], "save": [36, 39, 107, 156, 568, 569], "save_a": [36, 39, 156, 522, 568, 572], "write_like_origin": [36, 39, 156, 568], "scp_role": [36, 111, 206, 222, 239, 253, 573, 574, 578], "suppli": [36, 92, 99, 111, 112, 527, 573, 574, 578], "uniqu": [36, 37, 568, 575], "abov": [36, 239, 573, 574], "ext_neg": [36, 111, 212, 574, 578], "evt_c_get": [36, 92, 157, 542, 548, 549, 551, 552, 559, 560, 574, 576], "total": [36, 37, 92, 197, 198, 209, 573, 575], "scu_rol": [36, 111, 206, 222, 239, 253, 573, 578], "know": [37, 568], "0xa801": [37, 101, 112, 522, 548, 549, 551, 552, 559, 560], "store_scp": [37, 574], "patientrootqueryretrieveinformationmodelmov": [37, 560], "rememb": [37, 569], "11120": 37, "our_store_scp": 37, "handle_mov": 37, "get_known_aet": 37, "known_aet_dict": 37, "try": [37, 111, 522, 527, 568, 569], "keyerror": 37, "unknown": [37, 82, 89, 101, 112, 522, 523, 548, 549, 551, 552, 559, 560, 566], "tailor": 37, "generalrelevantpatientinformationqueri": [38, 561], "contenttemplatesequ": 38, "tid": 38, "9007": 38, "9000": 38, "mappingresourc": 38, "dcmr": 38, "templateidentifi": 38, "Its": 38, "note": [38, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 239, 519, 574], "Not": [38, 95, 97, 101, 102, 107, 112, 213, 214, 215, 216, 221, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 562, 564, 566], "good": [38, 574], "everyth": [38, 569], "base": [38, 92, 101, 112, 520, 559, 560, 575], "off": [38, 115], "create_templ": 38, "elif": 38, "0xc100": [38, 112, 561], "essenc": 39, "want": [39, 255, 568, 569, 571, 574, 575], "look": [39, 568, 569], "Of": 39, "cours": 39, "rare": 39, "someon": 39, "inbuilt": [39, 40, 111], "mani": [39, 80, 81, 569, 575], "basi": [39, 573, 574], "mrimagestorag": [39, 564, 573, 578], "ct_context": 39, "mr_context": 39, "optimis": 39, "speed": 39, "increas": [39, 111, 254, 255], "25": [39, 193], "decreas": 39, "filewrit": [39, 156, 568], "write_file_meta_info": [39, 156, 568], "open": [39, 108, 156, 568, 569, 574, 576], "wb": [39, 156, 568], "preambl": [39, 568], "prefix": [39, 533, 568, 569], "dicm": [39, 156, 568], "getvalu": [39, 156, 568], "As": [39, 81, 91, 112, 239, 568, 569, 573, 575, 578], "interest": [39, 569, 571, 574], "anyth": [39, 568, 569, 574, 576], "zzzz": 39, "commun": [40, 111, 112, 155, 197, 200, 201, 206, 209, 218, 219, 220, 527, 544, 566, 567, 569, 575], "between": [40, 45, 47, 52, 53, 62, 64, 66, 112, 214, 218, 219, 224, 239, 567, 568, 569, 575, 576, 578], "mostli": 40, "troubleshoot": 40, "particularli": 40, "fundament": 40, "evt_pdu_recv": [40, 103, 158, 576], "evt_data_recv": [40, 94, 158, 576], "send_c_echo": [40, 97, 112, 569, 574], "reli": [40, 218, 219, 568], "evt_c_echo": [40, 97, 156, 157, 267, 574, 576], "your": [40, 41, 570, 571, 572, 573, 574], "own": [40, 196, 205, 569, 572, 573, 574, 575, 576], "handle_echo": [40, 576], "pure": 41, "easi": [41, 568], "instal": [41, 568, 569, 570], "intend": [41, 218, 219, 239, 569, 573, 574, 578], "overview": 41, "pynetdcom": 41, "concept": [41, 577], "cover": 41, "mpp": 41, "bundl": 41, "v2": 41, "task": [42, 547], "made": [42, 54, 55, 56, 57, 58, 59, 60, 79, 85, 112, 207, 568, 573, 574, 575], "represent": [44, 45, 112, 156, 157, 158, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 217, 218, 219, 220, 222, 223, 224, 225, 239, 240, 568, 573], "main": [44, 45, 86, 90, 112, 155, 568, 578], "dimse_primit": [47, 115, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 537], "c_cancel": [47, 115], "c_echo": [47, 97, 112, 115, 267], "c_find": [47, 99, 112, 115, 256, 263, 264, 266, 276], "c_get": [47, 92, 112, 115, 263], "c_move": [47, 101, 112, 115, 263], "c_store": [47, 107, 112, 115, 265], "n_action": [47, 89, 112, 115, 268, 271, 272, 274, 275, 276], "n_creat": [47, 93, 112, 115, 270, 271, 272, 273, 274, 276], "n_delet": [47, 95, 112, 115, 272, 274], "n_event_report": [47, 98, 112, 115, 272, 273, 274, 275, 276], "n_get": [47, 102, 112, 115, 269, 271, 272, 273, 274, 276], "n_set": [47, 104, 112, 115, 272, 273, 274, 276], "dimse_messag": [47, 115, 537], "c_cancel_rq": [47, 115], "c_echo_rq": [47, 96, 115], "c_echo_rsp": [47, 96, 115], "c_find_rq": [47, 96, 115], "c_find_rsp": [47, 96, 115], "c_get_rq": [47, 96, 115], "c_get_rsp": [47, 96, 115], "c_move_rq": [47, 96, 115], "c_move_rsp": [47, 96, 115], "c_store_rq": [47, 96, 115], "c_store_rsp": [47, 96, 115], "n_action_rq": [47, 96, 115], "n_action_rsp": [47, 96, 115], "n_create_rq": [47, 96, 115], "n_create_rsp": [47, 96, 115], "n_delete_rq": [47, 96, 115], "n_delete_rsp": [47, 96, 115], "n_event_report_rq": [47, 96, 115], "n_event_report_rsp": [47, 96, 115], "n_get_rq": [47, 96, 115], "n_get_rsp": [47, 96, 115], "n_set_rq": [47, 96, 115], "n_set_rsp": [47, 96, 115], "interact": 52, "pdu_primit": [52, 113, 115, 155, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 206, 207, 208, 210, 211, 253, 529, 537, 574, 578], "tf": [52, 53, 182, 183, 186, 187, 195], "rp": [52, 53, 177, 193], "pdu_item": [52, 190, 192, 217, 218, 219, 220, 222, 223, 224, 225, 537], "applicationcontextitem": 52, "presentationcontextitemrq": [52, 192, 255], "presentationcontextitemac": [52, 190, 255], "userinformationitem": [52, 190, 192], "abstractsyntaxsubitem": 52, "transfersyntaxsubitem": 52, "maximumlengthsubitem": [52, 220], "implementationclassuidsubitem": [52, 218], "implementationversionnamesubitem": [52, 219], "scp_scu_roleselectionsubitem": [52, 212, 222], "asynchronousoperationswindowsubitem": [52, 212, 217], "useridentitysubitemrq": [52, 212, 225], "useridentitysubitemac": [52, 212, 225], "sopclassextendednegotiationsubitem": [52, 212, 224], "sopclasscommonextendednegotiationsubitem": [52, 212, 223], "presentationdatavalueitem": [52, 195], "unit": [53, 62], "layer": [53, 61, 62, 65, 112, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 525, 537, 569], "construct": [53, 62], "fix": [53, 62, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 568], "seven": 53, "binari": 53, "prior": [53, 112, 113, 562, 578], "0x02": [53, 110, 190, 239, 255], "0x03": [53, 110, 191, 239, 255], "0x04": [53, 110, 195, 239, 255], "0x05": [53, 110, 194], "0x06": [53, 110, 189, 193], "0x07": [53, 110, 189], "exist": [55, 57, 89, 93, 99, 102, 104, 111, 112, 558, 562, 566, 568, 573, 574], "abnorm": [63, 65, 110], "indic": [64, 66, 91, 101, 109, 112, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 162, 167, 173, 178, 182, 184, 187, 190, 191, 213, 214, 215, 216, 220, 221, 225, 533, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 568, 569, 573, 578], "confirm": [64, 66, 109, 115, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 169, 170, 171, 177, 179, 193, 214, 216, 568, 573], "signal": [65, 203], "problem": [65, 218, 219], "below": [65, 576], "grace": 66, "finit": 70, "826": [71, 73, 569, 575], "3680043": [71, 73, 569, 575], "3811": [71, 73, 569, 575], "0002": [71, 72, 112, 156, 568, 578], "0012": [71, 156, 568], "pynetdicom_220": 72, "0013": [72, 156], "iso": [74, 197, 198, 201, 209, 531, 536, 573, 575], "646": [74, 197, 198, 201, 209, 531, 536, 573], "fallback": 74, "unexpect": [74, 110, 215], "behaviour": [74, 569], "abstract": [74, 82, 111, 192, 197, 203, 204, 209, 221, 222, 224, 239, 252, 254, 255, 568, 569, 573, 578], "appear": 74, "utf": [74, 109, 225], "enforc": 75, "otherwis": [75, 83, 84, 92, 99, 101, 109, 110, 111, 112, 113, 115, 155, 203, 222, 225, 239, 253, 254, 255, 525, 526, 527, 530, 534, 535, 536, 574], "64": [75, 140, 141, 142, 143, 144, 197, 198, 209, 536, 564, 575], "certain": [76, 542, 576], "concurr": [79, 80, 81], "contextvar": [79, 532], "caller": 79, "modifi": [79, 150, 568, 569], "could": [79, 173, 569], "filter": 79, "logger": [79, 574], "extern": 79, "minimis": [80, 81], "temporari": [80, 110, 214], "dataset_path": [80, 107, 156], "amount": [80, 81, 111], "larg": [80, 81, 111], "larger": [81, 89, 104, 112, 558], "load": 81, "necessari": [82, 92, 99, 101, 198, 573, 575, 578], "appli": [82, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 534, 535, 536, 571], "treat": 82, "short": [83, 572], "validate_a": 84, "ui": [84, 568], "validate_ui": 84, "signatur": 84, "func": 84, "msg": [84, 574], "feedback": 84, "about": [84, 100, 112, 113, 214, 565, 568, 569, 575, 578], "why": 84, "my_valid": 84, "microsoft": 85, "millisecond": 85, "mean": [85, 111, 525, 569, 574], "slower": 85, "counteract": 85, "ctype": 85, "94": 86, "95": 86, "100": 86, "101": 86, "102": 86, "103": 86, "105": 86, "107": 86, "retir": [86, 87], "jpip": 86, "referenc": [86, 93, 104, 112, 562], "mpeg2": 86, "profil": 86, "high": [86, 112, 141, 142, 143, 144], "mpeg": 86, "avc": 86, "h": [86, 89, 93, 95, 98, 102, 104, 112], "264": 86, "bd": 86, "2d": 86, "stereo": 86, "hevc": 86, "265": 86, "evt_acse_recv": [88, 158, 576], "evt_acse_s": [88, 158, 576], "notificationev": [88, 90, 94, 96, 100, 103, 108, 111, 112, 156, 159, 526, 530, 537], "a_associ": [88, 113, 155, 190, 191, 192, 529], "a_releas": [88, 155, 193, 194], "a_abort": [88, 155, 189], "a_p_abort": [88, 155, 189], "datetim": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 156, 576], "0x0110": [89, 93, 95, 98, 102, 104, 112, 550, 554, 555, 556, 558, 562, 563, 566], "0x0114": [89, 98, 112, 546, 555, 556, 558, 562, 563, 566], "0x0115": [89, 98, 112, 546, 555, 556, 558, 562, 563, 566], "0x0117": [89, 93, 95, 98, 102, 104, 107, 112, 546, 550, 554, 555, 556, 557, 558, 562, 563, 564, 566], "0x0118": [89, 93, 95, 98, 102, 104, 112, 546, 550, 554, 555, 556, 558, 562, 563, 566], "0x0119": [89, 95, 98, 102, 104, 112, 546, 550, 555, 556, 558, 562, 563, 566], "conflict": [89, 95, 98, 102, 104, 112, 546, 550, 555, 556, 558, 562, 563, 566], "0x0123": [89, 112, 546, 555, 558, 562, 563, 566], "0x0124": [89, 93, 95, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566], "authoris": [89, 93, 95, 101, 102, 104, 107, 112, 225, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566], "0x0210": [89, 93, 95, 97, 98, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "invoc": [89, 91, 93, 95, 97, 98, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "0x0211": [89, 93, 95, 97, 98, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "unrecognis": [89, 93, 95, 97, 98, 101, 102, 104, 107, 110, 112, 215, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "0x0212": [89, 93, 95, 97, 98, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "mistyp": [89, 93, 95, 97, 98, 101, 102, 104, 107, 112, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567], "0x0213": [89, 93, 95, 98, 102, 104, 112, 546, 550, 554, 555, 556, 558, 562, 563, 566], "resourc": [89, 92, 93, 95, 98, 99, 101, 102, 104, 107, 112, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566], "0xc101": [89, 546], "0xc102": [89, 546], "0xc103": [89, 546], "cannot": [89, 93, 107, 112, 143, 214, 239, 546, 555, 557, 562, 564, 566, 568, 569], "0xc104": [89, 546], "inconsist": [89, 546], "0xc10e": [89, 546], "medic": [89, 546, 568, 575], "0xc110": [89, 546], "admiss": [89, 546], "0038": [89, 546], "0xc111": [89, 546], "0xc112": [89, 102, 104, 112, 562], "0xc300": [89, 104, 112, 542, 566], "0xc301": [89, 104, 112, 566], "transact": [89, 104, 112, 566], "0xc302": [89, 566], "alreadi": [89, 93, 111, 112, 555, 562, 566, 568, 569], "0xc303": [89, 566], "schedul": [89, 93, 112, 566], "0xc304": [89, 566], "met": [89, 532, 566], "0xc307": [89, 102, 104, 112, 566], "0xc308": [89, 566], "0xc310": [89, 104, 112, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "yet": [89, 113, 525, 566, 572], "0xc311": [89, 99, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "0xc312": [89, 542, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "contact": [89, 566], "0xc313": [89, 566], "choos": [89, 566, 578], "0xc314": [89, 566], "0xc315": [89, 566], "0xc600": [89, 558], "0xc601": [89, 558], "queue": [89, 115, 155, 527, 558], "0xc602": [89, 558], "0xc603": [89, 104, 112, 558], "0xc613": [89, 104, 112, 558], "0xb101": [89, 546], "synchronis": [89, 546], "0xb102": [89, 546], "coercion": [89, 107, 112, 546, 564], "0xb104": [89, 546], "0xb301": [89, 566], "lock": [89, 112, 566], "grant": [89, 566], "0xb304": [89, 566], "0xb306": [89, 566], "0xb601": [89, 558], "collat": [89, 558], "0xb602": [89, 558], "0xb603": [89, 558], "0xb604": [89, 104, 112, 558], "demagnifi": [89, 104, 112, 558], "0xb609": [89, 104, 112, 558], "crop": [89, 104, 112, 558], "fit": [89, 104, 112, 558], "0xb60a": [89, 104, 112, 558], "decim": [89, 104, 112, 558], "presentationcontexttupl": [89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 239], "interventionev": [89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 156, 159, 526, 530, 537], "action_inform": [89, 156, 159], "defer": [89, 92, 93, 98, 99, 101, 104, 107, 156, 568], "0900": [89, 92, 93, 95, 97, 98, 99, 101, 102, 104, 107, 112, 542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568, 569], "repli": [89, 91, 98, 109, 112, 145, 148, 160, 239, 569], "notimplementederror": [89, 93, 95, 98, 104, 107, 196, 205, 521, 568], "applicationeventloggingserviceclass": [89, 112, 537], "mediacreationmanagementserviceclass": [89, 93, 102, 112, 537], "printmanagementserviceclass": [89, 93, 95, 98, 102, 104, 112, 537], "rtmachineverificationserviceclass": [89, 93, 95, 98, 102, 104, 112, 537], "storagecommitmentserviceclass": [89, 98, 112, 537], "unifiedprocedurestepserviceclass": [89, 93, 98, 99, 102, 104, 112, 537], "j": [89, 98, 112], "cc": [89, 93, 98, 99, 102, 104, 112], "dd": [89, 93, 95, 98, 102, 104, 112], "evt_accept": [90, 158, 574, 576], "evt_establish": [90, 158, 576], "evt_reject": [90, 158, 576], "evt_request": [90, 158, 576], "evt_releas": [90, 158, 576], "evt_abort": [90, 158, 576], "evt_async_op": [91, 157, 576], "regardless": 91, "0xc411": [92, 542, 548, 549, 551, 552, 559, 560], "0xa701": [92, 101, 112, 548, 549, 551, 552, 559, 560], "0xa702": [92, 101, 112, 548, 549, 551, 552, 559, 560], "0xa900": [92, 99, 101, 107, 112, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566], "0xaa00": [92, 101, 112, 559, 560], "0xaa01": [92, 101, 112, 559, 560], "0xaa02": [92, 101, 112, 559, 560], "extract": [92, 101, 112, 559, 560], "0xaa03": [92, 101, 112, 559, 560], "0xaa04": [92, 101, 112, 559, 560], "0xcfff": [92, 99, 101, 107, 112, 547, 548, 549, 551, 552, 559, 560, 564, 565, 566, 568], "0xb000": [92, 107, 112, 548, 549, 551, 552, 559, 560, 564], "0058": [92, 101, 112], "although": [92, 101, 225], "queryretrieveserviceclass": [92, 99, 101, 112, 519, 537, 572], "hangingprotocolqueryretrieveserviceclass": [92, 99, 101, 112, 537], "definedprocedureprotocolqueryretrieveserviceclass": [92, 99, 101, 112, 537], "colorpalettequeryretrieveserviceclass": [92, 99, 101, 112, 537], "implanttemplatequeryretrieveserviceclass": [92, 99, 101, 112, 537], "protocolapprovalqueryretrieveserviceclass": [92, 99, 101, 112, 537], "y": [92, 101, 112], "z": [92, 112], "bb": [92, 99, 101, 112], "hh": [92, 99, 101, 112], "0x0105": [93, 104, 112, 554, 555, 556, 558, 562, 566], "0x0107": [93, 102, 112, 550, 554, 555, 556, 558, 562, 566], "0x0116": [93, 104, 112, 554, 555, 556, 558, 562, 566], "0x0121": [93, 104, 112, 554, 555, 556, 558, 562, 566], "0xa510": [93, 112, 555], "0xc221": [93, 112, 562], "fraction": [93, 104, 112, 562], "0xc222": [93, 112, 562], "0xc223": [93, 112, 562], "0xc227": [93, 112, 562], "0xc309": [93, 112, 566], "0xc616": [93, 104, 112, 558], "0xb300": [93, 112, 566], "THE": [93, 112], "0xb600": [93, 104, 112, 558], "alloc": [93, 104, 112, 558], "0xb605": [93, 104, 112, 558], "min": [93, 104, 112, 558], "densiti": [93, 104, 112, 558], "respect": [93, 104, 112, 218, 219, 558], "instanceavailabilitynotificationserviceclass": [93, 112, 537], "procedurestepserviceclass": [93, 98, 102, 104, 112, 537], "evt_data_s": [94, 158, 576], "evt_n_delet": [95, 157, 574, 576], "evt_dimse_recv": [96, 158, 576], "evt_dimse_s": [96, 158, 576], "0x0122": [97, 101, 107, 112, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567], "verificationserviceclass": [97, 112, 537], "0x0113": [98, 112, 556, 558, 562, 563, 566], "event_inform": [98, 156, 159], "send_n_event_report": [98, 112, 574], "0xa700": [99, 107, 112, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566], "0xff01": [99, 112, 547, 548, 549, 551, 552, 559, 560, 566], "vual": 99, "relevantpatientinformationqueryserviceclass": [99, 112, 537], "substanceadministrationqueryserviceclass": [99, 112, 537], "evt_fsm_transit": [100, 158, 576], "current_st": [100, 188], "fsm_event": 100, "transit": [100, 188, 576], "next_stat": 100, "0xc511": [101, 542, 548, 549, 551, 552, 559, 560], "noth": [101, 569], "0x0001": [102, 104, 112, 156, 555, 566], "attribute_identifi": [102, 156], "basetag": [102, 112, 149, 156], "displaysystemmanagementserviceclass": [102, 112, 537], "ee": [102, 112], "evt_pdu_s": [103, 158, 576], "a_associate_rq": 103, "a_associate_rj": 103, "a_associate_ac": 103, "a_release_rq": 103, "a_release_rp": 103, "a_abort_rq": 103, "p_data_tf": 103, "0xc224": [104, 112, 562], "0xc225": [104, 112, 562], "accessori": [104, 112, 562], "0xc226": [104, 112, 562], "0xc605": [104, 112, 558], "insuffici": [104, 112, 558], "0xb305": [104, 112, 566], "coerc": [104, 112, 566], "modification_list": [104, 156, 159], "sopclasscommonextendednegoti": [105, 111, 113, 207, 212, 214], "evt_sop_common": [105, 157, 576], "evt_sop_extend": [106, 157, 576], "app_info": [106, 208], "0xc211": [107, 542, 557, 564, 568], "0xb006": [107, 112, 564], "discard": [107, 112, 564], "0xb007": [107, 112, 564], "0xa7ff": [107, 112, 564], "0xa9ff": [107, 112, 564], "understand": [107, 112, 557, 564, 568, 569], "pathlib": [107, 112, 156], "storageserviceclass": [107, 112, 519, 537, 572], "nonpatientobjectstorageserviceclass": [107, 112, 537], "gg": [107, 112], "evt_conn_open": [108, 158, 574, 576], "evt_conn_clos": [108, 158, 574, 576], "host": [108, 111, 526, 527, 528, 530, 573, 574], "evt_user_id": [109, 157, 573, 576], "even": [109, 568, 569, 573], "primary_field": [109, 225, 574], "primari": [109, 211, 225], "usernam": [109, 225, 573, 574], "kerbero": [109, 225, 573], "ticket": [109, 225, 573], "json": [109, 225, 573], "web": [109, 225, 573], "token": [109, 225, 573], "user_id_typ": 109, "secondary_field": [109, 225, 574], "Will": [109, 156, 192, 267], "form": [109, 197, 198, 207, 209, 573, 575], "passcod": [109, 225], "saml": [109, 225, 573], "assert": [109, 225, 573, 576], "is_verifi": [109, 573], "wish": [109, 111, 192, 569, 573, 576, 578], "proce": [109, 225], "__init__": [110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 239, 240, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 463, 522, 525, 526, 527, 528, 529, 530], "parent": [110, 112, 113, 115, 155, 526, 527, 528, 530, 574], "0x00": [110, 207, 239, 255], "valueerror": [110, 111, 112, 188, 217, 218, 219, 220, 222, 223, 224, 225, 535, 569, 573, 574], "transient": [110, 214], "congest": [110, 214], "exceed": [110, 214, 569], "is_respons": 110, "union": [111, 155, 575], "abstract_syntax": [111, 197, 204, 239, 240, 252, 568, 574, 578], "presentationcontext": [111, 112, 113, 203, 204, 214, 240, 252, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 526, 530, 573, 578], "implicitvrlittleendian": [111, 573, 578], "explicitvrlittleendian": [111, 568, 573], "explicitvrbigendian": [111, 573], "implementationversionnamenotif": [111, 113, 201, 212, 214], "asynchronousoperationswindownegoti": [111, 113, 199, 212, 214], "scp_scu_roleselectionnegoti": [111, 113, 206, 212, 214, 253, 254, 578], "sopclassextendednegoti": [111, 113, 208, 212, 214], "useridentitynegoti": [111, 113, 210, 211, 212, 214, 574], "sslcontext": [111, 526, 527, 530, 574], "pdv": [111, 113, 196, 205, 221], "16832": 111, "userinform": 111, "server_hostnam": [111, 527, 574], "wrap_socket": [111, 526, 527, 574], "evt_": 111, "At": [111, 113], "runtimeerror": [111, 112, 113, 574], "settimeout": [111, 526], "phase": [111, 569], "server_class": 111, "_t": 111, "constructor": 111, "maximum_associ": 111, "simultan": 111, "throughput": 111, "overhead": 111, "alon": 111, "entir": [111, 569, 573], "kept": 111, "least": [111, 112, 113, 214, 568, 569, 576, 578], "require_match": 111, "is_reject": 112, "won": [112, 578], "begin": [112, 113], "assign": [112, 542], "set_socket": 112, "accepted_context": 112, "namedtupl": [112, 156, 239, 240, 526, 576], "is_acceptor": [112, 113], "is_requestor": [112, 113], "kill": [112, 155], "allocate_lock": 112, "rejected_context": 112, "run_reactor": [112, 155], "msg_id": 112, "65535": 112, "inclus": [112, 536, 578], "shouldn": [112, 573], "0xc200": [112, 542, 561], "come": [112, 568, 569, 572, 575, 576], "guarante": [112, 190, 192, 575], "move_aet": 112, "henc": 112, "nomin": 112, "originator_aet": 112, "originator_id": 112, "attributeerror": [112, 156], "0016": 112, "0018": [112, 568], "class_uid": 112, "instance_uid": 112, "1008": [112, 156], "0003": [112, 156, 568], "1001": 112, "1000": 112, "1002": [112, 156], "event_repli": 112, "identifier_list": 112, "1005": [112, 156], "suffici": 113, "consid": [113, 536, 578], "maximum_length": [113, 212], "necessarili": 113, "accepted_common_extend": 113, "identif": [113, 200, 201, 207, 218, 219, 223, 574, 575], "add_negotiation_item": 113, "serviceparamet": 113, "typeerror": [113, 217, 219, 220, 222, 223, 224, 225], "asynchronous_oper": 113, "extended_negoti": 113, "get_context": 113, "cx_type": 113, "pcdl": 113, "pcdrl": 113, "remove_negotiation_item": 113, "reset_negotiation_item": 113, "clear": [113, 115, 573, 574], "role_select": [113, 212], "sop_class_common_extend": 113, "sop_class_extend": 113, "user_ident": [113, 212, 574], "user_inform": [113, 190, 192, 214], "writeabl": 113, "cancel_rq": 115, "messageidbeingrespondedto": [115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "hold": 115, "period": 115, "p_data": [115, 155, 195], "split": [115, 569], "sequenti": 115, "send_msg": 115, "ind": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "equal": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 220, 225], "left": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 526], "mf": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 213, 214, 215, 216, 221], "uf": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 213, 214, 215, 216, 221], "conf": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "comment": [140, 141, 142, 143, 144], "messageid": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "distinguish": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "outstand": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 217], "affectedsopclassuid": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "errorcom": [140, 141, 142, 143, 144], "detect": [140, 141, 142, 143, 144], "offend": [141, 142, 143, 144], "offendingel": [141, 142, 143, 144], "bytesio": [141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 533], "io": [141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 533], "op": [142, 143], "numberofcompletedsuboper": [142, 143], "suboper": [142, 143], "numberoffailedsuboper": [142, 143], "numberofremainingsuboper": [142, 143], "numberofwarningsuboper": [142, 143], "movedestin": 143, "moveoriginatorapplicationentitytitl": 144, "th": 144, "moveoriginatormessageid": 144, "actioninform": 145, "actionrepli": 145, "actiontypeid": 145, "requestedsopclassuid": [145, 147, 149, 150], "eventinform": 148, "eventrepli": 148, "eventtypeid": 148, "modificationlist": 150, "bytestr": [151, 533], "is_implicit_vr": [151, 152], "is_little_endian": [151, 152], "byestr": 151, "scheme": [152, 575], "indent": 153, "indent_char": 153, "beautifi": [153, 154], "elem": 154, "datael": 154, "dataelem": 154, "artim_tim": 155, "artim": [155, 161, 164, 167, 172, 173, 181, 525], "to_provider_queu": 155, "to_user_queu": 155, "event_queu": [155, 527], "queu": 155, "state_machin": 155, "statemachin": 155, "idle_timer_expir": 155, "kill_dul": 155, "peek_next_pdu": 155, "receive_pdu": 155, "most": [155, 568], "loop": [155, 526], "constantli": 155, "categoris": 155, "send_pdu": 155, "place": [155, 196, 205], "stop_dul": 155, "sta1": [155, 161, 162, 163, 164, 168, 171, 172, 179, 181, 188], "dynam": 156, "slightli": [156, 568], "therefor": [156, 573, 575], "proper": 156, "filemetadataset": 156, "0001": [156, 568], "suitabl": [156, 530, 574, 575], "0110": 156, "0600": 156, "is_intervent": [157, 158], "is_notif": [157, 158], "alia": [157, 158, 240], "special": [159, 569], "_is_cancel": 159, "caught": [159, 576], "aa": [160, 161, 162, 163, 164, 165, 166, 167], "sta2": [160, 161, 164, 172, 173], "evt3": [160, 165, 167, 170], "evt4": [160, 165, 167, 171], "evt10": [160, 165, 167, 182, 187], "evt12": [160, 165, 167, 178, 184], "evt13": [160, 165, 167, 177, 179], "evt19": [160, 166, 167, 188], "sta3": [160, 162, 163, 167, 173, 174, 175], "sta5": [160, 162, 163, 169, 170, 171], "sta6": [160, 162, 163, 170, 174, 176, 178, 186, 187], "sta7": [160, 162, 163, 176, 179, 182, 184], "sta8": [160, 162, 163, 178, 180, 183], "sta9": [160, 162, 163, 184, 185], "sta10": [160, 162, 163, 177, 184], "sta11": [160, 162, 163, 179, 185], "sta12": [160, 162, 163, 177, 180], "evt15": [160, 161], "sta13": [160, 161, 165, 166, 167, 173, 175, 180, 181, 188], "On": [161, 162, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 569], "evt16": [161, 162], "evt18": 161, "sta4": [161, 163, 168, 169], "evt6": [166, 167, 173], "evt1": [168, 188], "stream": 169, "evt5": 172, "evt7": 174, "evt8": 175, "evt11": 176, "back": [179, 181, 254, 578], "evt14": [180, 185], "evt9": [183, 186], "do_act": 188, "pdu_typ": [189, 190, 191, 192, 193, 194, 195], "reason_diagnost": [189, 191], "26": [189, 190, 192, 564], "offset": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "shown": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 569, 573], "from_primit": [189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 217, 218, 219, 220, 222, 223, 224, 225], "pdu_length": [189, 190, 191, 192, 193, 194, 195], "reason_str": [189, 191, 214], "source_str": [189, 191, 214], "to_primit": [189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212], "protocol_vers": [190, 192], "variable_item": [190, 192], "0x10": [190, 192, 198], "0x21": [190, 192, 203], "0x40": [190, 192, 203, 204, 209], "0x50": [190, 192, 212], "32": [190, 192, 564], "application_context_nam": [190, 192, 198, 214], "called_ae_titl": [190, 192, 214], "sai": [190, 569], "calling_ae_titl": [190, 192, 214], "presentation_context": [190, 192], "reserved_aec": 190, "27": [190, 564], "reserved_aet": 190, "unsuccess": 191, "result_str": [191, 203, 214], "0x30": [192, 197, 204], "part08": 192, "sect_9": 192, "html": [192, 554, 555, 556], "0x20": [192, 204, 573], "signific": [192, 239, 573], "truncat": [192, 214], "0x00000004": 193, "24": [194, 196, 205], "presentation_data_value_item": 195, "fragment": [196, 205], "item_length": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "item_typ": [196, 205], "message_control_header_byt": [196, 205], "header": [196, 205, 568], "agre": [197, 209, 569, 574, 575], "osi": [197, 198, 209, 575], "8824": [197, 198, 209, 575], "1990": [197, 198, 201, 209, 536], "g0": [197, 198, 201, 209, 536, 573], "0x2e": [197, 198, 209], "exce": [197, 198, 209], "iec": [197, 198, 209, 573, 575], "2015": [197, 198, 209], "abstract_syntax_nam": 197, "explicitli": 198, "inter": 198, "0x53": 199, "max_operations_invok": 199, "max_operations_perform": 199, "0x52": 200, "0x55": 201, "0x51": [202, 206], "ttem": 203, "ie": [206, 207, 208], "NO": [206, 207, 208], "sop_class_uid": [206, 207, 208, 222, 223, 224, 578], "uid_length": 206, "0x57": 207, "related_general_sop_class_identif": [207, 223], "related_general_sop_class_identification_length": 207, "service_class_uid": [207, 223], "service_class_uid_length": 207, "sop_class_uid_length": [207, 208], "0x56": 208, "unambigu": [209, 575], "techniqu": [209, 575], "transfer_syntax_nam": 209, "0x59": 210, "server_response_length": 210, "0x58": 211, "id_typ": 211, "id_type_str": 211, "primary_field_length": 211, "response_request": 211, "secondary_field_length": 211, "async_ops_window": 212, "common_ext_neg": 212, "_userinformationprimitivetyp": 212, "nu": [213, 214, 215, 216, 221], "abort_sourc": 213, "deconvert": 214, "pre": [214, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 537, 568, 573], "contxt": 214, "resp": 214, "sess": 214, "called_presentation_address": 214, "calling_presentation_address": 214, "result_sourc": 214, "ul": [214, 225, 568], "maximum_length_receiv": [214, 220], "presentation_context_definition_list": 214, "value_list": 214, "presentation_context_definition_results_list": 214, "presentation_requir": 214, "kernel": 214, "responding_ae_titl": 214, "responding_presentation_address": 214, "session_requir": 214, "provider_reason": 215, "affirm": 216, "maximum_number_operations_invok": 217, "maximum_number_operations_perform": 217, "ambigu": [218, 219], "encount": [218, 219], "node": [218, 219], "piec": [218, 219, 575, 578], "some_nam": 219, "v3": 220, "val": [220, 239, 463], "greater": [220, 525], "31682": 220, "neg": [220, 525, 576], "presentation_data_value_list": 221, "serv": 222, "absent": 222, "uid_list": 223, "aren": [223, 573], "service_class_application_inform": 224, "x01": 224, "ps3": 224, "possibli": 225, "decid": [225, 573, 578], "authent": 225, "user_identity_typ": [225, 574], "positive_response_request": 225, "server_respons": 225, "password": [225, 573, 574], "channel": [226, 569], "built": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 537, 568], "assembli": [233, 238, 552], "odd": [239, 578], "integ": [239, 578], "255": [239, 527, 578], "presentent": 239, "outcom": [239, 255, 569, 573, 578], "acc": 239, "seen": [239, 568, 569, 578], "neither": [239, 578], "add_transfer_syntax": 239, "as_scp": 239, "as_scu": 239, "as_tupl": [239, 568], "convent": [245, 562], "product": 249, "rq_context": [254, 255], "ac_context": [254, 255], "sort": [254, 255], "thing": [255, 568, 569], "nice": [255, 527, 533], "_qr": [256, 263, 266], "_mcm": 271, "_pj": [272, 274], "_p": 273, "_sc": 275, "_up": 276, "37": [294, 304, 353, 561, 564], "39": [307, 308, 309, 310, 548, 557, 564], "43": [354, 355, 356, 357, 552, 557, 564], "38": [360, 361, 362, 363, 551, 557, 564], "44": [365, 366, 367, 368, 552, 557], "23": [421, 558], "376": [424, 425, 558], "41": [430, 564, 565], "dimse_msg_typ": [519, 572], "246": [519, 572], "352": [519, 572], "foostorag": 519, "isn": [520, 569], "sphinx": 522, "unable_to_process": 522, "temp": 522, "65024": 522, "move_destination_unknown": 522, "43009": 522, "65280": 522, "classmethod": 522, "purpos": [525, 574, 576], "impli": 525, "sinc": [525, 568, 569], "restart": [525, 568], "reset": 525, "baserequesthandl": [526, 530], "serve_forev": 526, "poll_interv": 526, "poll": [526, 527], "request_queue_s": 526, "server_address": 526, "get_request": 526, "client_socket": [526, 527], "process_request": 526, "client_address": [526, 528, 530], "server_bind": 526, "so_reuseaddr": 526, "server_clos": 526, "service_act": 526, "wrapper": 527, "newli": 527, "get_local_addr": 527, "provider_queu": 527, "_queuetyp": 527, "recv": 527, "nr_byte": 527, "bytearrai": 527, "bytestream": [527, 533], "unaccept": 528, "process_request_thread": 530, "encoded_valu": 531, "target_fn": 532, "thunk": 532, "target": 532, "delimit": 533, "items_per_lin": 533, "max_siz": 533, "512": 533, "suffix": [533, 575], "turn": 533, "insert": 533, "everi": [533, 568, 569, 575], "allow_empti": [534, 535], "allow_non": [534, 535], "validate_uid": [535, 537], "intern": [536, 542], "dev0": 537, "nov": 537, "08": [537, 575], "2023": 537, "log_handler_level": [537, 576], "dsutil": 537, "miscellan": 537, "service_class_n": 537, "status": [537, 568], "code_to_statu": 537, "decode_byt": 537, "make_target": 537, "pretty_byt": 537, "set_a": 537, "set_uid": 537, "lai": 542, "help": [542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 569], "aid": [542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565], "0xc0ff": 542, "0xc001": [542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568], "0xc002": [542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566], "0xc2ff": 542, "0xc210": [542, 557, 564], "unhandl": [542, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 568], "0xc3ff": 542, "0xc400": 542, "0xc4ff": 542, "0xc410": [542, 548, 549, 551, 552, 559, 560], "0xc413": [542, 548, 549, 551, 552, 559, 560], "0xc500": 542, "0xc5ff": 542, "0xc510": [542, 548, 549, 551, 552, 559, 560], "0xc513": [542, 548, 549, 551, 552, 559, 560], "0xc514": [542, 548, 549, 551, 552, 559, 560], "0xc515": [542, 548, 549, 551, 552, 559, 560], "proceduraleventlog": 546, "substanceadministrationlog": 546, "hex": [546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 573], "colorpaletteinformationmodelfind": 548, "colorpaletteinformationmodelmov": 548, "colorpaletteinformationmodelget": 548, "definedprocedureprotocolinformationmodelfind": 549, "definedprocedureprotocolinformationmodelmov": 549, "definedprocedureprotocolinformationmodelget": 549, "hangingprotocolinformationmodelfind": 551, "hangingprotocolinformationmodelmov": 551, "hangingprotocolinformationmodelget": 551, "genericimplanttemplateinformationmodelfind": 552, "implantassemblytemplateinformationmodelfind": 552, "implanttemplategroupinformationmodelfind": 552, "genericimplanttemplateinformationmodelmov": 552, "implantassemblytemplateinformationmodelmov": 552, "implanttemplategroupinformationmodelmov": 552, "genericimplanttemplateinformationmodelget": 552, "implantassemblytemplateinformationmodelget": 552, "implanttemplategroupinformationmodelget": 552, "part04": [554, 555, 556], "chapter_r": 554, "presenc": 554, "instanceavailabilitynotif": 554, "chapter_": 555, "interchang": 555, "mediacreationmanag": 555, "0xc201": 555, "0xc202": 555, "interrupt": [555, 568, 569], "0xc203": 555, "deni": 555, "unspecifi": 555, "chapter_f": 556, "modalityperformedprocedurestepretriev": 556, "modalityperformedprocedurestepnotif": 556, "hangingprotocolstorag": 557, "colorpalettestorag": 557, "genericimplanttemplatestorag": 557, "implantassemblytemplatestorag": 557, "implanttemplategroupstorag": 557, "ctdefinedprocedureprotocolstorag": 557, "protocolapprovalstorag": 557, "xadefinedprocedureprotocolstorag": 557, "basiccolorimagebox": 558, "printjob": 558, "basicannotationbox": 558, "printerconfigurationretriev": 558, "basiccolorprintmanagementmeta": 558, "presentationlut": 558, "protocolapprovalinformationfind": 559, "protocolapprovalinformationmov": 559, "protocolapprovalinformationget": 559, "studyrootqueryretrieveinformationmodelfind": 560, "patientstudyonlyqueryretrieveinformationmodelfind": 560, "studyrootqueryretrieveinformationmodelmov": 560, "patientstudyonlyqueryretrieveinformationmodelmov": 560, "compositeinstancerootretrievemov": 560, "studyrootqueryretrieveinformationmodelget": 560, "patientstudyonlyqueryretrieveinformationmodelget": 560, "compositeinstanceretrievewithoutbulkdataget": 560, "compositeinstancerootretrieveget": 560, "breastimagingrelevantpatientinformationqueri": 561, "cardiacrelevantpatientinformationqueri": 561, "geometr": 562, "dosimetr": 562, "rtconventionalmachineverif": 562, "rtionmachineverif": 562, "safekeep": 563, "storagecommitmentpushmodel": 563, "computedradiographyimagestorag": 564, "digitalxrayimagestorageforpresent": 564, "digitalxrayimagestorageforprocess": 564, "digitalmammographyxrayimagestorageforpresent": 564, "digitalmammographyxrayimagestorageforprocess": 564, "digitalintraoralxrayimagestorageforpresent": 564, "28": 564, "digitalintraoralxrayimagestorageforprocess": 564, "enhancedctimagestorag": 564, "legacyconvertedenhancedctimagestorag": 564, "ultrasoundmultiframeimagestorag": 564, "enhancedmrimagestorag": 564, "36": 564, "mrspectroscopystorag": 564, "enhancedmrcolorimagestorag": 564, "legacyconvertedenhancedmrimagestorag": 564, "ultrasoundimagestorag": 564, "enhancedusvolumestorag": 564, "secondarycaptureimagestorag": 564, "multiframesinglebitsecondarycaptureimagestorag": 564, "multiframegrayscalebytesecondarycaptureimagestorag": 564, "multiframegrayscalewordsecondarycaptureimagestorag": 564, "multiframetruecolorsecondarycaptureimagestorag": 564, "twelveleadecgwaveformstorag": 564, "generalecgwaveformstorag": 564, "ambulatoryecgwaveformstorag": 564, "hemodynamicwaveformstorag": 564, "cardiacelectrophysiologywaveformstorag": 564, "basicvoiceaudiowaveformstorag": 564, "generalaudiowaveformstorag": 564, "arterialpulsewaveformstorag": 564, "respiratorywaveformstorag": 564, "multichannelrespiratorywaveformstorag": 564, "routinescalpelectroencephalogramwaveformstorag": 564, "electromyogramwaveformstorag": 564, "electrooculogramwaveformstorag": 564, "sleepelectroencephalogramwaveformstorag": 564, "bodypositionwaveformstorag": 564, "grayscalesoftcopypresentationstatestorag": 564, "colorsoftcopypresentationstatestorag": 564, "pseudocolorsoftcopypresentationstagestorag": 564, "blendingsoftcopypresentationstatestorag": 564, "xaxrfgrayscalesoftcopypresentationstatestorag": 564, "grayscaleplanarmprvolumetricpresentationstatestorag": 564, "compositingplanarmprvolumetricpresentationstatestorag": 564, "advancedblendingpresentationstatestorag": 564, "volumerenderingvolumetricpresentationstatestorag": 564, "segmentedvolumerenderingvolumetricpresentationstatestorag": 564, "multiplevolumerenderingvolumetricpresentationstatestorag": 564, "xrayangiographicimagestorag": 564, "enhancedxaimagestorag": 564, "47": 564, "xrayradiofluoroscopicimagestorag": 564, "enhancedxrfimagestorag": 564, "48": 564, "xray3dangiographicimagestorag": 564, "53": 564, "xray3dcraniofacialimagestorag": 564, "breasttomosynthesisimagestorag": 564, "55": 564, "breastprojectionxrayimagestorageforpresent": 564, "breastprojectionxrayimagestorageforprocess": 564, "intravascularopticalcoherencetomographyimagestorageforpresent": 564, "intravascularopticalcoherencetomographyimagestorageforprocess": 564, "nuclearmedicineimagestorag": 564, "parametricmapstorag": 564, "rawdatastorag": 564, "spatialregistrationstorag": 564, "spatialfiducialsstorag": 564, "deformablespatialregistrationstorag": 564, "segmentationstorag": 564, "surfacesegmentationstorag": 564, "tractographyresultsstorag": 564, "realworldvaluemappingstorag": 564, "46": 564, "surfacescanmeshstorag": 564, "surfacescanpointcloudstorag": 564, "vlendoscopicimagestorag": 564, "videoendoscopicimagestorag": 564, "vlmicroscopicimagestorag": 564, "videomicroscopicimagestorag": 564, "vlslidecoordinatesmicroscopicimagestorag": 564, "vlphotographicimagestorag": 564, "videophotographicimagestorag": 564, "ophthalmicphotography8bitimagestorag": 564, "ophthalmicphotography16bitimagestorag": 564, "stereometricrelationshipstorag": 564, "ophthalmictomographyimagestorag": 564, "52": 564, "widefieldophthalmicphotographystereographicprojectionimagestorag": 564, "widefieldophthalmicphotography3dcoordinatesimagestorag": 564, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 564, "83": 564, "ophthlamicopticalcoherencetomographybscanvolumeanalysisstorag": 564, "84": 564, "vlwholeslidemicroscopyimagestorag": 564, "dermoscopicphotographyimagestorag": 564, "lensometrymeasurementsstorag": 564, "autorefractionmeasurementsstorag": 564, "keratometrymeasurementsstorag": 564, "subjectiverefractionmeasurementsstorag": 564, "visualacuitymeasurementsstorag": 564, "spectacleprescriptionreportstorag": 564, "ophthalmicaxialmeasurementsstorag": 564, "intraocularlenscalculationsstorag": 564, "maculargridthicknessandvolumereportstorag": 564, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 564, "ophthalmicthicknessmapstorag": 564, "cornealtopographymapstorag": 564, "basictextsrstorag": 564, "enhancedsrstorag": 564, "comprehensivesrstorag": 564, "comprehensive3dsrstorag": 564, "extensiblesrstorag": 564, "procedurelogstorag": 564, "mammographycadsrstorag": 564, "keyobjectselectiondocumentstorag": 564, "chestcadsrstorag": 564, "xrayradiationdosesrstorag": 564, "radiopharmaceuticalradiationdosesrstorag": 564, "coloncadsrstorag": 564, "acquisitioncontextsrstorag": 564, "simplifiedadultechosrstorag": 564, "patientradiationdosesrstorag": 564, "plannedimagingagentadministrationsrstorag": 564, "performedimagingagentadministrationsrstorag": 564, "enhancedxrayradiationdosesrstorag": 564, "contentassessmentresultsstorag": 564, "microscopybulksimpleannotationsstorag": 564, "87": 564, "encapsulatedpdfstorag": 564, "encapsulatedcdastorag": 564, "encapsulatedstlstorag": 564, "85": 564, "encapsulatedobjstorag": 564, "encapsulatedmtlstorag": 564, "positronemissiontomographyimagestorag": 564, "legacyconvertedenhancedpetimagestorag": 564, "enhancedpetimagestorag": 564, "basicstructureddisplaystorag": 564, "ctperformedprocedureprotocolstorag": 564, "xaperformedprocedureprotocolstorag": 564, "rtimagestorag": 564, "rtdosestorag": 564, "rtstructuresetstorag": 564, "rtbeamstreatmentrecordstorag": 564, "29": 564, "rtplanstorag": 564, "rtbrachytreatmentrecordstorag": 564, "rttreatmentsummaryrecordstorag": 564, "rtionplanstorag": 564, "rtionbeamstreatmentrecordstorag": 564, "rtphysicianintentstorag": 564, "86": 564, "rtsegmentannotationstorag": 564, "rtradiationsetstorag": 564, "carmphotonelectronradiationstorag": 564, "tomotherapeuticradiationstorag": 564, "roboticarmradiationstorag": 564, "rtradiationrecordsetstorag": 564, "rtradiationsalvagerecordstorag": 564, "tomotherapeuticradiationrecordstorag": 564, "carmphotonelectronradiationrecordstorag": 564, "roboticarmradiationrecordstorag": 564, "rtradiationsetdeliveryinstructionstorag": 564, "rttreatmentpreparationstorag": 564, "rtbeamsdeliveryinstructionstorag": 564, "rtbrachyapplicationsetupdeliveryinstructionsstorag": 564, "obtain": [565, 575], "productcharacteristicsqueri": 565, "substanceapprovalqueri": 565, "unifiedproceduresteppush": 566, "unifiedprocedurestepwatch": 566, "unifiedproceduresteppul": 566, "unifiedprocedurestepev": 566, "unifiedprocedurestepqueri": 566, "un": 566, "subscrib": 566, "tutori": [568, 569, 571, 572], "peopl": [568, 569], "who": [568, 569], "learn": [568, 569, 572], "pleas": [568, 573, 574], "slice": [568, 575], "undergon": 568, "put": 568, "provis": [568, 575], "comfort": 568, "let": [568, 569], "my_scp": 568, "editor": [568, 569], "down": [568, 569], "And": [568, 569, 578], "fall": 568, "traceback": 568, "recent": [568, 572], "1406": 568, "212": 568, "820": 568, "_c_store_handl": 568, "better": 568, "give": [568, 573, 576, 578], "interven": 568, "idea": [568, 574], "worri": [568, 569, 578], "saw": [568, 569], "stage": [568, 569], "ctrl": [568, 569], "though": 568, "written": [568, 569], "0x4449434d": 568, "small": 568, "difficult": 568, "fortun": [568, 569], "coupl": [568, 569, 578], "awar": 568, "deal": 568, "suppos": 568, "easiest": 568, "handi": 568, "moment": 568, "technic": 568, "all_transfer_syntax": 568, "storage_sop_class": 568, "uncompress": [568, 578], "faster": 568, "cost": 568, "complex": 568, "storage_dir": 568, "makedir": 568, "exist_ok": 568, "dir": 568, "fname": 568, "ve": [568, 569, 574], "demonstr": [568, 574], "third": [568, 569, 571, 574, 576], "gracefulli": 568, "realli": 568, "That": 568, "might": [568, 569, 571], "tell": 569, "earlier": 569, "upgrad": [569, 571], "term": 569, "govern": [569, 575], "goe": 569, "upon": [569, 574], "wonder": 569, "answer": 569, "li": 569, "sole": [569, 576], "label": [569, 575], "shorten": 569, "acknowledg": 569, "reachabl": 569, "firewal": 569, "ok": 569, "enough": 569, "simpler": 569, "parti": [569, 571], "dcmtk": 569, "accordingli": 569, "press": 569, "background": 569, "rest": 569, "feel": 569, "my_scu": 569, "lot": 569, "few": 569, "later": 569, "localhost": [569, 572], "148": 569, "155": 569, "behind": 569, "scene": 569, "mention": 569, "hand": 569, "whatev": 569, "further": 569, "yourself": [569, 573], "sure": [569, 571], "pynetdicom_200": 569, "broken": 569, "traffic": 569, "familiar": 569, "too": 569, "unusu": 569, "afterward": [569, 573], "secur": 569, "hopefulli": 569, "introduct": [569, 577], "cheat": 569, "visibl": 569, "addition": 569, "mix": 569, "congratul": 569, "Then": [570, 571, 578], "virtual": 571, "environ": 571, "isol": 571, "admin": 571, "privileg": 571, "pypi": 571, "softwar": 571, "repositori": 571, "simplest": 571, "forg": 571, "snapshot": 571, "latest": 571, "master": 571, "branch": 571, "github": 571, "git": 571, "http": 571, "com": 571, "stabl": 571, "undocu": 571, "clone": 571, "edit": 571, "download": 571, "occasion": 572, "across": [572, 575], "perhap": 572, "privatertplanstorag": 572, "privatequeryfind": 572, "my_ae_titl": 573, "Or": 573, "repertoir": 573, "1991": 573, "exclud": [573, 574], "backslash": 573, "0x5c": 573, "done": 573, "prebuilt": 573, "almost": 573, "context_a": 573, "context_b": 573, "reiter": 573, "aim": 573, "some_user_funct": 573, "handle_user_id": 573, "hit": 574, "singular": 574, "plu": 574, "room": 574, "negotiation_item": 574, "getlogg": 574, "handle_open": 574, "handle_accept": 574, "arg1": [574, 576], "arg2": [574, 576], "unbound": [574, 576], "handle_clos": 574, "disconnect": 574, "vari": 574, "ssl_cx": 574, "create_default_context": 574, "client_auth": 574, "cafil": 574, "crt": 574, "verify_mod": 574, "cert_requir": 574, "load_cert_chain": 574, "certfil": 574, "keyfil": 574, "potenti": 574, "someth": [574, 578], "outlin": 574, "finish": 574, "supported_cx": 574, "futur": 574, "unaffect": 574, "load_verify_loc": 574, "0g": 574, "maximum_vers": 574, "tlsversion": 574, "tlsv1_2": 574, "varieti": [575, 578], "countri": 575, "site": 575, "vendor": 575, "equip": 575, "itu": 575, "compos": 575, "org": 575, "organis": 575, "portion": 575, "free": 575, "websit": 575, "orient": 575, "share": 575, "normalis": 575, "deriv": 575, "especi": 575, "along": 575, "involv": 575, "featur": 575, "condition": 575, "fulli": 578, "With": 578, "freeli": 578, "jpegbaselin": 578, "decompress": 578, "unlik": 578, "offer": 578, "cr": 578, "wrinkl": 578, "scratch": 578, "role_a": 578, "role_b": 578}, "objects": {"": [[537, 0, 0, "-", "pynetdicom"]], "pynetdicom": [[71, 1, 1, "", "PYNETDICOM_IMPLEMENTATION_UID"], [72, 1, 1, "", "PYNETDICOM_IMPLEMENTATION_VERSION"], [73, 1, 1, "", "PYNETDICOM_UID_PREFIX"], [46, 0, 0, "-", "_config"], [42, 0, 0, "-", "acse"], [44, 0, 0, "-", "ae"], [45, 0, 0, "-", "association"], [114, 2, 1, "", "debug_logger"], [50, 0, 0, "-", "dimse"], [48, 0, 0, "-", "dimse_messages"], [49, 0, 0, "-", "dimse_primitives"], [51, 0, 0, "-", "dsutils"], [68, 0, 0, "-", "dul"], [69, 0, 0, "-", "events"], [70, 0, 0, "-", "fsm"], [53, 0, 0, "-", "pdu"], [61, 0, 0, "-", "pdu_items"], [62, 0, 0, "-", "pdu_primitives"], [539, 0, 0, "-", "presentation"], [540, 0, 0, "-", "service_class"], [541, 0, 0, "-", "sop_class"], [542, 0, 0, "-", "status"], [543, 0, 0, "-", "timer"], [544, 0, 0, "-", "transport"], [545, 0, 0, "-", "utils"]], "pynetdicom._config": [[74, 1, 1, "", "CODECS"], [75, 1, 1, "", "ENFORCE_UID_CONFORMANCE"], [76, 1, 1, "", "LOG_HANDLER_LEVEL"], [77, 1, 1, "", "LOG_REQUEST_IDENTIFIERS"], [78, 1, 1, "", "LOG_RESPONSE_IDENTIFIERS"], [79, 1, 1, "", "PASS_CONTEXTVARS"], [80, 1, 1, "", "STORE_RECV_CHUNKED_DATASET"], [81, 1, 1, "", "STORE_SEND_CHUNKED_DATASET"], [82, 1, 1, "", "UNRESTRICTED_STORAGE_SERVICE"], [83, 1, 1, "", "USE_SHORT_DIMSE_AET"], [84, 1, 1, "", "VALIDATORS"], [85, 1, 1, "", "WINDOWS_TIMER_RESOLUTION"]], "pynetdicom._globals": [[86, 1, 1, "", "ALL_TRANSFER_SYNTAXES"], [87, 1, 1, "", "DEFAULT_TRANSFER_SYNTAXES"]], "pynetdicom._handlers": [[88, 2, 1, "", "doc_handle_acse"], [89, 2, 1, "", "doc_handle_action"], [90, 2, 1, "", "doc_handle_assoc"], [91, 2, 1, "", "doc_handle_async"], [92, 2, 1, "", "doc_handle_c_get"], [93, 2, 1, "", "doc_handle_create"], [94, 2, 1, "", "doc_handle_data"], [95, 2, 1, "", "doc_handle_delete"], [96, 2, 1, "", "doc_handle_dimse"], [97, 2, 1, "", "doc_handle_echo"], [98, 2, 1, "", "doc_handle_event_report"], [99, 2, 1, "", "doc_handle_find"], [100, 2, 1, "", "doc_handle_fsm"], [101, 2, 1, "", "doc_handle_move"], [102, 2, 1, "", "doc_handle_n_get"], [103, 2, 1, "", "doc_handle_pdu"], [104, 2, 1, "", "doc_handle_set"], [105, 2, 1, "", "doc_handle_sop_common"], [106, 2, 1, "", "doc_handle_sop_extended"], [107, 2, 1, "", "doc_handle_store"], [108, 2, 1, "", "doc_handle_transport"], [109, 2, 1, "", "doc_handle_userid"]], "pynetdicom.acse": [[110, 3, 1, "", "ACSE"]], "pynetdicom.acse.ACSE": [[110, 4, 1, "", "__init__"], [110, 5, 1, "", "acceptor"], [110, 5, 1, "", "acse_timeout"], [110, 5, 1, "", "assoc"], [110, 5, 1, "", "dul"], [110, 4, 1, "", "is_aborted"], [110, 4, 1, "", "is_release_requested"], [110, 4, 1, "", "negotiate_association"], [110, 4, 1, "", "negotiate_release"], [110, 5, 1, "", "requestor"], [110, 4, 1, "", "send_abort"], [110, 4, 1, "", "send_accept"], [110, 4, 1, "", "send_ap_abort"], [110, 4, 1, "", "send_reject"], [110, 4, 1, "", "send_release"], [110, 4, 1, "", "send_request"], [110, 5, 1, "", "socket"]], "pynetdicom.ae": [[111, 3, 1, "", "ApplicationEntity"]], "pynetdicom.ae.ApplicationEntity": [[111, 4, 1, "", "__init__"], [111, 5, 1, "", "acse_timeout"], [111, 5, 1, "", "active_associations"], [111, 4, 1, "", "add_requested_context"], [111, 4, 1, "", "add_supported_context"], [111, 5, 1, "", "ae_title"], [111, 4, 1, "", "associate"], [111, 5, 1, "", "connection_timeout"], [111, 5, 1, "", "dimse_timeout"], [111, 5, 1, "", "implementation_class_uid"], [111, 5, 1, "", "implementation_version_name"], [111, 4, 1, "", "make_server"], [111, 5, 1, "", "maximum_associations"], [111, 5, 1, "", "maximum_pdu_size"], [111, 5, 1, "", "network_timeout"], [111, 4, 1, "", "remove_requested_context"], [111, 4, 1, "", "remove_supported_context"], [111, 5, 1, "", "requested_contexts"], [111, 5, 1, "", "require_called_aet"], [111, 5, 1, "", "require_calling_aet"], [111, 4, 1, "", "shutdown"], [111, 4, 1, "", "start_server"], [111, 5, 1, "", "supported_contexts"]], "pynetdicom.association": [[112, 3, 1, "", "Association"], [113, 3, 1, "", "ServiceUser"]], "pynetdicom.association.Association": [[112, 4, 1, "", "__init__"], [112, 4, 1, "", "abort"], [112, 5, 1, "", "accepted_contexts"], [112, 6, 1, "", "acceptor"], [112, 6, 1, "", "acse"], [112, 5, 1, "", "acse_timeout"], [112, 5, 1, "", "ae"], [112, 4, 1, "", "bind"], [112, 6, 1, "", "dimse"], [112, 5, 1, "", "dimse_timeout"], [112, 6, 1, "", "dul"], [112, 4, 1, "", "get_events"], [112, 4, 1, "", "get_handlers"], [112, 6, 1, "", "is_aborted"], [112, 5, 1, "", "is_acceptor"], [112, 6, 1, "", "is_established"], [112, 6, 1, "", "is_rejected"], [112, 6, 1, "", "is_released"], [112, 5, 1, "", "is_requestor"], [112, 4, 1, "", "kill"], [112, 5, 1, "", "local"], [112, 5, 1, "", "lock"], [112, 5, 1, "", "mode"], [112, 5, 1, "", "network_timeout"], [112, 6, 1, "", "network_timeout_response"], [112, 5, 1, "", "rejected_contexts"], [112, 4, 1, "", "release"], [112, 5, 1, "", "remote"], [112, 4, 1, "", "request"], [112, 6, 1, "", "requestor"], [112, 4, 1, "", "run_reactor"], [112, 4, 1, "", "send_c_cancel"], [112, 4, 1, "", "send_c_echo"], [112, 4, 1, "", "send_c_find"], [112, 4, 1, "", "send_c_get"], [112, 4, 1, "", "send_c_move"], [112, 4, 1, "", "send_c_store"], [112, 4, 1, "", "send_n_action"], [112, 4, 1, "", "send_n_create"], [112, 4, 1, "", "send_n_delete"], [112, 4, 1, "", "send_n_event_report"], [112, 4, 1, "", "send_n_get"], [112, 4, 1, "", "send_n_set"], [112, 4, 1, "", "set_socket"], [112, 4, 1, "", "unbind"]], "pynetdicom.association.ServiceUser": [[113, 4, 1, "", "__init__"], [113, 5, 1, "", "accepted_common_extended"], [113, 4, 1, "", "add_negotiation_item"], [113, 6, 1, "", "address"], [113, 5, 1, "", "ae_title"], [113, 5, 1, "", "asynchronous_operations"], [113, 5, 1, "", "extended_negotiation"], [113, 4, 1, "", "get_contexts"], [113, 5, 1, "", "implementation_class_uid"], [113, 5, 1, "", "implementation_version_name"], [113, 5, 1, "", "info"], [113, 5, 1, "", "is_acceptor"], [113, 5, 1, "", "is_requestor"], [113, 5, 1, "", "maximum_length"], [113, 5, 1, "", "mode"], [113, 6, 1, "", "port"], [113, 6, 1, "", "primitive"], [113, 4, 1, "", "remove_negotiation_item"], [113, 5, 1, "", "requested_contexts"], [113, 4, 1, "", "reset_negotiation_items"], [113, 5, 1, "", "role_selection"], [113, 5, 1, "", "sop_class_common_extended"], [113, 5, 1, "", "sop_class_extended"], [113, 5, 1, "", "supported_contexts"], [113, 5, 1, "", "user_identity"], [113, 5, 1, "", "user_information"], [113, 5, 1, "", "writeable"]], "pynetdicom.dimse": [[115, 3, 1, "", "DIMSEServiceProvider"]], "pynetdicom.dimse.DIMSEServiceProvider": [[115, 4, 1, "", "__init__"], [115, 5, 1, "", "assoc"], [115, 6, 1, "", "cancel_rq"], [115, 5, 1, "", "dimse_timeout"], [115, 5, 1, "", "dul"], [115, 4, 1, "", "get_msg"], [115, 5, 1, "", "maximum_pdu_size"], [115, 6, 1, "", "message"], [115, 6, 1, "", "msg_queue"], [115, 4, 1, "", "peek_msg"], [115, 4, 1, "", "receive_primitive"], [115, 4, 1, "", "send_msg"]], "pynetdicom.dimse_messages": [[116, 3, 1, "", "C_CANCEL_RQ"], [117, 3, 1, "", "C_ECHO_RQ"], [118, 3, 1, "", "C_ECHO_RSP"], [119, 3, 1, "", "C_FIND_RQ"], [120, 3, 1, "", "C_FIND_RSP"], [121, 3, 1, "", "C_GET_RQ"], [122, 3, 1, "", "C_GET_RSP"], [123, 3, 1, "", "C_MOVE_RQ"], [124, 3, 1, "", "C_MOVE_RSP"], [125, 3, 1, "", "C_STORE_RQ"], [126, 3, 1, "", "C_STORE_RSP"], [127, 3, 1, "", "N_ACTION_RQ"], [128, 3, 1, "", "N_ACTION_RSP"], [129, 3, 1, "", "N_CREATE_RQ"], [130, 3, 1, "", "N_CREATE_RSP"], [131, 3, 1, "", "N_DELETE_RQ"], [132, 3, 1, "", "N_DELETE_RSP"], [133, 3, 1, "", "N_EVENT_REPORT_RQ"], [134, 3, 1, "", "N_EVENT_REPORT_RSP"], [135, 3, 1, "", "N_GET_RQ"], [136, 3, 1, "", "N_GET_RSP"], [137, 3, 1, "", "N_SET_RQ"], [138, 3, 1, "", "N_SET_RSP"]], "pynetdicom.dimse_messages.C_CANCEL_RQ": [[116, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_ECHO_RQ": [[117, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_ECHO_RSP": [[118, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_FIND_RQ": [[119, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_FIND_RSP": [[120, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_GET_RQ": [[121, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_GET_RSP": [[122, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_MOVE_RQ": [[123, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_MOVE_RSP": [[124, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_STORE_RQ": [[125, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.C_STORE_RSP": [[126, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_ACTION_RQ": [[127, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_ACTION_RSP": [[128, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_CREATE_RQ": [[129, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_CREATE_RSP": [[130, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_DELETE_RQ": [[131, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_DELETE_RSP": [[132, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ": [[133, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP": [[134, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_GET_RQ": [[135, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_GET_RSP": [[136, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_SET_RQ": [[137, 4, 1, "", "__init__"]], "pynetdicom.dimse_messages.N_SET_RSP": [[138, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives": [[139, 3, 1, "", "C_CANCEL"], [140, 3, 1, "", "C_ECHO"], [141, 3, 1, "", "C_FIND"], [142, 3, 1, "", "C_GET"], [143, 3, 1, "", "C_MOVE"], [144, 3, 1, "", "C_STORE"], [145, 3, 1, "", "N_ACTION"], [146, 3, 1, "", "N_CREATE"], [147, 3, 1, "", "N_DELETE"], [148, 3, 1, "", "N_EVENT_REPORT"], [149, 3, 1, "", "N_GET"], [150, 3, 1, "", "N_SET"]], "pynetdicom.dimse_primitives.C_CANCEL": [[139, 5, 1, "", "MessageIDBeingRespondedTo"], [139, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_ECHO": [[140, 6, 1, "", "AffectedSOPClassUID"], [140, 6, 1, "", "ErrorComment"], [140, 6, 1, "", "MessageID"], [140, 6, 1, "", "MessageIDBeingRespondedTo"], [140, 6, 1, "", "Status"], [140, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_FIND": [[141, 6, 1, "", "AffectedSOPClassUID"], [141, 6, 1, "", "ErrorComment"], [141, 5, 1, "", "Identifier"], [141, 6, 1, "", "MessageID"], [141, 6, 1, "", "MessageIDBeingRespondedTo"], [141, 6, 1, "", "OffendingElement"], [141, 5, 1, "", "Priority"], [141, 6, 1, "", "Status"], [141, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_GET": [[142, 6, 1, "", "AffectedSOPClassUID"], [142, 6, 1, "", "ErrorComment"], [142, 5, 1, "", "Identifier"], [142, 6, 1, "", "MessageID"], [142, 6, 1, "", "MessageIDBeingRespondedTo"], [142, 5, 1, "", "NumberOfCompletedSuboperations"], [142, 5, 1, "", "NumberOfFailedSuboperations"], [142, 5, 1, "", "NumberOfRemainingSuboperations"], [142, 5, 1, "", "NumberOfWarningSuboperations"], [142, 6, 1, "", "OffendingElement"], [142, 5, 1, "", "Priority"], [142, 6, 1, "", "Status"], [142, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_MOVE": [[143, 6, 1, "", "AffectedSOPClassUID"], [143, 6, 1, "", "ErrorComment"], [143, 5, 1, "", "Identifier"], [143, 6, 1, "", "MessageID"], [143, 6, 1, "", "MessageIDBeingRespondedTo"], [143, 5, 1, "", "MoveDestination"], [143, 5, 1, "", "NumberOfCompletedSuboperations"], [143, 5, 1, "", "NumberOfFailedSuboperations"], [143, 5, 1, "", "NumberOfRemainingSuboperations"], [143, 5, 1, "", "NumberOfWarningSuboperations"], [143, 6, 1, "", "OffendingElement"], [143, 5, 1, "", "Priority"], [143, 6, 1, "", "Status"], [143, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.C_STORE": [[144, 6, 1, "", "AffectedSOPClassUID"], [144, 5, 1, "", "AffectedSOPInstanceUID"], [144, 5, 1, "", "DataSet"], [144, 6, 1, "", "ErrorComment"], [144, 6, 1, "", "MessageID"], [144, 6, 1, "", "MessageIDBeingRespondedTo"], [144, 5, 1, "", "MoveOriginatorApplicationEntityTitle"], [144, 5, 1, "", "MoveOriginatorMessageID"], [144, 6, 1, "", "OffendingElement"], [144, 5, 1, "", "Priority"], [144, 6, 1, "", "Status"], [144, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_ACTION": [[145, 5, 1, "", "ActionInformation"], [145, 5, 1, "", "ActionReply"], [145, 5, 1, "", "ActionTypeID"], [145, 6, 1, "", "AffectedSOPClassUID"], [145, 5, 1, "", "AffectedSOPInstanceUID"], [145, 6, 1, "", "MessageID"], [145, 6, 1, "", "MessageIDBeingRespondedTo"], [145, 5, 1, "", "RequestedSOPClassUID"], [145, 5, 1, "", "RequestedSOPInstanceUID"], [145, 6, 1, "", "Status"], [145, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_CREATE": [[146, 6, 1, "", "AffectedSOPClassUID"], [146, 5, 1, "", "AffectedSOPInstanceUID"], [146, 5, 1, "", "AttributeList"], [146, 6, 1, "", "MessageID"], [146, 6, 1, "", "MessageIDBeingRespondedTo"], [146, 6, 1, "", "Status"], [146, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_DELETE": [[147, 6, 1, "", "AffectedSOPClassUID"], [147, 5, 1, "", "AffectedSOPInstanceUID"], [147, 6, 1, "", "MessageID"], [147, 6, 1, "", "MessageIDBeingRespondedTo"], [147, 5, 1, "", "RequestedSOPClassUID"], [147, 5, 1, "", "RequestedSOPInstanceUID"], [147, 6, 1, "", "Status"], [147, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_EVENT_REPORT": [[148, 6, 1, "", "AffectedSOPClassUID"], [148, 5, 1, "", "AffectedSOPInstanceUID"], [148, 5, 1, "", "EventInformation"], [148, 5, 1, "", "EventReply"], [148, 5, 1, "", "EventTypeID"], [148, 6, 1, "", "MessageID"], [148, 6, 1, "", "MessageIDBeingRespondedTo"], [148, 6, 1, "", "Status"], [148, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_GET": [[149, 6, 1, "", "AffectedSOPClassUID"], [149, 5, 1, "", "AffectedSOPInstanceUID"], [149, 5, 1, "", "AttributeIdentifierList"], [149, 5, 1, "", "AttributeList"], [149, 6, 1, "", "MessageID"], [149, 6, 1, "", "MessageIDBeingRespondedTo"], [149, 5, 1, "", "RequestedSOPClassUID"], [149, 5, 1, "", "RequestedSOPInstanceUID"], [149, 6, 1, "", "Status"], [149, 4, 1, "", "__init__"]], "pynetdicom.dimse_primitives.N_SET": [[150, 6, 1, "", "AffectedSOPClassUID"], [150, 5, 1, "", "AffectedSOPInstanceUID"], [150, 5, 1, "", "AttributeList"], [150, 6, 1, "", "MessageID"], [150, 6, 1, "", "MessageIDBeingRespondedTo"], [150, 5, 1, "", "ModificationList"], [150, 5, 1, "", "RequestedSOPClassUID"], [150, 5, 1, "", "RequestedSOPInstanceUID"], [150, 6, 1, "", "Status"], [150, 4, 1, "", "__init__"]], "pynetdicom.dsutils": [[151, 2, 1, "", "decode"], [152, 2, 1, "", "encode"], [153, 2, 1, "", "pretty_dataset"], [154, 2, 1, "", "pretty_element"]], "pynetdicom.dul": [[155, 3, 1, "", "DULServiceProvider"]], "pynetdicom.dul.DULServiceProvider": [[155, 4, 1, "", "__init__"], [155, 6, 1, "", "artim_timer"], [155, 5, 1, "", "assoc"], [155, 6, 1, "", "event_queue"], [155, 4, 1, "", "idle_timer_expired"], [155, 4, 1, "", "kill_dul"], [155, 5, 1, "", "network_timeout"], [155, 4, 1, "", "peek_next_pdu"], [155, 4, 1, "", "receive_pdu"], [155, 4, 1, "", "run_reactor"], [155, 4, 1, "", "send_pdu"], [155, 6, 1, "", "socket"], [155, 6, 1, "", "state_machine"], [155, 4, 1, "", "stop_dul"], [155, 6, 1, "", "to_provider_queue"], [155, 6, 1, "", "to_user_queue"]], "pynetdicom.events": [[156, 3, 1, "", "Event"], [157, 3, 1, "", "InterventionEvent"], [158, 3, 1, "", "NotificationEvent"], [159, 2, 1, "", "trigger"]], "pynetdicom.events.Event": [[156, 4, 1, "", "__init__"], [156, 5, 1, "", "action_information"], [156, 5, 1, "", "action_type"], [156, 6, 1, "", "assoc"], [156, 5, 1, "", "attribute_identifiers"], [156, 5, 1, "", "attribute_list"], [156, 5, 1, "", "dataset"], [156, 5, 1, "", "dataset_path"], [156, 5, 1, "", "event"], [156, 5, 1, "", "event_information"], [156, 5, 1, "", "event_type"], [156, 5, 1, "", "file_meta"], [156, 5, 1, "", "identifier"], [156, 5, 1, "", "is_cancelled"], [156, 5, 1, "", "message_id"], [156, 5, 1, "", "modification_list"], [156, 5, 1, "", "move_destination"], [156, 6, 1, "", "timestamp"]], "pynetdicom.events.InterventionEvent": [[157, 4, 1, "", "__init__"], [157, 6, 1, "", "description"], [157, 6, 1, "", "is_intervention"], [157, 6, 1, "", "is_notification"], [157, 6, 1, "", "name"]], "pynetdicom.events.NotificationEvent": [[158, 4, 1, "", "__init__"], [158, 6, 1, "", "description"], [158, 6, 1, "", "is_intervention"], [158, 6, 1, "", "is_notification"], [158, 6, 1, "", "name"]], "pynetdicom.fsm": [[160, 2, 1, "", "AA_1"], [161, 2, 1, "", "AA_2"], [162, 2, 1, "", "AA_3"], [163, 2, 1, "", "AA_4"], [164, 2, 1, "", "AA_5"], [165, 2, 1, "", "AA_6"], [166, 2, 1, "", "AA_7"], [167, 2, 1, "", "AA_8"], [168, 2, 1, "", "AE_1"], [169, 2, 1, "", "AE_2"], [170, 2, 1, "", "AE_3"], [171, 2, 1, "", "AE_4"], [172, 2, 1, "", "AE_5"], [173, 2, 1, "", "AE_6"], [174, 2, 1, "", "AE_7"], [175, 2, 1, "", "AE_8"], [176, 2, 1, "", "AR_1"], [177, 2, 1, "", "AR_10"], [178, 2, 1, "", "AR_2"], [179, 2, 1, "", "AR_3"], [180, 2, 1, "", "AR_4"], [181, 2, 1, "", "AR_5"], [182, 2, 1, "", "AR_6"], [183, 2, 1, "", "AR_7"], [184, 2, 1, "", "AR_8"], [185, 2, 1, "", "AR_9"], [186, 2, 1, "", "DT_1"], [187, 2, 1, "", "DT_2"], [188, 3, 1, "", "StateMachine"]], "pynetdicom.fsm.StateMachine": [[188, 4, 1, "", "__init__"], [188, 6, 1, "", "current_state"], [188, 4, 1, "", "do_action"], [188, 6, 1, "", "dul"], [188, 4, 1, "", "transition"]], "pynetdicom.pdu": [[189, 3, 1, "", "A_ABORT_RQ"], [190, 3, 1, "", "A_ASSOCIATE_AC"], [191, 3, 1, "", "A_ASSOCIATE_RJ"], [192, 3, 1, "", "A_ASSOCIATE_RQ"], [193, 3, 1, "", "A_RELEASE_RP"], [194, 3, 1, "", "A_RELEASE_RQ"], [195, 3, 1, "", "P_DATA_TF"], [196, 3, 1, "", "PresentationDataValueItem"]], "pynetdicom.pdu.A_ABORT_RQ": [[189, 4, 1, "", "__init__"], [189, 4, 1, "", "from_primitive"], [189, 5, 1, "", "pdu_length"], [189, 6, 1, "", "pdu_type"], [189, 6, 1, "", "reason_diagnostic"], [189, 5, 1, "", "reason_str"], [189, 6, 1, "", "source"], [189, 5, 1, "", "source_str"], [189, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.A_ASSOCIATE_AC": [[190, 4, 1, "", "__init__"], [190, 5, 1, "", "application_context_name"], [190, 5, 1, "", "called_ae_title"], [190, 5, 1, "", "calling_ae_title"], [190, 4, 1, "", "from_primitive"], [190, 5, 1, "", "pdu_length"], [190, 6, 1, "", "pdu_type"], [190, 5, 1, "", "presentation_context"], [190, 6, 1, "", "protocol_version"], [190, 5, 1, "", "reserved_aec"], [190, 5, 1, "", "reserved_aet"], [190, 4, 1, "", "to_primitive"], [190, 5, 1, "", "user_information"], [190, 6, 1, "", "variable_items"]], "pynetdicom.pdu.A_ASSOCIATE_RJ": [[191, 4, 1, "", "__init__"], [191, 4, 1, "", "from_primitive"], [191, 5, 1, "", "pdu_length"], [191, 6, 1, "", "pdu_type"], [191, 6, 1, "", "reason_diagnostic"], [191, 5, 1, "", "reason_str"], [191, 6, 1, "", "result"], [191, 5, 1, "", "result_str"], [191, 6, 1, "", "source"], [191, 5, 1, "", "source_str"], [191, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.A_ASSOCIATE_RQ": [[192, 4, 1, "", "__init__"], [192, 5, 1, "", "application_context_name"], [192, 5, 1, "", "called_ae_title"], [192, 5, 1, "", "calling_ae_title"], [192, 4, 1, "", "from_primitive"], [192, 5, 1, "", "pdu_length"], [192, 6, 1, "", "pdu_type"], [192, 5, 1, "", "presentation_context"], [192, 6, 1, "", "protocol_version"], [192, 4, 1, "", "to_primitive"], [192, 5, 1, "", "user_information"], [192, 6, 1, "", "variable_items"]], "pynetdicom.pdu.A_RELEASE_RP": [[193, 4, 1, "", "__init__"], [193, 4, 1, "", "from_primitive"], [193, 5, 1, "", "pdu_length"], [193, 6, 1, "", "pdu_type"], [193, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.A_RELEASE_RQ": [[194, 4, 1, "", "__init__"], [194, 4, 1, "", "from_primitive"], [194, 5, 1, "", "pdu_length"], [194, 6, 1, "", "pdu_type"], [194, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.P_DATA_TF": [[195, 4, 1, "", "__init__"], [195, 4, 1, "", "from_primitive"], [195, 5, 1, "", "pdu_length"], [195, 6, 1, "", "pdu_type"], [195, 6, 1, "", "presentation_data_value_items"], [195, 4, 1, "", "to_primitive"]], "pynetdicom.pdu.PresentationDataValueItem": [[196, 4, 1, "", "__init__"], [196, 5, 1, "", "context_id"], [196, 5, 1, "", "data"], [196, 5, 1, "", "item_length"], [196, 5, 1, "", "item_type"], [196, 5, 1, "", "message_control_header_byte"]], "pynetdicom.pdu_items": [[197, 3, 1, "", "AbstractSyntaxSubItem"], [198, 3, 1, "", "ApplicationContextItem"], [199, 3, 1, "", "AsynchronousOperationsWindowSubItem"], [200, 3, 1, "", "ImplementationClassUIDSubItem"], [201, 3, 1, "", "ImplementationVersionNameSubItem"], [202, 3, 1, "", "MaximumLengthSubItem"], [203, 3, 1, "", "PresentationContextItemAC"], [204, 3, 1, "", "PresentationContextItemRQ"], [205, 3, 1, "", "PresentationDataValueItem"], [206, 3, 1, "", "SCP_SCU_RoleSelectionSubItem"], [207, 3, 1, "", "SOPClassCommonExtendedNegotiationSubItem"], [208, 3, 1, "", "SOPClassExtendedNegotiationSubItem"], [209, 3, 1, "", "TransferSyntaxSubItem"], [210, 3, 1, "", "UserIdentitySubItemAC"], [211, 3, 1, "", "UserIdentitySubItemRQ"], [212, 3, 1, "", "UserInformationItem"]], "pynetdicom.pdu_items.AbstractSyntaxSubItem": [[197, 4, 1, "", "__init__"], [197, 5, 1, "", "abstract_syntax"], [197, 5, 1, "", "abstract_syntax_name"], [197, 5, 1, "", "item_length"]], "pynetdicom.pdu_items.ApplicationContextItem": [[198, 4, 1, "", "__init__"], [198, 5, 1, "", "application_context_name"], [198, 5, 1, "", "item_length"]], "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem": [[199, 4, 1, "", "__init__"], [199, 4, 1, "", "from_primitive"], [199, 5, 1, "", "item_length"], [199, 5, 1, "", "max_operations_invoked"], [199, 5, 1, "", "max_operations_performed"], [199, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.ImplementationClassUIDSubItem": [[200, 4, 1, "", "__init__"], [200, 4, 1, "", "from_primitive"], [200, 5, 1, "", "implementation_class_uid"], [200, 5, 1, "", "item_length"], [200, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.ImplementationVersionNameSubItem": [[201, 4, 1, "", "__init__"], [201, 4, 1, "", "from_primitive"], [201, 5, 1, "", "implementation_version_name"], [201, 5, 1, "", "item_length"], [201, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.MaximumLengthSubItem": [[202, 4, 1, "", "__init__"], [202, 4, 1, "", "from_primitive"], [202, 5, 1, "", "item_length"], [202, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.PresentationContextItemAC": [[203, 4, 1, "", "__init__"], [203, 5, 1, "", "context_id"], [203, 4, 1, "", "from_primitive"], [203, 5, 1, "", "item_length"], [203, 5, 1, "", "result"], [203, 5, 1, "", "result_str"], [203, 4, 1, "", "to_primitive"], [203, 5, 1, "", "transfer_syntax"]], "pynetdicom.pdu_items.PresentationContextItemRQ": [[204, 4, 1, "", "__init__"], [204, 5, 1, "", "abstract_syntax"], [204, 5, 1, "", "context_id"], [204, 4, 1, "", "from_primitive"], [204, 5, 1, "", "item_length"], [204, 4, 1, "", "to_primitive"], [204, 5, 1, "", "transfer_syntax"]], "pynetdicom.pdu_items.PresentationDataValueItem": [[205, 4, 1, "", "__init__"], [205, 5, 1, "", "context_id"], [205, 5, 1, "", "data"], [205, 5, 1, "", "item_length"], [205, 5, 1, "", "item_type"], [205, 5, 1, "", "message_control_header_byte"]], "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem": [[206, 4, 1, "", "__init__"], [206, 4, 1, "", "from_primitive"], [206, 5, 1, "", "item_length"], [206, 5, 1, "", "scp"], [206, 5, 1, "", "scp_role"], [206, 5, 1, "", "scu"], [206, 5, 1, "", "scu_role"], [206, 5, 1, "", "sop_class_uid"], [206, 4, 1, "", "to_primitive"], [206, 5, 1, "", "uid"], [206, 5, 1, "", "uid_length"]], "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem": [[207, 4, 1, "", "__init__"], [207, 4, 1, "", "from_primitive"], [207, 5, 1, "", "item_length"], [207, 5, 1, "", "related_general_sop_class_identification"], [207, 5, 1, "", "related_general_sop_class_identification_length"], [207, 5, 1, "", "service_class_uid"], [207, 5, 1, "", "service_class_uid_length"], [207, 5, 1, "", "sop_class_uid"], [207, 5, 1, "", "sop_class_uid_length"], [207, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem": [[208, 4, 1, "", "__init__"], [208, 5, 1, "", "app_info"], [208, 4, 1, "", "from_primitive"], [208, 5, 1, "", "item_length"], [208, 5, 1, "", "sop_class_uid"], [208, 5, 1, "", "sop_class_uid_length"], [208, 4, 1, "", "to_primitive"], [208, 5, 1, "", "uid"]], "pynetdicom.pdu_items.TransferSyntaxSubItem": [[209, 4, 1, "", "__init__"], [209, 5, 1, "", "item_length"], [209, 5, 1, "", "transfer_syntax"], [209, 5, 1, "", "transfer_syntax_name"]], "pynetdicom.pdu_items.UserIdentitySubItemAC": [[210, 4, 1, "", "__init__"], [210, 4, 1, "", "from_primitive"], [210, 5, 1, "", "item_length"], [210, 5, 1, "", "response"], [210, 5, 1, "", "server_response_length"], [210, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.UserIdentitySubItemRQ": [[211, 4, 1, "", "__init__"], [211, 4, 1, "", "from_primitive"], [211, 5, 1, "", "id_type"], [211, 5, 1, "", "id_type_str"], [211, 5, 1, "", "item_length"], [211, 5, 1, "", "primary"], [211, 5, 1, "", "primary_field_length"], [211, 5, 1, "", "response_requested"], [211, 5, 1, "", "secondary"], [211, 5, 1, "", "secondary_field_length"], [211, 4, 1, "", "to_primitive"]], "pynetdicom.pdu_items.UserInformationItem": [[212, 4, 1, "", "__init__"], [212, 5, 1, "", "async_ops_window"], [212, 5, 1, "", "common_ext_neg"], [212, 5, 1, "", "ext_neg"], [212, 4, 1, "", "from_primitive"], [212, 5, 1, "", "implementation_class_uid"], [212, 5, 1, "", "implementation_version_name"], [212, 5, 1, "", "item_length"], [212, 5, 1, "", "maximum_length"], [212, 5, 1, "", "role_selection"], [212, 4, 1, "", "to_primitive"], [212, 5, 1, "", "user_identity"]], "pynetdicom.pdu_primitives": [[213, 3, 1, "", "A_ABORT"], [214, 3, 1, "", "A_ASSOCIATE"], [215, 3, 1, "", "A_P_ABORT"], [216, 3, 1, "", "A_RELEASE"], [217, 3, 1, "", "AsynchronousOperationsWindowNegotiation"], [218, 3, 1, "", "ImplementationClassUIDNotification"], [219, 3, 1, "", "ImplementationVersionNameNotification"], [220, 3, 1, "", "MaximumLengthNotification"], [221, 3, 1, "", "P_DATA"], [222, 3, 1, "", "SCP_SCU_RoleSelectionNegotiation"], [223, 3, 1, "", "SOPClassCommonExtendedNegotiation"], [224, 3, 1, "", "SOPClassExtendedNegotiation"], [225, 3, 1, "", "UserIdentityNegotiation"]], "pynetdicom.pdu_primitives.A_ABORT": [[213, 4, 1, "", "__init__"], [213, 5, 1, "", "abort_source"]], "pynetdicom.pdu_primitives.A_ASSOCIATE": [[214, 4, 1, "", "__init__"], [214, 5, 1, "", "application_context_name"], [214, 5, 1, "", "called_ae_title"], [214, 5, 1, "", "called_presentation_address"], [214, 5, 1, "", "calling_ae_title"], [214, 5, 1, "", "calling_presentation_address"], [214, 5, 1, "", "diagnostic"], [214, 5, 1, "", "implementation_class_uid"], [214, 5, 1, "", "maximum_length_received"], [214, 5, 1, "", "mode"], [214, 5, 1, "", "presentation_context_definition_list"], [214, 5, 1, "", "presentation_context_definition_results_list"], [214, 5, 1, "", "presentation_requirements"], [214, 5, 1, "", "reason_str"], [214, 5, 1, "", "responding_ae_title"], [214, 5, 1, "", "responding_presentation_address"], [214, 5, 1, "", "result"], [214, 5, 1, "", "result_source"], [214, 5, 1, "", "result_str"], [214, 5, 1, "", "session_requirements"], [214, 5, 1, "", "source_str"], [214, 5, 1, "", "user_information"]], "pynetdicom.pdu_primitives.A_P_ABORT": [[215, 4, 1, "", "__init__"], [215, 5, 1, "", "provider_reason"]], "pynetdicom.pdu_primitives.A_RELEASE": [[216, 4, 1, "", "__init__"], [216, 5, 1, "", "reason"], [216, 5, 1, "", "result"]], "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation": [[217, 4, 1, "", "__init__"], [217, 4, 1, "", "from_primitive"], [217, 5, 1, "", "maximum_number_operations_invoked"], [217, 5, 1, "", "maximum_number_operations_performed"]], "pynetdicom.pdu_primitives.ImplementationClassUIDNotification": [[218, 4, 1, "", "__init__"], [218, 4, 1, "", "from_primitive"], [218, 5, 1, "", "implementation_class_uid"]], "pynetdicom.pdu_primitives.ImplementationVersionNameNotification": [[219, 4, 1, "", "__init__"], [219, 4, 1, "", "from_primitive"], [219, 5, 1, "", "implementation_version_name"]], "pynetdicom.pdu_primitives.MaximumLengthNotification": [[220, 4, 1, "", "__init__"], [220, 4, 1, "", "from_primitive"], [220, 5, 1, "", "maximum_length_received"]], "pynetdicom.pdu_primitives.P_DATA": [[221, 4, 1, "", "__init__"], [221, 5, 1, "", "presentation_data_value_list"]], "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation": [[222, 4, 1, "", "__init__"], [222, 4, 1, "", "from_primitive"], [222, 5, 1, "", "scp_role"], [222, 5, 1, "", "scu_role"], [222, 5, 1, "", "sop_class_uid"]], "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation": [[223, 4, 1, "", "__init__"], [223, 4, 1, "", "from_primitive"], [223, 5, 1, "", "related_general_sop_class_identification"], [223, 5, 1, "", "service_class_uid"], [223, 5, 1, "", "sop_class_uid"]], "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation": [[224, 4, 1, "", "__init__"], [224, 4, 1, "", "from_primitive"], [224, 5, 1, "", "service_class_application_information"], [224, 5, 1, "", "sop_class_uid"]], "pynetdicom.pdu_primitives.UserIdentityNegotiation": [[225, 4, 1, "", "__init__"], [225, 4, 1, "", "from_primitive"], [225, 5, 1, "", "positive_response_requested"], [225, 5, 1, "", "primary_field"], [225, 5, 1, "", "secondary_field"], [225, 5, 1, "", "server_response"], [225, 5, 1, "", "user_identity_type"]], "pynetdicom.presentation": [[226, 1, 1, "", "AllStoragePresentationContexts"], [227, 1, 1, "", "ApplicationEventLoggingPresentationContexts"], [228, 1, 1, "", "BasicWorklistManagementPresentationContexts"], [229, 1, 1, "", "ColorPalettePresentationContexts"], [230, 1, 1, "", "DefinedProcedureProtocolPresentationContexts"], [231, 1, 1, "", "DisplaySystemPresentationContexts"], [232, 1, 1, "", "HangingProtocolPresentationContexts"], [233, 1, 1, "", "ImplantTemplatePresentationContexts"], [234, 1, 1, "", "InstanceAvailabilityPresentationContexts"], [235, 1, 1, "", "MediaCreationManagementPresentationContexts"], [236, 1, 1, "", "MediaStoragePresentationContexts"], [237, 1, 1, "", "ModalityPerformedPresentationContexts"], [238, 1, 1, "", "NonPatientObjectPresentationContexts"], [239, 3, 1, "", "PresentationContext"], [240, 3, 1, "", "PresentationContextTuple"], [241, 1, 1, "", "PrintManagementPresentationContexts"], [242, 1, 1, "", "ProcedureStepPresentationContexts"], [243, 1, 1, "", "ProtocolApprovalPresentationContexts"], [244, 1, 1, "", "QueryRetrievePresentationContexts"], [245, 1, 1, "", "RTMachineVerificationPresentationContexts"], [246, 1, 1, "", "RelevantPatientInformationPresentationContexts"], [247, 1, 1, "", "StorageCommitmentPresentationContexts"], [248, 1, 1, "", "StoragePresentationContexts"], [249, 1, 1, "", "SubstanceAdministrationPresentationContexts"], [250, 1, 1, "", "UnifiedProcedurePresentationContexts"], [251, 1, 1, "", "VerificationPresentationContexts"], [252, 2, 1, "", "build_context"], [253, 2, 1, "", "build_role"], [254, 2, 1, "", "negotiate_as_acceptor"], [255, 2, 1, "", "negotiate_as_requestor"]], "pynetdicom.presentation.PresentationContext": [[239, 4, 1, "", "__init__"], [239, 5, 1, "", "abstract_syntax"], [239, 4, 1, "", "add_transfer_syntax"], [239, 5, 1, "", "as_scp"], [239, 5, 1, "", "as_scu"], [239, 5, 1, "", "as_tuple"], [239, 5, 1, "", "context_id"], [239, 6, 1, "", "result"], [239, 5, 1, "", "scp_role"], [239, 5, 1, "", "scu_role"], [239, 5, 1, "", "status"], [239, 5, 1, "", "transfer_syntax"]], "pynetdicom.presentation.PresentationContextTuple": [[240, 4, 1, "", "__init__"], [240, 6, 1, "", "abstract_syntax"], [240, 6, 1, "", "context_id"], [240, 6, 1, "", "transfer_syntax"]], "pynetdicom.service_class": [[256, 3, 1, "", "BasicWorklistManagementServiceClass"], [257, 3, 1, "", "ColorPaletteQueryRetrieveServiceClass"], [258, 3, 1, "", "DefinedProcedureProtocolQueryRetrieveServiceClass"], [259, 3, 1, "", "HangingProtocolQueryRetrieveServiceClass"], [260, 3, 1, "", "ImplantTemplateQueryRetrieveServiceClass"], [261, 3, 1, "", "NonPatientObjectStorageServiceClass"], [262, 3, 1, "", "ProtocolApprovalQueryRetrieveServiceClass"], [263, 3, 1, "", "QueryRetrieveServiceClass"], [264, 3, 1, "", "RelevantPatientInformationQueryServiceClass"], [265, 3, 1, "", "StorageServiceClass"], [266, 3, 1, "", "SubstanceAdministrationQueryServiceClass"], [267, 3, 1, "", "VerificationServiceClass"]], "pynetdicom.service_class.BasicWorklistManagementServiceClass": [[256, 4, 1, "", "SCP"], [256, 4, 1, "", "__init__"]], "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass": [[257, 4, 1, "", "__init__"]], "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass": [[258, 4, 1, "", "__init__"]], "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass": [[259, 4, 1, "", "__init__"]], "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass": [[260, 4, 1, "", "__init__"]], "pynetdicom.service_class.NonPatientObjectStorageServiceClass": [[261, 4, 1, "", "__init__"]], "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass": [[262, 4, 1, "", "__init__"]], "pynetdicom.service_class.QueryRetrieveServiceClass": [[263, 4, 1, "", "SCP"], [263, 4, 1, "", "__init__"]], "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass": [[264, 4, 1, "", "SCP"], [264, 4, 1, "", "__init__"]], "pynetdicom.service_class.StorageServiceClass": [[265, 4, 1, "", "SCP"], [265, 4, 1, "", "__init__"]], "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass": [[266, 4, 1, "", "SCP"], [266, 4, 1, "", "__init__"]], "pynetdicom.service_class.VerificationServiceClass": [[267, 4, 1, "", "SCP"], [267, 4, 1, "", "__init__"]], "pynetdicom.service_class_n": [[268, 3, 1, "", "ApplicationEventLoggingServiceClass"], [269, 3, 1, "", "DisplaySystemManagementServiceClass"], [270, 3, 1, "", "InstanceAvailabilityNotificationServiceClass"], [271, 3, 1, "", "MediaCreationManagementServiceClass"], [272, 3, 1, "", "PrintManagementServiceClass"], [273, 3, 1, "", "ProcedureStepServiceClass"], [274, 3, 1, "", "RTMachineVerificationServiceClass"], [275, 3, 1, "", "StorageCommitmentServiceClass"], [276, 3, 1, "", "UnifiedProcedureStepServiceClass"]], "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass": [[268, 4, 1, "", "SCP"], [268, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.DisplaySystemManagementServiceClass": [[269, 4, 1, "", "SCP"], [269, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass": [[270, 4, 1, "", "SCP"], [270, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.MediaCreationManagementServiceClass": [[271, 4, 1, "", "SCP"], [271, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.PrintManagementServiceClass": [[272, 4, 1, "", "SCP"], [272, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.ProcedureStepServiceClass": [[273, 4, 1, "", "SCP"], [273, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.RTMachineVerificationServiceClass": [[274, 4, 1, "", "SCP"], [274, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.StorageCommitmentServiceClass": [[275, 4, 1, "", "SCP"], [275, 4, 1, "", "__init__"]], "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass": [[276, 4, 1, "", "SCP"], [276, 4, 1, "", "__init__"]], "pynetdicom.sop_class": [[277, 1, 1, "", "AcquisitionContextSRStorage"], [278, 1, 1, "", "AdvancedBlendingPresentationStateStorage"], [279, 1, 1, "", "AmbulatoryECGWaveformStorage"], [280, 1, 1, "", "ArterialPulseWaveformStorage"], [281, 1, 1, "", "AutorefractionMeasurementsStorage"], [282, 1, 1, "", "BasicAnnotationBox"], [283, 1, 1, "", "BasicColorImageBox"], [284, 1, 1, "", "BasicColorPrintManagementMeta"], [285, 1, 1, "", "BasicFilmBox"], [286, 1, 1, "", "BasicFilmSession"], [287, 1, 1, "", "BasicGrayscaleImageBox"], [288, 1, 1, "", "BasicGrayscalePrintManagementMeta"], [289, 1, 1, "", "BasicStructuredDisplayStorage"], [290, 1, 1, "", "BasicTextSRStorage"], [291, 1, 1, "", "BasicVoiceAudioWaveformStorage"], [292, 1, 1, "", "BlendingSoftcopyPresentationStateStorage"], [293, 1, 1, "", "BodyPositionWaveformStorage"], [294, 1, 1, "", "BreastImagingRelevantPatientInformationQuery"], [295, 1, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [296, 1, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [297, 1, 1, "", "BreastTomosynthesisImageStorage"], [298, 1, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [299, 1, 1, "", "CArmPhotonElectronRadiationStorage"], [300, 1, 1, "", "CTDefinedProcedureProtocolStorage"], [301, 1, 1, "", "CTImageStorage"], [302, 1, 1, "", "CTPerformedProcedureProtocolStorage"], [303, 1, 1, "", "CardiacElectrophysiologyWaveformStorage"], [304, 1, 1, "", "CardiacRelevantPatientInformationQuery"], [305, 1, 1, "", "ChestCADSRStorage"], [306, 1, 1, "", "ColonCADSRStorage"], [307, 1, 1, "", "ColorPaletteInformationModelFind"], [308, 1, 1, "", "ColorPaletteInformationModelGet"], [309, 1, 1, "", "ColorPaletteInformationModelMove"], [310, 1, 1, "", "ColorPaletteStorage"], [311, 1, 1, "", "ColorSoftcopyPresentationStateStorage"], [312, 1, 1, "", "CompositeInstanceRetrieveWithoutBulkDataGet"], [313, 1, 1, "", "CompositeInstanceRootRetrieveGet"], [314, 1, 1, "", "CompositeInstanceRootRetrieveMove"], [315, 1, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [316, 1, 1, "", "Comprehensive3DSRStorage"], [317, 1, 1, "", "ComprehensiveSRStorage"], [318, 1, 1, "", "ComputedRadiographyImageStorage"], [319, 1, 1, "", "ContentAssessmentResultsStorage"], [320, 1, 1, "", "CornealTopographyMapStorage"], [321, 1, 1, "", "DefinedProcedureProtocolInformationModelFind"], [322, 1, 1, "", "DefinedProcedureProtocolInformationModelGet"], [323, 1, 1, "", "DefinedProcedureProtocolInformationModelMove"], [324, 1, 1, "", "DeformableSpatialRegistrationStorage"], [325, 1, 1, "", "DermoscopicPhotographyImageStorage"], [326, 1, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [327, 1, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [328, 1, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [329, 1, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [330, 1, 1, "", "DigitalXRayImageStorageForPresentation"], [331, 1, 1, "", "DigitalXRayImageStorageForProcessing"], [332, 1, 1, "", "DisplaySystem"], [333, 1, 1, "", "DisplaySystemInstance"], [334, 1, 1, "", "ElectromyogramWaveformStorage"], [335, 1, 1, "", "ElectrooculogramWaveformStorage"], [336, 1, 1, "", "EncapsulatedCDAStorage"], [337, 1, 1, "", "EncapsulatedMTLStorage"], [338, 1, 1, "", "EncapsulatedOBJStorage"], [339, 1, 1, "", "EncapsulatedPDFStorage"], [340, 1, 1, "", "EncapsulatedSTLStorage"], [341, 1, 1, "", "EnhancedCTImageStorage"], [342, 1, 1, "", "EnhancedMRColorImageStorage"], [343, 1, 1, "", "EnhancedMRImageStorage"], [344, 1, 1, "", "EnhancedPETImageStorage"], [345, 1, 1, "", "EnhancedSRStorage"], [346, 1, 1, "", "EnhancedUSVolumeStorage"], [347, 1, 1, "", "EnhancedXAImageStorage"], [348, 1, 1, "", "EnhancedXRFImageStorage"], [349, 1, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [350, 1, 1, "", "ExtensibleSRStorage"], [351, 1, 1, "", "GeneralAudioWaveformStorage"], [352, 1, 1, "", "GeneralECGWaveformStorage"], [353, 1, 1, "", "GeneralRelevantPatientInformationQuery"], [354, 1, 1, "", "GenericImplantTemplateInformationModelFind"], [355, 1, 1, "", "GenericImplantTemplateInformationModelGet"], [356, 1, 1, "", "GenericImplantTemplateInformationModelMove"], [357, 1, 1, "", "GenericImplantTemplateStorage"], [358, 1, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [359, 1, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [360, 1, 1, "", "HangingProtocolInformationModelFind"], [361, 1, 1, "", "HangingProtocolInformationModelGet"], [362, 1, 1, "", "HangingProtocolInformationModelMove"], [363, 1, 1, "", "HangingProtocolStorage"], [364, 1, 1, "", "HemodynamicWaveformStorage"], [365, 1, 1, "", "ImplantAssemblyTemplateInformationModelFind"], [366, 1, 1, "", "ImplantAssemblyTemplateInformationModelGet"], [367, 1, 1, "", "ImplantAssemblyTemplateInformationModelMove"], [368, 1, 1, "", "ImplantAssemblyTemplateStorage"], [369, 1, 1, "", "ImplantTemplateGroupInformationModelFind"], [370, 1, 1, "", "ImplantTemplateGroupInformationModelGet"], [371, 1, 1, "", "ImplantTemplateGroupInformationModelMove"], [372, 1, 1, "", "ImplantTemplateGroupStorage"], [373, 1, 1, "", "ImplantationPlanSRStorage"], [374, 1, 1, "", "InstanceAvailabilityNotification"], [375, 1, 1, "", "IntraocularLensCalculationsStorage"], [376, 1, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [377, 1, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [378, 1, 1, "", "KeratometryMeasurementsStorage"], [379, 1, 1, "", "KeyObjectSelectionDocumentStorage"], [380, 1, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [381, 1, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [382, 1, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [383, 1, 1, "", "LensometryMeasurementsStorage"], [384, 1, 1, "", "MRImageStorage"], [385, 1, 1, "", "MRSpectroscopyStorage"], [386, 1, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [387, 1, 1, "", "MammographyCADSRStorage"], [388, 1, 1, "", "MediaCreationManagement"], [389, 1, 1, "", "MediaStorageDirectoryStorage"], [390, 1, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [391, 1, 1, "", "ModalityPerformedProcedureStep"], [392, 1, 1, "", "ModalityPerformedProcedureStepNotification"], [393, 1, 1, "", "ModalityPerformedProcedureStepRetrieve"], [394, 1, 1, "", "ModalityWorklistInformationFind"], [395, 1, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [396, 1, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [397, 1, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [398, 1, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [399, 1, 1, "", "MultichannelRespiratoryWaveformStorage"], [400, 1, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [401, 1, 1, "", "NuclearMedicineImageStorage"], [402, 1, 1, "", "OphthalmicAxialMeasurementsStorage"], [403, 1, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [404, 1, 1, "", "OphthalmicPhotography16BitImageStorage"], [405, 1, 1, "", "OphthalmicPhotography8BitImageStorage"], [406, 1, 1, "", "OphthalmicThicknessMapStorage"], [407, 1, 1, "", "OphthalmicTomographyImageStorage"], [408, 1, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [409, 1, 1, "", "OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [410, 1, 1, "", "ParametricMapStorage"], [411, 1, 1, "", "PatientRadiationDoseSRStorage"], [412, 1, 1, "", "PatientRootQueryRetrieveInformationModelFind"], [413, 1, 1, "", "PatientRootQueryRetrieveInformationModelGet"], [414, 1, 1, "", "PatientRootQueryRetrieveInformationModelMove"], [415, 1, 1, "", "PatientStudyOnlyQueryRetrieveInformationModelFind"], [416, 1, 1, "", "PatientStudyOnlyQueryRetrieveInformationModelGet"], [417, 1, 1, "", "PatientStudyOnlyQueryRetrieveInformationModelMove"], [418, 1, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [419, 1, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [420, 1, 1, "", "PositronEmissionTomographyImageStorage"], [421, 1, 1, "", "PresentationLUT"], [422, 1, 1, "", "PrintJob"], [423, 1, 1, "", "Printer"], [424, 1, 1, "", "PrinterConfigurationRetrieval"], [425, 1, 1, "", "PrinterConfigurationRetrievalInstance"], [426, 1, 1, "", "PrinterInstance"], [427, 1, 1, "", "ProceduralEventLogging"], [428, 1, 1, "", "ProceduralEventLoggingInstance"], [429, 1, 1, "", "ProcedureLogStorage"], [430, 1, 1, "", "ProductCharacteristicsQuery"], [431, 1, 1, "", "ProtocolApprovalInformationModelFind"], [432, 1, 1, "", "ProtocolApprovalInformationModelGet"], [433, 1, 1, "", "ProtocolApprovalInformationModelMove"], [434, 1, 1, "", "ProtocolApprovalStorage"], [435, 1, 1, "", "PseudoColorSoftcopyPresentationStageStorage"], [436, 1, 1, "", "RTBeamsDeliveryInstructionStorage"], [437, 1, 1, "", "RTBeamsTreatmentRecordStorage"], [438, 1, 1, "", "RTBrachyApplicationSetupDeliveryInstructionsStorage"], [439, 1, 1, "", "RTBrachyTreatmentRecordStorage"], [440, 1, 1, "", "RTConventionalMachineVerification"], [441, 1, 1, "", "RTDoseStorage"], [442, 1, 1, "", "RTImageStorage"], [443, 1, 1, "", "RTIonBeamsTreatmentRecordStorage"], [444, 1, 1, "", "RTIonMachineVerification"], [445, 1, 1, "", "RTIonPlanStorage"], [446, 1, 1, "", "RTPhysicianIntentStorage"], [447, 1, 1, "", "RTPlanStorage"], [448, 1, 1, "", "RTRadiationRecordSetStorage"], [449, 1, 1, "", "RTRadiationSalvageRecordStorage"], [450, 1, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [451, 1, 1, "", "RTRadiationSetStorage"], [452, 1, 1, "", "RTSegmentAnnotationStorage"], [453, 1, 1, "", "RTStructureSetStorage"], [454, 1, 1, "", "RTTreatmentPreparationStorage"], [455, 1, 1, "", "RTTreatmentSummaryRecordStorage"], [456, 1, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [457, 1, 1, "", "RawDataStorage"], [458, 1, 1, "", "RealWorldValueMappingStorage"], [459, 1, 1, "", "RespiratoryWaveformStorage"], [460, 1, 1, "", "RoboticArmRadiationRecordStorage"], [461, 1, 1, "", "RoboticArmRadiationStorage"], [462, 1, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [463, 3, 1, "", "SOPClass"], [464, 1, 1, "", "SecondaryCaptureImageStorage"], [465, 1, 1, "", "SegmentationStorage"], [466, 1, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [467, 1, 1, "", "SimplifiedAdultEchoSRStorage"], [468, 1, 1, "", "SleepElectroencephalogramWaveformStorage"], [469, 1, 1, "", "SpatialFiducialsStorage"], [470, 1, 1, "", "SpatialRegistrationStorage"], [471, 1, 1, "", "SpectaclePrescriptionReportStorage"], [472, 1, 1, "", "StereometricRelationshipStorage"], [473, 1, 1, "", "StorageCommitmentPushModel"], [474, 1, 1, "", "StorageCommitmentPushModelInstance"], [475, 1, 1, "", "StudyRootQueryRetrieveInformationModelFind"], [476, 1, 1, "", "StudyRootQueryRetrieveInformationModelGet"], [477, 1, 1, "", "StudyRootQueryRetrieveInformationModelMove"], [478, 1, 1, "", "SubjectiveRefractionMeasurementsStorage"], [479, 1, 1, "", "SubstanceAdministrationLogging"], [480, 1, 1, "", "SubstanceAdministrationLoggingInstance"], [481, 1, 1, "", "SubstanceApprovalQuery"], [482, 1, 1, "", "SurfaceScanMeshStorage"], [483, 1, 1, "", "SurfaceScanPointCloudStorage"], [484, 1, 1, "", "SurfaceSegmentationStorage"], [485, 1, 1, "", "TomotherapeuticRadiationRecordStorage"], [486, 1, 1, "", "TomotherapeuticRadiationStorage"], [487, 1, 1, "", "TractographyResultsStorage"], [488, 1, 1, "", "TwelveLeadECGWaveformStorage"], [489, 1, 1, "", "UPSFilteredGlobalSubscriptionInstance"], [490, 1, 1, "", "UPSGlobalSubscriptionInstance"], [491, 1, 1, "", "UltrasoundImageStorage"], [492, 1, 1, "", "UltrasoundMultiFrameImageStorage"], [493, 1, 1, "", "UnifiedProcedureStepEvent"], [494, 1, 1, "", "UnifiedProcedureStepPull"], [495, 1, 1, "", "UnifiedProcedureStepPush"], [496, 1, 1, "", "UnifiedProcedureStepQuery"], [497, 1, 1, "", "UnifiedProcedureStepWatch"], [498, 1, 1, "", "VLEndoscopicImageStorage"], [499, 1, 1, "", "VLMicroscopicImageStorage"], [500, 1, 1, "", "VLPhotographicImageStorage"], [501, 1, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [502, 1, 1, "", "VLWholeSlideMicroscopyImageStorage"], [503, 1, 1, "", "Verification"], [504, 1, 1, "", "VideoEndoscopicImageStorage"], [505, 1, 1, "", "VideoMicroscopicImageStorage"], [506, 1, 1, "", "VideoPhotographicImageStorage"], [507, 1, 1, "", "VisualAcuityMeasurementsStorage"], [508, 1, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [509, 1, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [510, 1, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [511, 1, 1, "", "XADefinedProcedureProtocolStorage"], [512, 1, 1, "", "XAPerformedProcedureProtocolStorage"], [513, 1, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [514, 1, 1, "", "XRay3DAngiographicImageStorage"], [515, 1, 1, "", "XRay3DCraniofacialImageStorage"], [516, 1, 1, "", "XRayAngiographicImageStorage"], [517, 1, 1, "", "XRayRadiationDoseSRStorage"], [518, 1, 1, "", "XRayRadiofluoroscopicImageStorage"], [519, 2, 1, "", "register_uid"], [520, 2, 1, "", "uid_to_service_class"], [521, 2, 1, "", "uid_to_sop_class"]], "pynetdicom.sop_class.SOPClass": [[463, 4, 1, "", "__init__"], [463, 5, 1, "", "service_class"]], "pynetdicom.status": [[522, 3, 1, "", "Status"], [523, 2, 1, "", "code_to_category"], [524, 2, 1, "", "code_to_status"]], "pynetdicom.status.Status": [[522, 6, 1, "", "CANCEL"], [522, 6, 1, "", "MOVE_DESTINATION_UNKNOWN"], [522, 6, 1, "", "PENDING"], [522, 6, 1, "", "SUCCESS"], [522, 4, 1, "", "__init__"], [522, 4, 1, "", "add"]], "pynetdicom.timer": [[525, 3, 1, "", "Timer"]], "pynetdicom.timer.Timer": [[525, 4, 1, "", "__init__"], [525, 5, 1, "", "expired"], [525, 5, 1, "", "remaining"], [525, 4, 1, "", "restart"], [525, 4, 1, "", "start"], [525, 4, 1, "", "stop"], [525, 5, 1, "", "timeout"]], "pynetdicom.transport": [[526, 3, 1, "", "AssociationServer"], [527, 3, 1, "", "AssociationSocket"], [528, 3, 1, "", "RequestHandler"], [529, 3, 1, "", "T_CONNECT"], [530, 3, 1, "", "ThreadedAssociationServer"]], "pynetdicom.transport.AssociationServer": [[526, 4, 1, "", "__init__"], [526, 5, 1, "", "active_associations"], [526, 6, 1, "", "ae"], [526, 4, 1, "", "bind"], [526, 4, 1, "", "get_events"], [526, 4, 1, "", "get_handlers"], [526, 4, 1, "", "get_request"], [526, 4, 1, "", "process_request"], [526, 6, 1, "", "request_queue_size"], [526, 6, 1, "", "server_address"], [526, 4, 1, "", "server_bind"], [526, 4, 1, "", "server_close"], [526, 4, 1, "", "service_actions"], [526, 4, 1, "", "shutdown"], [526, 5, 1, "", "ssl_context"], [526, 4, 1, "", "unbind"]], "pynetdicom.transport.AssociationSocket": [[527, 4, 1, "", "__init__"], [527, 5, 1, "", "assoc"], [527, 4, 1, "", "close"], [527, 4, 1, "", "connect"], [527, 5, 1, "", "event_queue"], [527, 4, 1, "", "get_local_addr"], [527, 5, 1, "", "provider_queue"], [527, 5, 1, "", "ready"], [527, 4, 1, "", "recv"], [527, 6, 1, "", "select_timeout"], [527, 4, 1, "", "send"], [527, 6, 1, "", "socket"], [527, 5, 1, "", "tls_args"]], "pynetdicom.transport.RequestHandler": [[528, 4, 1, "", "__init__"], [528, 5, 1, "", "ae"], [528, 6, 1, "", "client_address"], [528, 4, 1, "", "handle"], [528, 5, 1, "", "local"], [528, 5, 1, "", "remote"], [528, 6, 1, "", "request"], [528, 6, 1, "", "server"]], "pynetdicom.transport.T_CONNECT": [[529, 4, 1, "", "__init__"], [529, 5, 1, "", "address"], [529, 6, 1, "", "request"], [529, 5, 1, "", "result"]], "pynetdicom.transport.ThreadedAssociationServer": [[530, 4, 1, "", "__init__"], [530, 4, 1, "", "process_request_thread"]], "pynetdicom.utils": [[531, 2, 1, "", "decode_bytes"], [532, 2, 1, "", "make_target"], [533, 2, 1, "", "pretty_bytes"], [534, 2, 1, "", "set_ae"], [535, 2, 1, "", "set_uid"], [536, 2, 1, "", "validate_uid"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:method", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"echoscp": 0, "descript": [0, 1, 2, 3, 6, 7, 8, 9], "usag": [0, 1, 2, 3, 6, 7, 8, 9], "option": [0, 1, 2, 3, 6, 7, 8, 9, 46], "gener": [0, 1, 2, 3, 6, 7, 8, 9], "network": [0, 1, 2, 3, 6, 7, 8, 9, 569, 573], "prefer": [0, 8], "transfer": [0, 1, 2, 3, 6, 7, 8, 9, 70, 538, 575], "syntax": [0, 1, 2, 3, 6, 7, 8, 9, 538, 575], "dicom": [0, 1, 2, 3, 6, 7, 8, 9, 52, 568, 569, 575], "conform": [0, 1, 2, 3, 6, 7, 8, 9], "verif": [0, 1, 7, 8, 40, 503, 541, 562, 567], "servic": [0, 1, 2, 3, 6, 7, 8, 9, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 50, 62, 68, 539, 540, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 574, 575, 576], "sop": [0, 1, 2, 3, 6, 7, 8, 9, 541, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 572, 575], "class": [0, 1, 2, 3, 6, 7, 8, 9, 41, 540, 541, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 572, 575, 576], "echoscu": 1, "paramet": [1, 2, 3, 6, 9], "miscellan": [1, 8, 9, 51], "findscu": 2, "queri": [2, 3, 6, 7, 35, 36, 37, 38, 541, 548, 549, 551, 552, 559, 560, 561, 565], "inform": [2, 3, 6, 38, 55, 57, 561, 575], "model": [2, 3, 6, 575], "extend": [2, 3, 6, 574, 575], "negoti": [2, 3, 6, 539, 573, 574, 575, 578], "output": [2, 3, 6, 8], "keyword": [2, 3, 5, 6], "path": [2, 3, 5, 6], "exampl": [2, 3, 5, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "retriev": [2, 3, 6, 7, 35, 36, 37, 541, 548, 549, 551, 552, 559, 560], "basic": [2, 7, 30, 541, 547], "worklist": [2, 7, 30, 541, 547], "manag": [2, 7, 30, 31, 33, 34, 541, 547, 550, 555, 556, 558], "unifi": [2, 7, 541, 566], "procedur": [2, 7, 33, 541, 549, 556, 566], "step": [2, 7, 33, 541, 556, 566, 568, 569], "getscu": 3, "applic": [4, 41, 44, 541, 546, 569, 573, 575], "movescu": 6, "storag": [6, 7, 8, 9, 39, 541, 557, 563, 564, 568], "scp": [6, 30, 31, 33, 35, 36, 37, 38, 39, 40, 568, 569, 573, 574, 578], "qrscp": 7, "databas": 7, "configur": [7, 46], "file": [7, 568], "storescp": 8, "storescu": 9, "input": 9, "releas": [10, 41, 58, 59, 66, 70, 571, 574], "note": [10, 41, 578], "1": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "0": [11, 12, 13, 14, 16, 18, 26, 27, 28, 29], "fix": [11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29], "chang": [11, 12, 13, 14, 16, 18, 19, 20, 25, 26, 27, 28, 29], "enhanc": [11, 12, 13, 14, 16, 18, 26, 28, 29], "2": [13, 20, 26, 27, 28, 29], "3": [14, 15, 21], "4": [16, 17, 22], "5": [18, 19, 20, 21, 22, 23, 24, 25], "known": [18, 541], "issu": 18, "6": 24, "7": 25, "scu": [30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 569, 573, 574, 578], "displai": [31, 541, 550], "system": [31, 541, 550], "code": [32, 41], "modal": [33, 556], "perform": [33, 556], "mpp": 33, "creat": [33, 554, 555, 556, 558, 562, 566, 568, 569, 573], "set": [33, 556, 558, 562, 566, 568], "print": [34, 541, 558], "grayscal": 34, "overview": 34, "dims": [34, 47, 48, 49, 50, 115, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 574], "avail": [34, 541, 554], "find": [35, 547, 548, 549, 551, 552, 559, 560, 561, 565, 566], "get": [36, 41, 548, 549, 550, 551, 552, 555, 556, 558, 559, 560, 562, 566], "move": [37, 548, 549, 551, 552, 559, 560], "relev": [38, 541, 561], "patient": [38, 541, 557, 561], "pynetdicom": [41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 571, 578], "start": [41, 569], "user": [41, 55, 57, 573, 574, 577], "guid": [41, 577], "api": [41, 537], "refer": [41, 537, 573], "support": [41, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 573], "acs": [42, 43, 110], "provid": [43, 50, 68, 574], "entiti": [44, 569, 573, 575], "ae": [44, 111, 569, 574], "associ": [45, 55, 56, 57, 64, 70, 112, 113, 569, 573, 574, 575, 576, 578], "_config": [46, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "messag": 48, "dimse_messag": [48, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "c": [48, 49, 547, 548, 549, 551, 552, 557, 559, 560, 561, 564, 565, 566, 567], "n": [48, 49, 546, 550, 554, 555, 556, 558, 562, 563, 566], "primit": [49, 62], "dimse_primit": [49, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "dataset": 51, "util": [51, 531, 532, 533, 534, 535, 536, 538, 541, 545], "dsutil": [51, 151, 152, 153, 154], "encod": [51, 152], "decod": [51, 151], "upper": 52, "layer": 52, "pdu": [53, 54, 55, 56, 57, 58, 59, 60, 61, 189, 190, 191, 192, 193, 194, 195, 196], "A": [54, 55, 56, 57, 58, 59, 63, 64, 65, 66], "abort": [54, 63, 65, 70], "rq": [54, 57, 59], "ac": 55, "variabl": [55, 57, 60, 538], "item": [55, 57, 60, 61], "present": [55, 57, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 539, 569, 573, 574, 575, 578], "context": [55, 57, 539, 569, 573, 574, 575, 578], "sub": [55, 57, 61], "rj": 56, "rp": 58, "p": [60, 65, 67], "data": [60, 67, 70, 568], "tf": 60, "pdu_item": [61, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "pdu_primit": [62, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "dul": [68, 155], "event": [69, 156, 157, 158, 159, 541, 546, 556, 558, 562, 563, 566, 568, 574, 576], "handler": [69, 568, 574, 576], "document": 69, "intervent": [69, 576], "notif": [69, 554, 576], "state": 70, "machin": [70, 541, 562], "fsm": [70, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "action": [70, 546, 555, 558, 562, 563, 566], "establish": 70, "pynetdicom_implementation_uid": 71, "pynetdicom_implementation_vers": 72, "pynetdicom_uid_prefix": 73, "codec": 74, "enforce_uid_conform": 75, "log_handler_level": 76, "log_request_identifi": 77, "log_response_identifi": 78, "pass_contextvar": 79, "store_recv_chunked_dataset": 80, "store_send_chunked_dataset": 81, "unrestricted_storage_servic": 82, "use_short_dimse_aet": 83, "valid": 84, "windows_timer_resolut": 85, "_global": [86, 87], "all_transfer_syntax": 86, "default_transfer_syntax": 87, "_handler": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "doc_handle_acs": 88, "doc_handle_act": 89, "doc_handle_assoc": 90, "doc_handle_async": 91, "doc_handle_c_get": 92, "doc_handle_cr": 93, "doc_handle_data": 94, "doc_handle_delet": 95, "doc_handle_dims": 96, "doc_handle_echo": 97, "doc_handle_event_report": 98, "doc_handle_find": 99, "doc_handle_fsm": 100, "doc_handle_mov": 101, "doc_handle_n_get": 102, "doc_handle_pdu": 103, "doc_handle_set": 104, "doc_handle_sop_common": 105, "doc_handle_sop_extend": 106, "doc_handle_stor": 107, "doc_handle_transport": 108, "doc_handle_userid": 109, "applicationent": 111, "serviceus": 113, "debug_logg": 114, "dimseserviceprovid": 115, "c_cancel_rq": 116, "c_echo_rq": 117, "c_echo_rsp": 118, "c_find_rq": 119, "c_find_rsp": 120, "c_get_rq": 121, "c_get_rsp": 122, "c_move_rq": 123, "c_move_rsp": 124, "c_store_rq": 125, "c_store_rsp": 126, "n_action_rq": 127, "n_action_rsp": 128, "n_create_rq": 129, "n_create_rsp": 130, "n_delete_rq": 131, "n_delete_rsp": 132, "n_event_report_rq": 133, "n_event_report_rsp": 134, "n_get_rq": 135, "n_get_rsp": 136, "n_set_rq": 137, "n_set_rsp": 138, "c_cancel": 139, "c_echo": 140, "c_find": 141, "c_get": 142, "c_move": 143, "c_store": 144, "n_action": 145, "n_creat": 146, "n_delet": 147, "n_event_report": 148, "n_get": 149, "n_set": 150, "pretty_dataset": 153, "pretty_el": 154, "dulserviceprovid": 155, "interventionev": 157, "notificationev": 158, "trigger": 159, "aa_1": 160, "aa_2": 161, "aa_3": 162, "aa_4": 163, "aa_5": 164, "aa_6": 165, "aa_7": 166, "aa_8": 167, "ae_1": 168, "ae_2": 169, "ae_3": 170, "ae_4": 171, "ae_5": 172, "ae_6": 173, "ae_7": 174, "ae_8": 175, "ar_1": 176, "ar_10": 177, "ar_2": 178, "ar_3": 179, "ar_4": 180, "ar_5": 181, "ar_6": 182, "ar_7": 183, "ar_8": 184, "ar_9": 185, "dt_1": 186, "dt_2": 187, "statemachin": 188, "a_abort_rq": 189, "a_associate_ac": 190, "a_associate_rj": 191, "a_associate_rq": 192, "a_release_rp": 193, "a_release_rq": 194, "p_data_tf": 195, "presentationdatavalueitem": [196, 205], "abstractsyntaxsubitem": 197, "applicationcontextitem": 198, "asynchronousoperationswindowsubitem": 199, "implementationclassuidsubitem": 200, "implementationversionnamesubitem": 201, "maximumlengthsubitem": 202, "presentationcontextitemac": 203, "presentationcontextitemrq": 204, "scp_scu_roleselectionsubitem": 206, "sopclasscommonextendednegotiationsubitem": 207, "sopclassextendednegotiationsubitem": 208, "transfersyntaxsubitem": 209, "useridentitysubitemac": 210, "useridentitysubitemrq": 211, "userinformationitem": 212, "a_abort": 213, "a_associ": 214, "a_p_abort": 215, "a_releas": 216, "asynchronousoperationswindownegoti": 217, "implementationclassuidnotif": 218, "implementationversionnamenotif": 219, "maximumlengthnotif": 220, "p_data": 221, "scp_scu_roleselectionnegoti": 222, "sopclasscommonextendednegoti": 223, "sopclassextendednegoti": 224, "useridentitynegoti": 225, "allstoragepresentationcontext": 226, "applicationeventloggingpresentationcontext": 227, "basicworklistmanagementpresentationcontext": 228, "colorpalettepresentationcontext": 229, "definedprocedureprotocolpresentationcontext": 230, "displaysystempresentationcontext": 231, "hangingprotocolpresentationcontext": 232, "implanttemplatepresentationcontext": 233, "instanceavailabilitypresentationcontext": 234, "mediacreationmanagementpresentationcontext": 235, "mediastoragepresentationcontext": 236, "modalityperformedpresentationcontext": 237, "nonpatientobjectpresentationcontext": 238, "presentationcontext": 239, "presentationcontexttupl": 240, "printmanagementpresentationcontext": 241, "proceduresteppresentationcontext": 242, "protocolapprovalpresentationcontext": 243, "queryretrievepresentationcontext": 244, "rtmachineverificationpresentationcontext": 245, "relevantpatientinformationpresentationcontext": 246, "storagecommitmentpresentationcontext": 247, "storagepresentationcontext": 248, "substanceadministrationpresentationcontext": 249, "unifiedprocedurepresentationcontext": 250, "verificationpresentationcontext": 251, "build_context": 252, "build_rol": 253, "negotiate_as_acceptor": 254, "negotiate_as_requestor": 255, "service_class": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 540], "basicworklistmanagementserviceclass": 256, "colorpalettequeryretrieveserviceclass": 257, "definedprocedureprotocolqueryretrieveserviceclass": 258, "hangingprotocolqueryretrieveserviceclass": 259, "implanttemplatequeryretrieveserviceclass": 260, "nonpatientobjectstorageserviceclass": 261, "protocolapprovalqueryretrieveserviceclass": 262, "queryretrieveserviceclass": 263, "relevantpatientinformationqueryserviceclass": 264, "storageserviceclass": 265, "substanceadministrationqueryserviceclass": 266, "verificationserviceclass": 267, "service_class_n": [268, 269, 270, 271, 272, 273, 274, 275, 276], "applicationeventloggingserviceclass": 268, "displaysystemmanagementserviceclass": 269, "instanceavailabilitynotificationserviceclass": 270, "mediacreationmanagementserviceclass": 271, "printmanagementserviceclass": 272, "procedurestepserviceclass": 273, "rtmachineverificationserviceclass": 274, "storagecommitmentserviceclass": 275, "unifiedprocedurestepserviceclass": 276, "sop_class": [277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 541], "acquisitioncontextsrstorag": 277, "advancedblendingpresentationstatestorag": 278, "ambulatoryecgwaveformstorag": 279, "arterialpulsewaveformstorag": 280, "autorefractionmeasurementsstorag": 281, "basicannotationbox": 282, "basiccolorimagebox": 283, "basiccolorprintmanagementmeta": 284, "basicfilmbox": 285, "basicfilmsess": 286, "basicgrayscaleimagebox": 287, "basicgrayscaleprintmanagementmeta": 288, "basicstructureddisplaystorag": 289, "basictextsrstorag": 290, "basicvoiceaudiowaveformstorag": 291, "blendingsoftcopypresentationstatestorag": 292, "bodypositionwaveformstorag": 293, "breastimagingrelevantpatientinformationqueri": 294, "breastprojectionxrayimagestorageforpresent": 295, "breastprojectionxrayimagestorageforprocess": 296, "breasttomosynthesisimagestorag": 297, "carmphotonelectronradiationrecordstorag": 298, "carmphotonelectronradiationstorag": 299, "ctdefinedprocedureprotocolstorag": 300, "ctimagestorag": 301, "ctperformedprocedureprotocolstorag": 302, "cardiacelectrophysiologywaveformstorag": 303, "cardiacrelevantpatientinformationqueri": 304, "chestcadsrstorag": 305, "coloncadsrstorag": 306, "colorpaletteinformationmodelfind": 307, "colorpaletteinformationmodelget": 308, "colorpaletteinformationmodelmov": 309, "colorpalettestorag": 310, "colorsoftcopypresentationstatestorag": 311, "compositeinstanceretrievewithoutbulkdataget": 312, "compositeinstancerootretrieveget": 313, "compositeinstancerootretrievemov": 314, "compositingplanarmprvolumetricpresentationstatestorag": 315, "comprehensive3dsrstorag": 316, "comprehensivesrstorag": 317, "computedradiographyimagestorag": 318, "contentassessmentresultsstorag": 319, "cornealtopographymapstorag": 320, "definedprocedureprotocolinformationmodelfind": 321, "definedprocedureprotocolinformationmodelget": 322, "definedprocedureprotocolinformationmodelmov": 323, "deformablespatialregistrationstorag": 324, "dermoscopicphotographyimagestorag": 325, "digitalintraoralxrayimagestorageforpresent": 326, "digitalintraoralxrayimagestorageforprocess": 327, "digitalmammographyxrayimagestorageforpresent": 328, "digitalmammographyxrayimagestorageforprocess": 329, "digitalxrayimagestorageforpresent": 330, "digitalxrayimagestorageforprocess": 331, "displaysystem": 332, "displaysysteminst": 333, "electromyogramwaveformstorag": 334, "electrooculogramwaveformstorag": 335, "encapsulatedcdastorag": 336, "encapsulatedmtlstorag": 337, "encapsulatedobjstorag": 338, "encapsulatedpdfstorag": 339, "encapsulatedstlstorag": 340, "enhancedctimagestorag": 341, "enhancedmrcolorimagestorag": 342, "enhancedmrimagestorag": 343, "enhancedpetimagestorag": 344, "enhancedsrstorag": 345, "enhancedusvolumestorag": 346, "enhancedxaimagestorag": 347, "enhancedxrfimagestorag": 348, "enhancedxrayradiationdosesrstorag": 349, "extensiblesrstorag": 350, "generalaudiowaveformstorag": 351, "generalecgwaveformstorag": 352, "generalrelevantpatientinformationqueri": 353, "genericimplanttemplateinformationmodelfind": 354, "genericimplanttemplateinformationmodelget": 355, "genericimplanttemplateinformationmodelmov": 356, "genericimplanttemplatestorag": 357, "grayscaleplanarmprvolumetricpresentationstatestorag": 358, "grayscalesoftcopypresentationstatestorag": 359, "hangingprotocolinformationmodelfind": 360, "hangingprotocolinformationmodelget": 361, "hangingprotocolinformationmodelmov": 362, "hangingprotocolstorag": 363, "hemodynamicwaveformstorag": 364, "implantassemblytemplateinformationmodelfind": 365, "implantassemblytemplateinformationmodelget": 366, "implantassemblytemplateinformationmodelmov": 367, "implantassemblytemplatestorag": 368, "implanttemplategroupinformationmodelfind": 369, "implanttemplategroupinformationmodelget": 370, "implanttemplategroupinformationmodelmov": 371, "implanttemplategroupstorag": 372, "implantationplansrstorag": 373, "instanceavailabilitynotif": 374, "intraocularlenscalculationsstorag": 375, "intravascularopticalcoherencetomographyimagestorageforpresent": 376, "intravascularopticalcoherencetomographyimagestorageforprocess": 377, "keratometrymeasurementsstorag": 378, "keyobjectselectiondocumentstorag": 379, "legacyconvertedenhancedctimagestorag": 380, "legacyconvertedenhancedmrimagestorag": 381, "legacyconvertedenhancedpetimagestorag": 382, "lensometrymeasurementsstorag": 383, "mrimagestorag": 384, "mrspectroscopystorag": 385, "maculargridthicknessandvolumereportstorag": 386, "mammographycadsrstorag": 387, "mediacreationmanag": 388, "mediastoragedirectorystorag": 389, "microscopybulksimpleannotationsstorag": 390, "modalityperformedprocedurestep": 391, "modalityperformedprocedurestepnotif": 392, "modalityperformedprocedurestepretriev": 393, "modalityworklistinformationfind": 394, "multiframegrayscalebytesecondarycaptureimagestorag": 395, "multiframegrayscalewordsecondarycaptureimagestorag": 396, "multiframesinglebitsecondarycaptureimagestorag": 397, "multiframetruecolorsecondarycaptureimagestorag": 398, "multichannelrespiratorywaveformstorag": 399, "multiplevolumerenderingvolumetricpresentationstatestorag": 400, "nuclearmedicineimagestorag": 401, "ophthalmicaxialmeasurementsstorag": 402, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 403, "ophthalmicphotography16bitimagestorag": 404, "ophthalmicphotography8bitimagestorag": 405, "ophthalmicthicknessmapstorag": 406, "ophthalmictomographyimagestorag": 407, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 408, "ophthlamicopticalcoherencetomographybscanvolumeanalysisstorag": 409, "parametricmapstorag": 410, "patientradiationdosesrstorag": 411, "patientrootqueryretrieveinformationmodelfind": 412, "patientrootqueryretrieveinformationmodelget": 413, "patientrootqueryretrieveinformationmodelmov": 414, "patientstudyonlyqueryretrieveinformationmodelfind": 415, "patientstudyonlyqueryretrieveinformationmodelget": 416, "patientstudyonlyqueryretrieveinformationmodelmov": 417, "performedimagingagentadministrationsrstorag": 418, "plannedimagingagentadministrationsrstorag": 419, "positronemissiontomographyimagestorag": 420, "presentationlut": 421, "printjob": 422, "printer": 423, "printerconfigurationretriev": 424, "printerconfigurationretrievalinst": 425, "printerinst": 426, "proceduraleventlog": 427, "proceduraleventlogginginst": 428, "procedurelogstorag": 429, "productcharacteristicsqueri": 430, "protocolapprovalinformationmodelfind": 431, "protocolapprovalinformationmodelget": 432, "protocolapprovalinformationmodelmov": 433, "protocolapprovalstorag": 434, "pseudocolorsoftcopypresentationstagestorag": 435, "rtbeamsdeliveryinstructionstorag": 436, "rtbeamstreatmentrecordstorag": 437, "rtbrachyapplicationsetupdeliveryinstructionsstorag": 438, "rtbrachytreatmentrecordstorag": 439, "rtconventionalmachineverif": 440, "rtdosestorag": 441, "rtimagestorag": 442, "rtionbeamstreatmentrecordstorag": 443, "rtionmachineverif": 444, "rtionplanstorag": 445, "rtphysicianintentstorag": 446, "rtplanstorag": 447, "rtradiationrecordsetstorag": 448, "rtradiationsalvagerecordstorag": 449, "rtradiationsetdeliveryinstructionstorag": 450, "rtradiationsetstorag": 451, "rtsegmentannotationstorag": 452, "rtstructuresetstorag": 453, "rttreatmentpreparationstorag": 454, "rttreatmentsummaryrecordstorag": 455, "radiopharmaceuticalradiationdosesrstorag": 456, "rawdatastorag": 457, "realworldvaluemappingstorag": 458, "respiratorywaveformstorag": 459, "roboticarmradiationrecordstorag": 460, "roboticarmradiationstorag": 461, "routinescalpelectroencephalogramwaveformstorag": 462, "sopclass": 463, "secondarycaptureimagestorag": 464, "segmentationstorag": 465, "segmentedvolumerenderingvolumetricpresentationstatestorag": 466, "simplifiedadultechosrstorag": 467, "sleepelectroencephalogramwaveformstorag": 468, "spatialfiducialsstorag": 469, "spatialregistrationstorag": 470, "spectacleprescriptionreportstorag": 471, "stereometricrelationshipstorag": 472, "storagecommitmentpushmodel": 473, "storagecommitmentpushmodelinst": 474, "studyrootqueryretrieveinformationmodelfind": 475, "studyrootqueryretrieveinformationmodelget": 476, "studyrootqueryretrieveinformationmodelmov": 477, "subjectiverefractionmeasurementsstorag": 478, "substanceadministrationlog": 479, "substanceadministrationlogginginst": 480, "substanceapprovalqueri": 481, "surfacescanmeshstorag": 482, "surfacescanpointcloudstorag": 483, "surfacesegmentationstorag": 484, "tomotherapeuticradiationrecordstorag": 485, "tomotherapeuticradiationstorag": 486, "tractographyresultsstorag": 487, "twelveleadecgwaveformstorag": 488, "upsfilteredglobalsubscriptioninst": 489, "upsglobalsubscriptioninst": 490, "ultrasoundimagestorag": 491, "ultrasoundmultiframeimagestorag": 492, "unifiedprocedurestepev": 493, "unifiedproceduresteppul": 494, "unifiedproceduresteppush": 495, "unifiedprocedurestepqueri": 496, "unifiedprocedurestepwatch": 497, "vlendoscopicimagestorag": 498, "vlmicroscopicimagestorag": 499, "vlphotographicimagestorag": 500, "vlslidecoordinatesmicroscopicimagestorag": 501, "vlwholeslidemicroscopyimagestorag": 502, "videoendoscopicimagestorag": 504, "videomicroscopicimagestorag": 505, "videophotographicimagestorag": 506, "visualacuitymeasurementsstorag": 507, "volumerenderingvolumetricpresentationstatestorag": 508, "widefieldophthalmicphotography3dcoordinatesimagestorag": 509, "widefieldophthalmicphotographystereographicprojectionimagestorag": 510, "xadefinedprocedureprotocolstorag": 511, "xaperformedprocedureprotocolstorag": 512, "xaxrfgrayscalesoftcopypresentationstatestorag": 513, "xray3dangiographicimagestorag": 514, "xray3dcraniofacialimagestorag": 515, "xrayangiographicimagestorag": 516, "xrayradiationdosesrstorag": 517, "xrayradiofluoroscopicimagestorag": 518, "register_uid": 519, "uid_to_service_class": 520, "uid_to_sop_class": 521, "statu": [522, 523, 524, 542], "code_to_categori": 523, "code_to_statu": 524, "timer": [525, 543], "transport": [526, 527, 528, 529, 530, 544], "associationserv": 526, "associationsocket": 527, "requesthandl": 528, "t_connect": 529, "threadedassociationserv": 530, "decode_byt": 531, "make_target": 532, "pretty_byt": 533, "set_a": 534, "set_uid": 535, "validate_uid": 536, "list": 538, "pre": 539, "built": 539, "color": [541, 548], "palett": [541, 548], "defin": [541, 549], "hang": [541, 551], "protocol": [541, 549, 551, 559], "implant": [541, 552], "templat": [541, 552], "instanc": [541, 554], "media": [541, 555], "creation": [541, 555], "non": [541, 557], "object": [541, 557, 575], "approv": [541, 559], "rt": [541, 562], "commit": [541, 563], "substanc": [541, 565], "well": 541, "status": [542, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567], "log": 546, "report": [556, 558, 562, 563, 566], "store": [557, 564], "meta": 558, "delet": [558, 562], "administr": 565, "up": 566, "echo": [567, 569], "write": [568, 569], "your": [568, 569], "first": [568, 569], "The": 568, "customis": 568, "format": 568, "expand": 568, "optimis": 568, "pass": 568, "extra": 568, "argument": 568, "next": [568, 569], "what": 569, "i": 569, "an": [569, 573, 574], "troubleshoot": 569, "turn": 569, "our": 569, "tutori": 570, "how": 571, "instal": 571, "offici": 571, "us": [571, 574], "pip": 571, "conda": 571, "after": 571, "develop": 571, "version": 571, "regist": 572, "new": 572, "ad": 573, "request": [573, 574], "specifi": [573, 574], "port": 573, "handl": 573, "role": [573, 578], "select": [573, 578], "ident": [573, 574], "bind": [573, 574], "address": 573, "call": 574, "titl": 574, "each": 574, "tl": 574, "outcom": 574, "access": 574, "respons": 574, "listen": 574, "import": 575, "concept": 575, "uid": 575, "definit": 575, "iod": 575, "abstract": 575, "relat": 576, "introduct": 578, "represent": 578, "requestor": 578, "acceptor": 578, "implement": 578}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"echoscp": [[0, "echoscp"]], "Description": [[0, "description"], [1, "description"], [2, "description"], [3, "description"], [6, "description"], [7, "description"], [8, "description"], [9, "description"]], "Usage": [[0, "usage"], [1, "usage"], [2, "usage"], [3, "usage"], [6, "usage"], [7, "usage"], [8, "usage"], [9, "usage"]], "Options": [[0, "options"], [1, "options"], [2, "options"], [3, "options"], [6, "options"], [7, "options"], [8, "options"], [9, "options"]], "General Options": [[0, "general-options"], [1, "general-options"], [2, "general-options"], [3, "general-options"], [6, "general-options"], [7, "general-options"], [8, "general-options"], [9, "general-options"]], "Network Options": [[0, "network-options"], [1, "network-options"], [2, "network-options"], [3, "network-options"], [6, "network-options"], [7, "network-options"], [8, "network-options"], [9, "network-options"]], "Preferred Transfer Syntaxes": [[0, "preferred-transfer-syntaxes"], [8, "preferred-transfer-syntaxes"]], "DICOM Conformance": [[0, "dicom-conformance"], [1, "dicom-conformance"], [2, "dicom-conformance"], [3, "dicom-conformance"], [6, "dicom-conformance"], [7, "dicom-conformance"], [8, "dicom-conformance"], [9, "dicom-conformance"]], "Verification Service": [[0, "verification-service"], [1, "verification-service"], [7, "verification-service"], [8, "verification-service"]], "SOP Classes": [[0, "sop-classes"], [1, "sop-classes"], [2, "sop-classes"], [2, "id1"], [2, "id3"], [3, "sop-classes"], [3, "id1"], [6, "sop-classes"], [6, "id1"], [7, "sop-classes"], [7, "id1"], [7, "id3"], [7, "id5"], [7, "id7"], [8, "sop-classes"], [8, "id1"], [9, "sop-classes"], [541, "sop-classes"], [575, "sop-classes"]], "Transfer Syntaxes": [[0, "transfer-syntaxes"], [1, "transfer-syntaxes"], [2, "transfer-syntaxes"], [2, "id2"], [2, "id4"], [3, "transfer-syntaxes"], [3, "id2"], [6, "transfer-syntaxes"], [6, "id2"], [7, "transfer-syntaxes"], [7, "id2"], [7, "id4"], [7, "id6"], [7, "id8"], [8, "transfer-syntaxes"], [8, "id2"], [9, "transfer-syntaxes"]], "echoscu": [[1, "echoscu"]], "Parameters": [[1, "parameters"], [2, "parameters"], [3, "parameters"], [6, "parameters"], [9, "parameters"]], "Transfer Syntax Options": [[1, "transfer-syntax-options"], [9, "transfer-syntax-options"]], "Miscellaneous Options": [[1, "miscellaneous-options"], [9, "miscellaneous-options"]], "findscu": [[2, "findscu"]], "Query Information Model Options": [[2, "query-information-model-options"], [3, "query-information-model-options"], [6, "query-information-model-options"]], "Query Options": [[2, "query-options"], [3, "query-options"], [6, "query-options"]], "Extended Negotiation Options": [[2, "extended-negotiation-options"], [3, "extended-negotiation-options"], [6, "extended-negotiation-options"]], "Output Options": [[2, "output-options"], [3, "output-options"], [6, "output-options"]], "Keyword pathing": [[2, "keyword-pathing"], [3, "keyword-pathing"], [5, "keyword-pathing"], [6, "keyword-pathing"]], "Examples": [[2, "examples"], [3, "examples"], [5, "examples"], [6, "examples"]], "Query/Retrieve Service": [[2, "query-retrieve-service"], [3, "query-retrieve-service"], [6, "query-retrieve-service"], [7, "query-retrieve-service"]], "Basic Worklist Management Service": [[2, "basic-worklist-management-service"], [7, "basic-worklist-management-service"]], "Unified Procedure Step  Service": [[2, "unified-procedure-step-service"], [7, "unified-procedure-step-service"]], "getscu": [[3, "getscu"]], "Applications": [[4, "applications"], [41, "applications"]], "movescu": [[6, "movescu"]], "Storage SCP Options": [[6, "storage-scp-options"]], "Storage Service": [[6, "storage-service"], [7, "storage-service"], [8, "storage-service"], [9, "storage-service"]], "qrscp": [[7, "qrscp"]], "Database Options": [[7, "database-options"]], "Configuration File": [[7, "configuration-file"]], "storescp": [[8, "storescp"]], "Output": [[8, "output"]], "Miscellaneous": [[8, "miscellaneous"], [51, "miscellaneous"]], "storescu": [[9, "storescu"]], "Input Options": [[9, "input-options"]], "Release Notes": [[10, "release-notes"], [41, "release-notes"]], "1.0.0": [[11, "v1-0-0"]], "Fixes": [[11, "fixes"], [12, "fixes"], [13, "fixes"], [14, "fixes"], [15, "fixes"], [16, "fixes"], [17, "fixes"], [18, "fixes"], [21, "fixes"], [22, "fixes"], [23, "fixes"], [24, "fixes"], [25, "fixes"], [26, "fixes"], [28, "fixes"], [29, "fixes"]], "Changes": [[11, "changes"], [12, "changes"], [13, "changes"], [14, "changes"], [16, "changes"], [18, "changes"], [19, "changes"], [20, "changes"], [25, "changes"], [26, "changes"], [27, "changes"], [28, "changes"], [29, "changes"]], "Enhancements": [[11, "enhancements"], [12, "enhancements"], [13, "enhancements"], [14, "enhancements"], [16, "enhancements"], [18, "enhancements"], [26, "enhancements"], [28, "enhancements"], [29, "enhancements"]], "1.1.0": [[12, "v1-1-0"]], "1.2.0": [[13, "v1-2-0"]], "1.3.0": [[14, "v1-3-0"]], "1.3.1": [[15, "v1-3-1"]], "1.4.0": [[16, "v1-4-0"]], "1.4.1": [[17, "v1-4-1"]], "1.5.0": [[18, "v1-5-0"]], "Known Issues": [[18, "known-issues"]], "1.5.1": [[19, "v1-5-1"]], "1.5.2": [[20, "v1-5-2"]], "1.5.3": [[21, "v1-5-3"]], "1.5.4": [[22, "v1-5-4"]], "1.5.5": [[23, "v1-5-5"]], "1.5.6": [[24, "v1-5-6"]], "1.5.7": [[25, "v1-5-7"]], "2.0.0": [[26, "v2-0-0"]], "2.0.1": [[27, "v2-0-1"]], "2.1.0": [[28, "v2-1-0"]], "2.2.0": [[29, "v2-2-0"]], "Basic Worklist Management Service Examples": [[30, "basic-worklist-management-service-examples"]], "Basic Worklist Management SCU": [[30, "basic-worklist-management-scu"]], "Basic Worklist Management SCP": [[30, "basic-worklist-management-scp"]], "Display System Management Service Examples": [[31, "display-system-management-service-examples"]], "Display System Management SCU": [[31, "display-system-management-scu"]], "Display System Management SCP": [[31, "display-system-management-scp"]], "Code Examples": [[32, "code-examples"], [41, "code-examples"]], "Modality Performed Procedure Step Management Service Examples": [[33, "modality-performed-procedure-step-management-service-examples"]], "MPPS - Create SCU": [[33, "mpps-create-scu"]], "MPPS - Set SCU": [[33, "mpps-set-scu"]], "MPPS SCP": [[33, "mpps-scp"]], "Print Management Service Examples": [[34, "print-management-service-examples"]], "Grayscale Print SCU": [[34, "grayscale-print-scu"]], "Overview": [[34, "overview"]], "DIMSE Services Available": [[34, "dimse-services-available"]], "Example": [[34, "example"]], "Query/Retrieve (Find) Service Examples": [[35, "query-retrieve-find-service-examples"]], "Query/Retrieve (Find) SCU": [[35, "query-retrieve-find-scu"]], "Query/Retrieve (Find) SCP": [[35, "query-retrieve-find-scp"]], "Query/Retrieve (Get) Service Examples": [[36, "query-retrieve-get-service-examples"]], "Query/Retrieve (Get) SCU": [[36, "query-retrieve-get-scu"]], "Query/Retrieve (Get) SCP": [[36, "query-retrieve-get-scp"]], "Query/Retrieve (Move) Service Examples": [[37, "query-retrieve-move-service-examples"]], "Query/Retrieve (Move) SCU": [[37, "query-retrieve-move-scu"]], "Query/Retrieve (Move) SCP": [[37, "query-retrieve-move-scp"]], "Relevant Patient Information Query Service Examples": [[38, "relevant-patient-information-query-service-examples"]], "Relevant Patient Information SCU": [[38, "relevant-patient-information-scu"]], "Relevant Patient Information SCP": [[38, "relevant-patient-information-scp"]], "Storage Service Examples": [[39, "storage-service-examples"]], "Storage SCU": [[39, "storage-scu"]], "Storage SCP": [[39, "storage-scp"]], "Verification Service Examples": [[40, "verification-service-examples"]], "Verification SCU": [[40, "verification-scu"]], "Verification SCP": [[40, "verification-scp"]], "pynetdicom": [[41, "pynetdicom"], [538, "pynetdicom"]], "Getting started": [[41, "getting-started"]], "User Guide": [[41, "user-guide"], [577, "user-guide"]], "API Reference": [[41, "api-reference"], [537, "api-reference"]], "Supported Service Classes": [[41, "supported-service-classes"], [553, "supported-service-classes"]], "ACSE Service (pynetdicom.acse)": [[42, "acse-service-pynetdicom-acse"]], "ACSE Service Provider (pynetdicom.acse)": [[43, "acse-service-provider-pynetdicom-acse"]], "Application Entity (pynetdicom.ae)": [[44, "application-entity-pynetdicom-ae"]], "Association (pynetdicom.association)": [[45, "association-pynetdicom-association"]], "Configuration Options (pynetdicom._config)": [[46, "configuration-options-pynetdicom-config"]], "DIMSE Service": [[47, "dimse-service"]], "Messages (pynetdicom.dimse_messages)": [[48, "messages-pynetdicom-dimse-messages"]], "DIMSE-C Messages": [[48, "dimse-c-messages"]], "DIMSE-N Messages": [[48, "dimse-n-messages"]], "Service Primitives (pynetdicom.dimse_primitives)": [[49, "service-primitives-pynetdicom-dimse-primitives"]], "DIMSE-C Primitives": [[49, "dimse-c-primitives"]], "DIMSE-N Primitives": [[49, "dimse-n-primitives"]], "Service Provider (pynetdicom.dimse)": [[50, "service-provider-pynetdicom-dimse"]], "Dataset Utilities (pynetdicom.dsutils)": [[51, "dataset-utilities-pynetdicom-dsutils"]], "Encoding and Decoding": [[51, "encoding-and-decoding"]], "DICOM Upper Layer": [[52, "dicom-upper-layer"]], "PDUs (pynetdicom.pdu)": [[53, "pdus-pynetdicom-pdu"]], "A-ABORT-RQ PDU": [[54, "a-abort-rq-pdu"]], "PDU": [[54, "pdu"], [55, "pdu"], [56, "pdu"], [57, "pdu"], [58, "pdu"], [59, "pdu"], [60, "pdu"]], "A-ASSOCIATE-AC PDU": [[55, "a-associate-ac-pdu"]], "Variable Items": [[55, "variable-items"], [57, "variable-items"], [60, "variable-items"]], "Presentation Context Sub-items": [[55, "presentation-context-sub-items"], [57, "presentation-context-sub-items"]], "User Information Sub-items": [[55, "user-information-sub-items"], [57, "user-information-sub-items"]], "A-ASSOCIATE-RJ PDU": [[56, "a-associate-rj-pdu"]], "A-ASSOCIATE-RQ PDU": [[57, "a-associate-rq-pdu"]], "A-RELEASE-RP PDU": [[58, "a-release-rp-pdu"]], "A-RELEASE-RQ PDU": [[59, "a-release-rq-pdu"]], "P-DATA-TF PDU": [[60, "p-data-tf-pdu"]], "PDU Items and Sub-items (pynetdicom.pdu_items)": [[61, "pdu-items-and-sub-items-pynetdicom-pdu-items"]], "Service Primitives (pynetdicom.pdu_primitives)": [[62, "service-primitives-pynetdicom-pdu-primitives"]], "A-ABORT": [[63, "a-abort"]], "A-ASSOCIATE": [[64, "a-associate"]], "A-P-ABORT": [[65, "a-p-abort"]], "A-RELEASE": [[66, "a-release"]], "P-DATA": [[67, "p-data"]], "DUL Service Provider (pynetdicom.dul)": [[68, "dul-service-provider-pynetdicom-dul"]], "Events and Handlers (pynetdicom.events)": [[69, "events-and-handlers-pynetdicom-events"]], "Documentation for Intervention Event Handlers": [[69, "documentation-for-intervention-event-handlers"]], "Documentation for Notification Event Handlers": [[69, "documentation-for-notification-event-handlers"]], "State Machine (pynetdicom.fsm)": [[70, "state-machine-pynetdicom-fsm"]], "State Machine": [[70, "state-machine"]], "Actions": [[70, "actions"]], "Association Establishment": [[70, "association-establishment"]], "Data Transfer": [[70, "data-transfer"]], "Association Release": [[70, "association-release"]], "Association Abort": [[70, "association-abort"]], "pynetdicom.PYNETDICOM_IMPLEMENTATION_UID": [[71, "pynetdicom-pynetdicom-implementation-uid"]], "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION": [[72, "pynetdicom-pynetdicom-implementation-version"]], "pynetdicom.PYNETDICOM_UID_PREFIX": [[73, "pynetdicom-pynetdicom-uid-prefix"]], "pynetdicom._config.CODECS": [[74, "pynetdicom-config-codecs"]], "pynetdicom._config.ENFORCE_UID_CONFORMANCE": [[75, "pynetdicom-config-enforce-uid-conformance"]], "pynetdicom._config.LOG_HANDLER_LEVEL": [[76, "pynetdicom-config-log-handler-level"]], "pynetdicom._config.LOG_REQUEST_IDENTIFIERS": [[77, "pynetdicom-config-log-request-identifiers"]], "pynetdicom._config.LOG_RESPONSE_IDENTIFIERS": [[78, "pynetdicom-config-log-response-identifiers"]], "pynetdicom._config.PASS_CONTEXTVARS": [[79, "pynetdicom-config-pass-contextvars"]], "pynetdicom._config.STORE_RECV_CHUNKED_DATASET": [[80, "pynetdicom-config-store-recv-chunked-dataset"]], "pynetdicom._config.STORE_SEND_CHUNKED_DATASET": [[81, "pynetdicom-config-store-send-chunked-dataset"]], "pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE": [[82, "pynetdicom-config-unrestricted-storage-service"]], "pynetdicom._config.USE_SHORT_DIMSE_AET": [[83, "pynetdicom-config-use-short-dimse-aet"]], "pynetdicom._config.VALIDATORS": [[84, "pynetdicom-config-validators"]], "pynetdicom._config.WINDOWS_TIMER_RESOLUTION": [[85, "pynetdicom-config-windows-timer-resolution"]], "pynetdicom._globals.ALL_TRANSFER_SYNTAXES": [[86, "pynetdicom-globals-all-transfer-syntaxes"]], "pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES": [[87, "pynetdicom-globals-default-transfer-syntaxes"]], "pynetdicom._handlers.doc_handle_acse": [[88, "pynetdicom-handlers-doc-handle-acse"]], "pynetdicom._handlers.doc_handle_action": [[89, "pynetdicom-handlers-doc-handle-action"]], "pynetdicom._handlers.doc_handle_assoc": [[90, "pynetdicom-handlers-doc-handle-assoc"]], "pynetdicom._handlers.doc_handle_async": [[91, "pynetdicom-handlers-doc-handle-async"]], "pynetdicom._handlers.doc_handle_c_get": [[92, "pynetdicom-handlers-doc-handle-c-get"]], "pynetdicom._handlers.doc_handle_create": [[93, "pynetdicom-handlers-doc-handle-create"]], "pynetdicom._handlers.doc_handle_data": [[94, "pynetdicom-handlers-doc-handle-data"]], "pynetdicom._handlers.doc_handle_delete": [[95, "pynetdicom-handlers-doc-handle-delete"]], "pynetdicom._handlers.doc_handle_dimse": [[96, "pynetdicom-handlers-doc-handle-dimse"]], "pynetdicom._handlers.doc_handle_echo": [[97, "pynetdicom-handlers-doc-handle-echo"]], "pynetdicom._handlers.doc_handle_event_report": [[98, "pynetdicom-handlers-doc-handle-event-report"]], "pynetdicom._handlers.doc_handle_find": [[99, "pynetdicom-handlers-doc-handle-find"]], "pynetdicom._handlers.doc_handle_fsm": [[100, "pynetdicom-handlers-doc-handle-fsm"]], "pynetdicom._handlers.doc_handle_move": [[101, "pynetdicom-handlers-doc-handle-move"]], "pynetdicom._handlers.doc_handle_n_get": [[102, "pynetdicom-handlers-doc-handle-n-get"]], "pynetdicom._handlers.doc_handle_pdu": [[103, "pynetdicom-handlers-doc-handle-pdu"]], "pynetdicom._handlers.doc_handle_set": [[104, "pynetdicom-handlers-doc-handle-set"]], "pynetdicom._handlers.doc_handle_sop_common": [[105, "pynetdicom-handlers-doc-handle-sop-common"]], "pynetdicom._handlers.doc_handle_sop_extended": [[106, "pynetdicom-handlers-doc-handle-sop-extended"]], "pynetdicom._handlers.doc_handle_store": [[107, "pynetdicom-handlers-doc-handle-store"]], "pynetdicom._handlers.doc_handle_transport": [[108, "pynetdicom-handlers-doc-handle-transport"]], "pynetdicom._handlers.doc_handle_userid": [[109, "pynetdicom-handlers-doc-handle-userid"]], "pynetdicom.acse.ACSE": [[110, "pynetdicom-acse-acse"]], "pynetdicom.ae.ApplicationEntity": [[111, "pynetdicom-ae-applicationentity"]], "pynetdicom.association.Association": [[112, "pynetdicom-association-association"]], "pynetdicom.association.ServiceUser": [[113, "pynetdicom-association-serviceuser"]], "pynetdicom.debug_logger": [[114, "pynetdicom-debug-logger"]], "pynetdicom.dimse.DIMSEServiceProvider": [[115, "pynetdicom-dimse-dimseserviceprovider"]], "pynetdicom.dimse_messages.C_CANCEL_RQ": [[116, "pynetdicom-dimse-messages-c-cancel-rq"]], "pynetdicom.dimse_messages.C_ECHO_RQ": [[117, "pynetdicom-dimse-messages-c-echo-rq"]], "pynetdicom.dimse_messages.C_ECHO_RSP": [[118, "pynetdicom-dimse-messages-c-echo-rsp"]], "pynetdicom.dimse_messages.C_FIND_RQ": [[119, "pynetdicom-dimse-messages-c-find-rq"]], "pynetdicom.dimse_messages.C_FIND_RSP": [[120, "pynetdicom-dimse-messages-c-find-rsp"]], "pynetdicom.dimse_messages.C_GET_RQ": [[121, "pynetdicom-dimse-messages-c-get-rq"]], "pynetdicom.dimse_messages.C_GET_RSP": [[122, "pynetdicom-dimse-messages-c-get-rsp"]], "pynetdicom.dimse_messages.C_MOVE_RQ": [[123, "pynetdicom-dimse-messages-c-move-rq"]], "pynetdicom.dimse_messages.C_MOVE_RSP": [[124, "pynetdicom-dimse-messages-c-move-rsp"]], "pynetdicom.dimse_messages.C_STORE_RQ": [[125, "pynetdicom-dimse-messages-c-store-rq"]], "pynetdicom.dimse_messages.C_STORE_RSP": [[126, "pynetdicom-dimse-messages-c-store-rsp"]], "pynetdicom.dimse_messages.N_ACTION_RQ": [[127, "pynetdicom-dimse-messages-n-action-rq"]], "pynetdicom.dimse_messages.N_ACTION_RSP": [[128, "pynetdicom-dimse-messages-n-action-rsp"]], "pynetdicom.dimse_messages.N_CREATE_RQ": [[129, "pynetdicom-dimse-messages-n-create-rq"]], "pynetdicom.dimse_messages.N_CREATE_RSP": [[130, "pynetdicom-dimse-messages-n-create-rsp"]], "pynetdicom.dimse_messages.N_DELETE_RQ": [[131, "pynetdicom-dimse-messages-n-delete-rq"]], "pynetdicom.dimse_messages.N_DELETE_RSP": [[132, "pynetdicom-dimse-messages-n-delete-rsp"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ": [[133, "pynetdicom-dimse-messages-n-event-report-rq"]], "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP": [[134, "pynetdicom-dimse-messages-n-event-report-rsp"]], "pynetdicom.dimse_messages.N_GET_RQ": [[135, "pynetdicom-dimse-messages-n-get-rq"]], "pynetdicom.dimse_messages.N_GET_RSP": [[136, "pynetdicom-dimse-messages-n-get-rsp"]], "pynetdicom.dimse_messages.N_SET_RQ": [[137, "pynetdicom-dimse-messages-n-set-rq"]], "pynetdicom.dimse_messages.N_SET_RSP": [[138, "pynetdicom-dimse-messages-n-set-rsp"]], "pynetdicom.dimse_primitives.C_CANCEL": [[139, "pynetdicom-dimse-primitives-c-cancel"]], "pynetdicom.dimse_primitives.C_ECHO": [[140, "pynetdicom-dimse-primitives-c-echo"]], "pynetdicom.dimse_primitives.C_FIND": [[141, "pynetdicom-dimse-primitives-c-find"]], "pynetdicom.dimse_primitives.C_GET": [[142, "pynetdicom-dimse-primitives-c-get"]], "pynetdicom.dimse_primitives.C_MOVE": [[143, "pynetdicom-dimse-primitives-c-move"]], "pynetdicom.dimse_primitives.C_STORE": [[144, "pynetdicom-dimse-primitives-c-store"]], "pynetdicom.dimse_primitives.N_ACTION": [[145, "pynetdicom-dimse-primitives-n-action"]], "pynetdicom.dimse_primitives.N_CREATE": [[146, "pynetdicom-dimse-primitives-n-create"]], "pynetdicom.dimse_primitives.N_DELETE": [[147, "pynetdicom-dimse-primitives-n-delete"]], "pynetdicom.dimse_primitives.N_EVENT_REPORT": [[148, "pynetdicom-dimse-primitives-n-event-report"]], "pynetdicom.dimse_primitives.N_GET": [[149, "pynetdicom-dimse-primitives-n-get"]], "pynetdicom.dimse_primitives.N_SET": [[150, "pynetdicom-dimse-primitives-n-set"]], "pynetdicom.dsutils.decode": [[151, "pynetdicom-dsutils-decode"]], "pynetdicom.dsutils.encode": [[152, "pynetdicom-dsutils-encode"]], "pynetdicom.dsutils.pretty_dataset": [[153, "pynetdicom-dsutils-pretty-dataset"]], "pynetdicom.dsutils.pretty_element": [[154, "pynetdicom-dsutils-pretty-element"]], "pynetdicom.dul.DULServiceProvider": [[155, "pynetdicom-dul-dulserviceprovider"]], "pynetdicom.events.Event": [[156, "pynetdicom-events-event"]], "pynetdicom.events.InterventionEvent": [[157, "pynetdicom-events-interventionevent"]], "pynetdicom.events.NotificationEvent": [[158, "pynetdicom-events-notificationevent"]], "pynetdicom.events.trigger": [[159, "pynetdicom-events-trigger"]], "pynetdicom.fsm.AA_1": [[160, "pynetdicom-fsm-aa-1"]], "pynetdicom.fsm.AA_2": [[161, "pynetdicom-fsm-aa-2"]], "pynetdicom.fsm.AA_3": [[162, "pynetdicom-fsm-aa-3"]], "pynetdicom.fsm.AA_4": [[163, "pynetdicom-fsm-aa-4"]], "pynetdicom.fsm.AA_5": [[164, "pynetdicom-fsm-aa-5"]], "pynetdicom.fsm.AA_6": [[165, "pynetdicom-fsm-aa-6"]], "pynetdicom.fsm.AA_7": [[166, "pynetdicom-fsm-aa-7"]], "pynetdicom.fsm.AA_8": [[167, "pynetdicom-fsm-aa-8"]], "pynetdicom.fsm.AE_1": [[168, "pynetdicom-fsm-ae-1"]], "pynetdicom.fsm.AE_2": [[169, "pynetdicom-fsm-ae-2"]], "pynetdicom.fsm.AE_3": [[170, "pynetdicom-fsm-ae-3"]], "pynetdicom.fsm.AE_4": [[171, "pynetdicom-fsm-ae-4"]], "pynetdicom.fsm.AE_5": [[172, "pynetdicom-fsm-ae-5"]], "pynetdicom.fsm.AE_6": [[173, "pynetdicom-fsm-ae-6"]], "pynetdicom.fsm.AE_7": [[174, "pynetdicom-fsm-ae-7"]], "pynetdicom.fsm.AE_8": [[175, "pynetdicom-fsm-ae-8"]], "pynetdicom.fsm.AR_1": [[176, "pynetdicom-fsm-ar-1"]], "pynetdicom.fsm.AR_10": [[177, "pynetdicom-fsm-ar-10"]], "pynetdicom.fsm.AR_2": [[178, "pynetdicom-fsm-ar-2"]], "pynetdicom.fsm.AR_3": [[179, "pynetdicom-fsm-ar-3"]], "pynetdicom.fsm.AR_4": [[180, "pynetdicom-fsm-ar-4"]], "pynetdicom.fsm.AR_5": [[181, "pynetdicom-fsm-ar-5"]], "pynetdicom.fsm.AR_6": [[182, "pynetdicom-fsm-ar-6"]], "pynetdicom.fsm.AR_7": [[183, "pynetdicom-fsm-ar-7"]], "pynetdicom.fsm.AR_8": [[184, "pynetdicom-fsm-ar-8"]], "pynetdicom.fsm.AR_9": [[185, "pynetdicom-fsm-ar-9"]], "pynetdicom.fsm.DT_1": [[186, "pynetdicom-fsm-dt-1"]], "pynetdicom.fsm.DT_2": [[187, "pynetdicom-fsm-dt-2"]], "pynetdicom.fsm.StateMachine": [[188, "pynetdicom-fsm-statemachine"]], "pynetdicom.pdu.A_ABORT_RQ": [[189, "pynetdicom-pdu-a-abort-rq"]], "pynetdicom.pdu.A_ASSOCIATE_AC": [[190, "pynetdicom-pdu-a-associate-ac"]], "pynetdicom.pdu.A_ASSOCIATE_RJ": [[191, "pynetdicom-pdu-a-associate-rj"]], "pynetdicom.pdu.A_ASSOCIATE_RQ": [[192, "pynetdicom-pdu-a-associate-rq"]], "pynetdicom.pdu.A_RELEASE_RP": [[193, "pynetdicom-pdu-a-release-rp"]], "pynetdicom.pdu.A_RELEASE_RQ": [[194, "pynetdicom-pdu-a-release-rq"]], "pynetdicom.pdu.P_DATA_TF": [[195, "pynetdicom-pdu-p-data-tf"]], "pynetdicom.pdu.PresentationDataValueItem": [[196, "pynetdicom-pdu-presentationdatavalueitem"]], "pynetdicom.pdu_items.AbstractSyntaxSubItem": [[197, "pynetdicom-pdu-items-abstractsyntaxsubitem"]], "pynetdicom.pdu_items.ApplicationContextItem": [[198, "pynetdicom-pdu-items-applicationcontextitem"]], "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem": [[199, "pynetdicom-pdu-items-asynchronousoperationswindowsubitem"]], "pynetdicom.pdu_items.ImplementationClassUIDSubItem": [[200, "pynetdicom-pdu-items-implementationclassuidsubitem"]], "pynetdicom.pdu_items.ImplementationVersionNameSubItem": [[201, "pynetdicom-pdu-items-implementationversionnamesubitem"]], "pynetdicom.pdu_items.MaximumLengthSubItem": [[202, "pynetdicom-pdu-items-maximumlengthsubitem"]], "pynetdicom.pdu_items.PresentationContextItemAC": [[203, "pynetdicom-pdu-items-presentationcontextitemac"]], "pynetdicom.pdu_items.PresentationContextItemRQ": [[204, "pynetdicom-pdu-items-presentationcontextitemrq"]], "pynetdicom.pdu_items.PresentationDataValueItem": [[205, "pynetdicom-pdu-items-presentationdatavalueitem"]], "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem": [[206, "pynetdicom-pdu-items-scp-scu-roleselectionsubitem"]], "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem": [[207, "pynetdicom-pdu-items-sopclasscommonextendednegotiationsubitem"]], "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem": [[208, "pynetdicom-pdu-items-sopclassextendednegotiationsubitem"]], "pynetdicom.pdu_items.TransferSyntaxSubItem": [[209, "pynetdicom-pdu-items-transfersyntaxsubitem"]], "pynetdicom.pdu_items.UserIdentitySubItemAC": [[210, "pynetdicom-pdu-items-useridentitysubitemac"]], "pynetdicom.pdu_items.UserIdentitySubItemRQ": [[211, "pynetdicom-pdu-items-useridentitysubitemrq"]], "pynetdicom.pdu_items.UserInformationItem": [[212, "pynetdicom-pdu-items-userinformationitem"]], "pynetdicom.pdu_primitives.A_ABORT": [[213, "pynetdicom-pdu-primitives-a-abort"]], "pynetdicom.pdu_primitives.A_ASSOCIATE": [[214, "pynetdicom-pdu-primitives-a-associate"]], "pynetdicom.pdu_primitives.A_P_ABORT": [[215, "pynetdicom-pdu-primitives-a-p-abort"]], "pynetdicom.pdu_primitives.A_RELEASE": [[216, "pynetdicom-pdu-primitives-a-release"]], "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation": [[217, "pynetdicom-pdu-primitives-asynchronousoperationswindownegotiation"]], "pynetdicom.pdu_primitives.ImplementationClassUIDNotification": [[218, "pynetdicom-pdu-primitives-implementationclassuidnotification"]], "pynetdicom.pdu_primitives.ImplementationVersionNameNotification": [[219, "pynetdicom-pdu-primitives-implementationversionnamenotification"]], "pynetdicom.pdu_primitives.MaximumLengthNotification": [[220, "pynetdicom-pdu-primitives-maximumlengthnotification"]], "pynetdicom.pdu_primitives.P_DATA": [[221, "pynetdicom-pdu-primitives-p-data"]], "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation": [[222, "pynetdicom-pdu-primitives-scp-scu-roleselectionnegotiation"]], "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation": [[223, "pynetdicom-pdu-primitives-sopclasscommonextendednegotiation"]], "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation": [[224, "pynetdicom-pdu-primitives-sopclassextendednegotiation"]], "pynetdicom.pdu_primitives.UserIdentityNegotiation": [[225, "pynetdicom-pdu-primitives-useridentitynegotiation"]], "pynetdicom.presentation.AllStoragePresentationContexts": [[226, "pynetdicom-presentation-allstoragepresentationcontexts"]], "pynetdicom.presentation.ApplicationEventLoggingPresentationContexts": [[227, "pynetdicom-presentation-applicationeventloggingpresentationcontexts"]], "pynetdicom.presentation.BasicWorklistManagementPresentationContexts": [[228, "pynetdicom-presentation-basicworklistmanagementpresentationcontexts"]], "pynetdicom.presentation.ColorPalettePresentationContexts": [[229, "pynetdicom-presentation-colorpalettepresentationcontexts"]], "pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts": [[230, "pynetdicom-presentation-definedprocedureprotocolpresentationcontexts"]], "pynetdicom.presentation.DisplaySystemPresentationContexts": [[231, "pynetdicom-presentation-displaysystempresentationcontexts"]], "pynetdicom.presentation.HangingProtocolPresentationContexts": [[232, "pynetdicom-presentation-hangingprotocolpresentationcontexts"]], "pynetdicom.presentation.ImplantTemplatePresentationContexts": [[233, "pynetdicom-presentation-implanttemplatepresentationcontexts"]], "pynetdicom.presentation.InstanceAvailabilityPresentationContexts": [[234, "pynetdicom-presentation-instanceavailabilitypresentationcontexts"]], "pynetdicom.presentation.MediaCreationManagementPresentationContexts": [[235, "pynetdicom-presentation-mediacreationmanagementpresentationcontexts"]], "pynetdicom.presentation.MediaStoragePresentationContexts": [[236, "pynetdicom-presentation-mediastoragepresentationcontexts"]], "pynetdicom.presentation.ModalityPerformedPresentationContexts": [[237, "pynetdicom-presentation-modalityperformedpresentationcontexts"]], "pynetdicom.presentation.NonPatientObjectPresentationContexts": [[238, "pynetdicom-presentation-nonpatientobjectpresentationcontexts"]], "pynetdicom.presentation.PresentationContext": [[239, "pynetdicom-presentation-presentationcontext"]], "pynetdicom.presentation.PresentationContextTuple": [[240, "pynetdicom-presentation-presentationcontexttuple"]], "pynetdicom.presentation.PrintManagementPresentationContexts": [[241, "pynetdicom-presentation-printmanagementpresentationcontexts"]], "pynetdicom.presentation.ProcedureStepPresentationContexts": [[242, "pynetdicom-presentation-proceduresteppresentationcontexts"]], "pynetdicom.presentation.ProtocolApprovalPresentationContexts": [[243, "pynetdicom-presentation-protocolapprovalpresentationcontexts"]], "pynetdicom.presentation.QueryRetrievePresentationContexts": [[244, "pynetdicom-presentation-queryretrievepresentationcontexts"]], "pynetdicom.presentation.RTMachineVerificationPresentationContexts": [[245, "pynetdicom-presentation-rtmachineverificationpresentationcontexts"]], "pynetdicom.presentation.RelevantPatientInformationPresentationContexts": [[246, "pynetdicom-presentation-relevantpatientinformationpresentationcontexts"]], "pynetdicom.presentation.StorageCommitmentPresentationContexts": [[247, "pynetdicom-presentation-storagecommitmentpresentationcontexts"]], "pynetdicom.presentation.StoragePresentationContexts": [[248, "pynetdicom-presentation-storagepresentationcontexts"]], "pynetdicom.presentation.SubstanceAdministrationPresentationContexts": [[249, "pynetdicom-presentation-substanceadministrationpresentationcontexts"]], "pynetdicom.presentation.UnifiedProcedurePresentationContexts": [[250, "pynetdicom-presentation-unifiedprocedurepresentationcontexts"]], "pynetdicom.presentation.VerificationPresentationContexts": [[251, "pynetdicom-presentation-verificationpresentationcontexts"]], "pynetdicom.presentation.build_context": [[252, "pynetdicom-presentation-build-context"]], "pynetdicom.presentation.build_role": [[253, "pynetdicom-presentation-build-role"]], "pynetdicom.presentation.negotiate_as_acceptor": [[254, "pynetdicom-presentation-negotiate-as-acceptor"]], "pynetdicom.presentation.negotiate_as_requestor": [[255, "pynetdicom-presentation-negotiate-as-requestor"]], "pynetdicom.service_class.BasicWorklistManagementServiceClass": [[256, "pynetdicom-service-class-basicworklistmanagementserviceclass"]], "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass": [[257, "pynetdicom-service-class-colorpalettequeryretrieveserviceclass"]], "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass": [[258, "pynetdicom-service-class-definedprocedureprotocolqueryretrieveserviceclass"]], "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass": [[259, "pynetdicom-service-class-hangingprotocolqueryretrieveserviceclass"]], "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass": [[260, "pynetdicom-service-class-implanttemplatequeryretrieveserviceclass"]], "pynetdicom.service_class.NonPatientObjectStorageServiceClass": [[261, "pynetdicom-service-class-nonpatientobjectstorageserviceclass"]], "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass": [[262, "pynetdicom-service-class-protocolapprovalqueryretrieveserviceclass"]], "pynetdicom.service_class.QueryRetrieveServiceClass": [[263, "pynetdicom-service-class-queryretrieveserviceclass"]], "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass": [[264, "pynetdicom-service-class-relevantpatientinformationqueryserviceclass"]], "pynetdicom.service_class.StorageServiceClass": [[265, "pynetdicom-service-class-storageserviceclass"]], "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass": [[266, "pynetdicom-service-class-substanceadministrationqueryserviceclass"]], "pynetdicom.service_class.VerificationServiceClass": [[267, "pynetdicom-service-class-verificationserviceclass"]], "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass": [[268, "pynetdicom-service-class-n-applicationeventloggingserviceclass"]], "pynetdicom.service_class_n.DisplaySystemManagementServiceClass": [[269, "pynetdicom-service-class-n-displaysystemmanagementserviceclass"]], "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass": [[270, "pynetdicom-service-class-n-instanceavailabilitynotificationserviceclass"]], "pynetdicom.service_class_n.MediaCreationManagementServiceClass": [[271, "pynetdicom-service-class-n-mediacreationmanagementserviceclass"]], "pynetdicom.service_class_n.PrintManagementServiceClass": [[272, "pynetdicom-service-class-n-printmanagementserviceclass"]], "pynetdicom.service_class_n.ProcedureStepServiceClass": [[273, "pynetdicom-service-class-n-procedurestepserviceclass"]], "pynetdicom.service_class_n.RTMachineVerificationServiceClass": [[274, "pynetdicom-service-class-n-rtmachineverificationserviceclass"]], "pynetdicom.service_class_n.StorageCommitmentServiceClass": [[275, "pynetdicom-service-class-n-storagecommitmentserviceclass"]], "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass": [[276, "pynetdicom-service-class-n-unifiedprocedurestepserviceclass"]], "pynetdicom.sop_class.AcquisitionContextSRStorage": [[277, "pynetdicom-sop-class-acquisitioncontextsrstorage"]], "pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage": [[278, "pynetdicom-sop-class-advancedblendingpresentationstatestorage"]], "pynetdicom.sop_class.AmbulatoryECGWaveformStorage": [[279, "pynetdicom-sop-class-ambulatoryecgwaveformstorage"]], "pynetdicom.sop_class.ArterialPulseWaveformStorage": [[280, "pynetdicom-sop-class-arterialpulsewaveformstorage"]], "pynetdicom.sop_class.AutorefractionMeasurementsStorage": [[281, "pynetdicom-sop-class-autorefractionmeasurementsstorage"]], "pynetdicom.sop_class.BasicAnnotationBox": [[282, "pynetdicom-sop-class-basicannotationbox"]], "pynetdicom.sop_class.BasicColorImageBox": [[283, "pynetdicom-sop-class-basiccolorimagebox"]], "pynetdicom.sop_class.BasicColorPrintManagementMeta": [[284, "pynetdicom-sop-class-basiccolorprintmanagementmeta"]], "pynetdicom.sop_class.BasicFilmBox": [[285, "pynetdicom-sop-class-basicfilmbox"]], "pynetdicom.sop_class.BasicFilmSession": [[286, "pynetdicom-sop-class-basicfilmsession"]], "pynetdicom.sop_class.BasicGrayscaleImageBox": [[287, "pynetdicom-sop-class-basicgrayscaleimagebox"]], "pynetdicom.sop_class.BasicGrayscalePrintManagementMeta": [[288, "pynetdicom-sop-class-basicgrayscaleprintmanagementmeta"]], "pynetdicom.sop_class.BasicStructuredDisplayStorage": [[289, "pynetdicom-sop-class-basicstructureddisplaystorage"]], "pynetdicom.sop_class.BasicTextSRStorage": [[290, "pynetdicom-sop-class-basictextsrstorage"]], "pynetdicom.sop_class.BasicVoiceAudioWaveformStorage": [[291, "pynetdicom-sop-class-basicvoiceaudiowaveformstorage"]], "pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage": [[292, "pynetdicom-sop-class-blendingsoftcopypresentationstatestorage"]], "pynetdicom.sop_class.BodyPositionWaveformStorage": [[293, "pynetdicom-sop-class-bodypositionwaveformstorage"]], "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery": [[294, "pynetdicom-sop-class-breastimagingrelevantpatientinformationquery"]], "pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation": [[295, "pynetdicom-sop-class-breastprojectionxrayimagestorageforpresentation"]], "pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing": [[296, "pynetdicom-sop-class-breastprojectionxrayimagestorageforprocessing"]], "pynetdicom.sop_class.BreastTomosynthesisImageStorage": [[297, "pynetdicom-sop-class-breasttomosynthesisimagestorage"]], "pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage": [[298, "pynetdicom-sop-class-carmphotonelectronradiationrecordstorage"]], "pynetdicom.sop_class.CArmPhotonElectronRadiationStorage": [[299, "pynetdicom-sop-class-carmphotonelectronradiationstorage"]], "pynetdicom.sop_class.CTDefinedProcedureProtocolStorage": [[300, "pynetdicom-sop-class-ctdefinedprocedureprotocolstorage"]], "pynetdicom.sop_class.CTImageStorage": [[301, "pynetdicom-sop-class-ctimagestorage"]], "pynetdicom.sop_class.CTPerformedProcedureProtocolStorage": [[302, "pynetdicom-sop-class-ctperformedprocedureprotocolstorage"]], "pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage": [[303, "pynetdicom-sop-class-cardiacelectrophysiologywaveformstorage"]], "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery": [[304, "pynetdicom-sop-class-cardiacrelevantpatientinformationquery"]], "pynetdicom.sop_class.ChestCADSRStorage": [[305, "pynetdicom-sop-class-chestcadsrstorage"]], "pynetdicom.sop_class.ColonCADSRStorage": [[306, "pynetdicom-sop-class-coloncadsrstorage"]], "pynetdicom.sop_class.ColorPaletteInformationModelFind": [[307, "pynetdicom-sop-class-colorpaletteinformationmodelfind"]], "pynetdicom.sop_class.ColorPaletteInformationModelGet": [[308, "pynetdicom-sop-class-colorpaletteinformationmodelget"]], "pynetdicom.sop_class.ColorPaletteInformationModelMove": [[309, "pynetdicom-sop-class-colorpaletteinformationmodelmove"]], "pynetdicom.sop_class.ColorPaletteStorage": [[310, "pynetdicom-sop-class-colorpalettestorage"]], "pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage": [[311, "pynetdicom-sop-class-colorsoftcopypresentationstatestorage"]], "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet": [[312, "pynetdicom-sop-class-compositeinstanceretrievewithoutbulkdataget"]], "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet": [[313, "pynetdicom-sop-class-compositeinstancerootretrieveget"]], "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove": [[314, "pynetdicom-sop-class-compositeinstancerootretrievemove"]], "pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage": [[315, "pynetdicom-sop-class-compositingplanarmprvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.Comprehensive3DSRStorage": [[316, "pynetdicom-sop-class-comprehensive3dsrstorage"]], "pynetdicom.sop_class.ComprehensiveSRStorage": [[317, "pynetdicom-sop-class-comprehensivesrstorage"]], "pynetdicom.sop_class.ComputedRadiographyImageStorage": [[318, "pynetdicom-sop-class-computedradiographyimagestorage"]], "pynetdicom.sop_class.ContentAssessmentResultsStorage": [[319, "pynetdicom-sop-class-contentassessmentresultsstorage"]], "pynetdicom.sop_class.CornealTopographyMapStorage": [[320, "pynetdicom-sop-class-cornealtopographymapstorage"]], "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind": [[321, "pynetdicom-sop-class-definedprocedureprotocolinformationmodelfind"]], "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet": [[322, "pynetdicom-sop-class-definedprocedureprotocolinformationmodelget"]], "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove": [[323, "pynetdicom-sop-class-definedprocedureprotocolinformationmodelmove"]], "pynetdicom.sop_class.DeformableSpatialRegistrationStorage": [[324, "pynetdicom-sop-class-deformablespatialregistrationstorage"]], "pynetdicom.sop_class.DermoscopicPhotographyImageStorage": [[325, "pynetdicom-sop-class-dermoscopicphotographyimagestorage"]], "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation": [[326, "pynetdicom-sop-class-digitalintraoralxrayimagestorageforpresentation"]], "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing": [[327, "pynetdicom-sop-class-digitalintraoralxrayimagestorageforprocessing"]], "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation": [[328, "pynetdicom-sop-class-digitalmammographyxrayimagestorageforpresentation"]], "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing": [[329, "pynetdicom-sop-class-digitalmammographyxrayimagestorageforprocessing"]], "pynetdicom.sop_class.DigitalXRayImageStorageForPresentation": [[330, "pynetdicom-sop-class-digitalxrayimagestorageforpresentation"]], "pynetdicom.sop_class.DigitalXRayImageStorageForProcessing": [[331, "pynetdicom-sop-class-digitalxrayimagestorageforprocessing"]], "pynetdicom.sop_class.DisplaySystem": [[332, "pynetdicom-sop-class-displaysystem"]], "pynetdicom.sop_class.DisplaySystemInstance": [[333, "pynetdicom-sop-class-displaysysteminstance"]], "pynetdicom.sop_class.ElectromyogramWaveformStorage": [[334, "pynetdicom-sop-class-electromyogramwaveformstorage"]], "pynetdicom.sop_class.ElectrooculogramWaveformStorage": [[335, "pynetdicom-sop-class-electrooculogramwaveformstorage"]], "pynetdicom.sop_class.EncapsulatedCDAStorage": [[336, "pynetdicom-sop-class-encapsulatedcdastorage"]], "pynetdicom.sop_class.EncapsulatedMTLStorage": [[337, "pynetdicom-sop-class-encapsulatedmtlstorage"]], "pynetdicom.sop_class.EncapsulatedOBJStorage": [[338, "pynetdicom-sop-class-encapsulatedobjstorage"]], "pynetdicom.sop_class.EncapsulatedPDFStorage": [[339, "pynetdicom-sop-class-encapsulatedpdfstorage"]], "pynetdicom.sop_class.EncapsulatedSTLStorage": [[340, "pynetdicom-sop-class-encapsulatedstlstorage"]], "pynetdicom.sop_class.EnhancedCTImageStorage": [[341, "pynetdicom-sop-class-enhancedctimagestorage"]], "pynetdicom.sop_class.EnhancedMRColorImageStorage": [[342, "pynetdicom-sop-class-enhancedmrcolorimagestorage"]], "pynetdicom.sop_class.EnhancedMRImageStorage": [[343, "pynetdicom-sop-class-enhancedmrimagestorage"]], "pynetdicom.sop_class.EnhancedPETImageStorage": [[344, "pynetdicom-sop-class-enhancedpetimagestorage"]], "pynetdicom.sop_class.EnhancedSRStorage": [[345, "pynetdicom-sop-class-enhancedsrstorage"]], "pynetdicom.sop_class.EnhancedUSVolumeStorage": [[346, "pynetdicom-sop-class-enhancedusvolumestorage"]], "pynetdicom.sop_class.EnhancedXAImageStorage": [[347, "pynetdicom-sop-class-enhancedxaimagestorage"]], "pynetdicom.sop_class.EnhancedXRFImageStorage": [[348, "pynetdicom-sop-class-enhancedxrfimagestorage"]], "pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage": [[349, "pynetdicom-sop-class-enhancedxrayradiationdosesrstorage"]], "pynetdicom.sop_class.ExtensibleSRStorage": [[350, "pynetdicom-sop-class-extensiblesrstorage"]], "pynetdicom.sop_class.GeneralAudioWaveformStorage": [[351, "pynetdicom-sop-class-generalaudiowaveformstorage"]], "pynetdicom.sop_class.GeneralECGWaveformStorage": [[352, "pynetdicom-sop-class-generalecgwaveformstorage"]], "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery": [[353, "pynetdicom-sop-class-generalrelevantpatientinformationquery"]], "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind": [[354, "pynetdicom-sop-class-genericimplanttemplateinformationmodelfind"]], "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet": [[355, "pynetdicom-sop-class-genericimplanttemplateinformationmodelget"]], "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove": [[356, "pynetdicom-sop-class-genericimplanttemplateinformationmodelmove"]], "pynetdicom.sop_class.GenericImplantTemplateStorage": [[357, "pynetdicom-sop-class-genericimplanttemplatestorage"]], "pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[358, "pynetdicom-sop-class-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage": [[359, "pynetdicom-sop-class-grayscalesoftcopypresentationstatestorage"]], "pynetdicom.sop_class.HangingProtocolInformationModelFind": [[360, "pynetdicom-sop-class-hangingprotocolinformationmodelfind"]], "pynetdicom.sop_class.HangingProtocolInformationModelGet": [[361, "pynetdicom-sop-class-hangingprotocolinformationmodelget"]], "pynetdicom.sop_class.HangingProtocolInformationModelMove": [[362, "pynetdicom-sop-class-hangingprotocolinformationmodelmove"]], "pynetdicom.sop_class.HangingProtocolStorage": [[363, "pynetdicom-sop-class-hangingprotocolstorage"]], "pynetdicom.sop_class.HemodynamicWaveformStorage": [[364, "pynetdicom-sop-class-hemodynamicwaveformstorage"]], "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind": [[365, "pynetdicom-sop-class-implantassemblytemplateinformationmodelfind"]], "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet": [[366, "pynetdicom-sop-class-implantassemblytemplateinformationmodelget"]], "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove": [[367, "pynetdicom-sop-class-implantassemblytemplateinformationmodelmove"]], "pynetdicom.sop_class.ImplantAssemblyTemplateStorage": [[368, "pynetdicom-sop-class-implantassemblytemplatestorage"]], "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind": [[369, "pynetdicom-sop-class-implanttemplategroupinformationmodelfind"]], "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet": [[370, "pynetdicom-sop-class-implanttemplategroupinformationmodelget"]], "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove": [[371, "pynetdicom-sop-class-implanttemplategroupinformationmodelmove"]], "pynetdicom.sop_class.ImplantTemplateGroupStorage": [[372, "pynetdicom-sop-class-implanttemplategroupstorage"]], "pynetdicom.sop_class.ImplantationPlanSRStorage": [[373, "pynetdicom-sop-class-implantationplansrstorage"]], "pynetdicom.sop_class.InstanceAvailabilityNotification": [[374, "pynetdicom-sop-class-instanceavailabilitynotification"]], "pynetdicom.sop_class.IntraocularLensCalculationsStorage": [[375, "pynetdicom-sop-class-intraocularlenscalculationsstorage"]], "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[376, "pynetdicom-sop-class-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[377, "pynetdicom-sop-class-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pynetdicom.sop_class.KeratometryMeasurementsStorage": [[378, "pynetdicom-sop-class-keratometrymeasurementsstorage"]], "pynetdicom.sop_class.KeyObjectSelectionDocumentStorage": [[379, "pynetdicom-sop-class-keyobjectselectiondocumentstorage"]], "pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage": [[380, "pynetdicom-sop-class-legacyconvertedenhancedctimagestorage"]], "pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage": [[381, "pynetdicom-sop-class-legacyconvertedenhancedmrimagestorage"]], "pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage": [[382, "pynetdicom-sop-class-legacyconvertedenhancedpetimagestorage"]], "pynetdicom.sop_class.LensometryMeasurementsStorage": [[383, "pynetdicom-sop-class-lensometrymeasurementsstorage"]], "pynetdicom.sop_class.MRImageStorage": [[384, "pynetdicom-sop-class-mrimagestorage"]], "pynetdicom.sop_class.MRSpectroscopyStorage": [[385, "pynetdicom-sop-class-mrspectroscopystorage"]], "pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage": [[386, "pynetdicom-sop-class-maculargridthicknessandvolumereportstorage"]], "pynetdicom.sop_class.MammographyCADSRStorage": [[387, "pynetdicom-sop-class-mammographycadsrstorage"]], "pynetdicom.sop_class.MediaCreationManagement": [[388, "pynetdicom-sop-class-mediacreationmanagement"]], "pynetdicom.sop_class.MediaStorageDirectoryStorage": [[389, "pynetdicom-sop-class-mediastoragedirectorystorage"]], "pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage": [[390, "pynetdicom-sop-class-microscopybulksimpleannotationsstorage"]], "pynetdicom.sop_class.ModalityPerformedProcedureStep": [[391, "pynetdicom-sop-class-modalityperformedprocedurestep"]], "pynetdicom.sop_class.ModalityPerformedProcedureStepNotification": [[392, "pynetdicom-sop-class-modalityperformedprocedurestepnotification"]], "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve": [[393, "pynetdicom-sop-class-modalityperformedprocedurestepretrieve"]], "pynetdicom.sop_class.ModalityWorklistInformationFind": [[394, "pynetdicom-sop-class-modalityworklistinformationfind"]], "pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[395, "pynetdicom-sop-class-multiframegrayscalebytesecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[396, "pynetdicom-sop-class-multiframegrayscalewordsecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage": [[397, "pynetdicom-sop-class-multiframesinglebitsecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage": [[398, "pynetdicom-sop-class-multiframetruecolorsecondarycaptureimagestorage"]], "pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage": [[399, "pynetdicom-sop-class-multichannelrespiratorywaveformstorage"]], "pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[400, "pynetdicom-sop-class-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.NuclearMedicineImageStorage": [[401, "pynetdicom-sop-class-nuclearmedicineimagestorage"]], "pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage": [[402, "pynetdicom-sop-class-ophthalmicaxialmeasurementsstorage"]], "pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[403, "pynetdicom-sop-class-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage": [[404, "pynetdicom-sop-class-ophthalmicphotography16bitimagestorage"]], "pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage": [[405, "pynetdicom-sop-class-ophthalmicphotography8bitimagestorage"]], "pynetdicom.sop_class.OphthalmicThicknessMapStorage": [[406, "pynetdicom-sop-class-ophthalmicthicknessmapstorage"]], "pynetdicom.sop_class.OphthalmicTomographyImageStorage": [[407, "pynetdicom-sop-class-ophthalmictomographyimagestorage"]], "pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[408, "pynetdicom-sop-class-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[409, "pynetdicom-sop-class-ophthlamicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pynetdicom.sop_class.ParametricMapStorage": [[410, "pynetdicom-sop-class-parametricmapstorage"]], "pynetdicom.sop_class.PatientRadiationDoseSRStorage": [[411, "pynetdicom-sop-class-patientradiationdosesrstorage"]], "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind": [[412, "pynetdicom-sop-class-patientrootqueryretrieveinformationmodelfind"]], "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet": [[413, "pynetdicom-sop-class-patientrootqueryretrieveinformationmodelget"]], "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove": [[414, "pynetdicom-sop-class-patientrootqueryretrieveinformationmodelmove"]], "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind": [[415, "pynetdicom-sop-class-patientstudyonlyqueryretrieveinformationmodelfind"]], "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet": [[416, "pynetdicom-sop-class-patientstudyonlyqueryretrieveinformationmodelget"]], "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove": [[417, "pynetdicom-sop-class-patientstudyonlyqueryretrieveinformationmodelmove"]], "pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage": [[418, "pynetdicom-sop-class-performedimagingagentadministrationsrstorage"]], "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage": [[419, "pynetdicom-sop-class-plannedimagingagentadministrationsrstorage"]], "pynetdicom.sop_class.PositronEmissionTomographyImageStorage": [[420, "pynetdicom-sop-class-positronemissiontomographyimagestorage"]], "pynetdicom.sop_class.PresentationLUT": [[421, "pynetdicom-sop-class-presentationlut"]], "pynetdicom.sop_class.PrintJob": [[422, "pynetdicom-sop-class-printjob"]], "pynetdicom.sop_class.Printer": [[423, "pynetdicom-sop-class-printer"]], "pynetdicom.sop_class.PrinterConfigurationRetrieval": [[424, "pynetdicom-sop-class-printerconfigurationretrieval"]], "pynetdicom.sop_class.PrinterConfigurationRetrievalInstance": [[425, "pynetdicom-sop-class-printerconfigurationretrievalinstance"]], "pynetdicom.sop_class.PrinterInstance": [[426, "pynetdicom-sop-class-printerinstance"]], "pynetdicom.sop_class.ProceduralEventLogging": [[427, "pynetdicom-sop-class-proceduraleventlogging"]], "pynetdicom.sop_class.ProceduralEventLoggingInstance": [[428, "pynetdicom-sop-class-proceduraleventlogginginstance"]], "pynetdicom.sop_class.ProcedureLogStorage": [[429, "pynetdicom-sop-class-procedurelogstorage"]], "pynetdicom.sop_class.ProductCharacteristicsQuery": [[430, "pynetdicom-sop-class-productcharacteristicsquery"]], "pynetdicom.sop_class.ProtocolApprovalInformationModelFind": [[431, "pynetdicom-sop-class-protocolapprovalinformationmodelfind"]], "pynetdicom.sop_class.ProtocolApprovalInformationModelGet": [[432, "pynetdicom-sop-class-protocolapprovalinformationmodelget"]], "pynetdicom.sop_class.ProtocolApprovalInformationModelMove": [[433, "pynetdicom-sop-class-protocolapprovalinformationmodelmove"]], "pynetdicom.sop_class.ProtocolApprovalStorage": [[434, "pynetdicom-sop-class-protocolapprovalstorage"]], "pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage": [[435, "pynetdicom-sop-class-pseudocolorsoftcopypresentationstagestorage"]], "pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage": [[436, "pynetdicom-sop-class-rtbeamsdeliveryinstructionstorage"]], "pynetdicom.sop_class.RTBeamsTreatmentRecordStorage": [[437, "pynetdicom-sop-class-rtbeamstreatmentrecordstorage"]], "pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage": [[438, "pynetdicom-sop-class-rtbrachyapplicationsetupdeliveryinstructionsstorage"]], "pynetdicom.sop_class.RTBrachyTreatmentRecordStorage": [[439, "pynetdicom-sop-class-rtbrachytreatmentrecordstorage"]], "pynetdicom.sop_class.RTConventionalMachineVerification": [[440, "pynetdicom-sop-class-rtconventionalmachineverification"]], "pynetdicom.sop_class.RTDoseStorage": [[441, "pynetdicom-sop-class-rtdosestorage"]], "pynetdicom.sop_class.RTImageStorage": [[442, "pynetdicom-sop-class-rtimagestorage"]], "pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage": [[443, "pynetdicom-sop-class-rtionbeamstreatmentrecordstorage"]], "pynetdicom.sop_class.RTIonMachineVerification": [[444, "pynetdicom-sop-class-rtionmachineverification"]], "pynetdicom.sop_class.RTIonPlanStorage": [[445, "pynetdicom-sop-class-rtionplanstorage"]], "pynetdicom.sop_class.RTPhysicianIntentStorage": [[446, "pynetdicom-sop-class-rtphysicianintentstorage"]], "pynetdicom.sop_class.RTPlanStorage": [[447, "pynetdicom-sop-class-rtplanstorage"]], "pynetdicom.sop_class.RTRadiationRecordSetStorage": [[448, "pynetdicom-sop-class-rtradiationrecordsetstorage"]], "pynetdicom.sop_class.RTRadiationSalvageRecordStorage": [[449, "pynetdicom-sop-class-rtradiationsalvagerecordstorage"]], "pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage": [[450, "pynetdicom-sop-class-rtradiationsetdeliveryinstructionstorage"]], "pynetdicom.sop_class.RTRadiationSetStorage": [[451, "pynetdicom-sop-class-rtradiationsetstorage"]], "pynetdicom.sop_class.RTSegmentAnnotationStorage": [[452, "pynetdicom-sop-class-rtsegmentannotationstorage"]], "pynetdicom.sop_class.RTStructureSetStorage": [[453, "pynetdicom-sop-class-rtstructuresetstorage"]], "pynetdicom.sop_class.RTTreatmentPreparationStorage": [[454, "pynetdicom-sop-class-rttreatmentpreparationstorage"]], "pynetdicom.sop_class.RTTreatmentSummaryRecordStorage": [[455, "pynetdicom-sop-class-rttreatmentsummaryrecordstorage"]], "pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage": [[456, "pynetdicom-sop-class-radiopharmaceuticalradiationdosesrstorage"]], "pynetdicom.sop_class.RawDataStorage": [[457, "pynetdicom-sop-class-rawdatastorage"]], "pynetdicom.sop_class.RealWorldValueMappingStorage": [[458, "pynetdicom-sop-class-realworldvaluemappingstorage"]], "pynetdicom.sop_class.RespiratoryWaveformStorage": [[459, "pynetdicom-sop-class-respiratorywaveformstorage"]], "pynetdicom.sop_class.RoboticArmRadiationRecordStorage": [[460, "pynetdicom-sop-class-roboticarmradiationrecordstorage"]], "pynetdicom.sop_class.RoboticArmRadiationStorage": [[461, "pynetdicom-sop-class-roboticarmradiationstorage"]], "pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage": [[462, "pynetdicom-sop-class-routinescalpelectroencephalogramwaveformstorage"]], "pynetdicom.sop_class.SOPClass": [[463, "pynetdicom-sop-class-sopclass"]], "pynetdicom.sop_class.SecondaryCaptureImageStorage": [[464, "pynetdicom-sop-class-secondarycaptureimagestorage"]], "pynetdicom.sop_class.SegmentationStorage": [[465, "pynetdicom-sop-class-segmentationstorage"]], "pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[466, "pynetdicom-sop-class-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.SimplifiedAdultEchoSRStorage": [[467, "pynetdicom-sop-class-simplifiedadultechosrstorage"]], "pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage": [[468, "pynetdicom-sop-class-sleepelectroencephalogramwaveformstorage"]], "pynetdicom.sop_class.SpatialFiducialsStorage": [[469, "pynetdicom-sop-class-spatialfiducialsstorage"]], "pynetdicom.sop_class.SpatialRegistrationStorage": [[470, "pynetdicom-sop-class-spatialregistrationstorage"]], "pynetdicom.sop_class.SpectaclePrescriptionReportStorage": [[471, "pynetdicom-sop-class-spectacleprescriptionreportstorage"]], "pynetdicom.sop_class.StereometricRelationshipStorage": [[472, "pynetdicom-sop-class-stereometricrelationshipstorage"]], "pynetdicom.sop_class.StorageCommitmentPushModel": [[473, "pynetdicom-sop-class-storagecommitmentpushmodel"]], "pynetdicom.sop_class.StorageCommitmentPushModelInstance": [[474, "pynetdicom-sop-class-storagecommitmentpushmodelinstance"]], "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind": [[475, "pynetdicom-sop-class-studyrootqueryretrieveinformationmodelfind"]], "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet": [[476, "pynetdicom-sop-class-studyrootqueryretrieveinformationmodelget"]], "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove": [[477, "pynetdicom-sop-class-studyrootqueryretrieveinformationmodelmove"]], "pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage": [[478, "pynetdicom-sop-class-subjectiverefractionmeasurementsstorage"]], "pynetdicom.sop_class.SubstanceAdministrationLogging": [[479, "pynetdicom-sop-class-substanceadministrationlogging"]], "pynetdicom.sop_class.SubstanceAdministrationLoggingInstance": [[480, "pynetdicom-sop-class-substanceadministrationlogginginstance"]], "pynetdicom.sop_class.SubstanceApprovalQuery": [[481, "pynetdicom-sop-class-substanceapprovalquery"]], "pynetdicom.sop_class.SurfaceScanMeshStorage": [[482, "pynetdicom-sop-class-surfacescanmeshstorage"]], "pynetdicom.sop_class.SurfaceScanPointCloudStorage": [[483, "pynetdicom-sop-class-surfacescanpointcloudstorage"]], "pynetdicom.sop_class.SurfaceSegmentationStorage": [[484, "pynetdicom-sop-class-surfacesegmentationstorage"]], "pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage": [[485, "pynetdicom-sop-class-tomotherapeuticradiationrecordstorage"]], "pynetdicom.sop_class.TomotherapeuticRadiationStorage": [[486, "pynetdicom-sop-class-tomotherapeuticradiationstorage"]], "pynetdicom.sop_class.TractographyResultsStorage": [[487, "pynetdicom-sop-class-tractographyresultsstorage"]], "pynetdicom.sop_class.TwelveLeadECGWaveformStorage": [[488, "pynetdicom-sop-class-twelveleadecgwaveformstorage"]], "pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance": [[489, "pynetdicom-sop-class-upsfilteredglobalsubscriptioninstance"]], "pynetdicom.sop_class.UPSGlobalSubscriptionInstance": [[490, "pynetdicom-sop-class-upsglobalsubscriptioninstance"]], "pynetdicom.sop_class.UltrasoundImageStorage": [[491, "pynetdicom-sop-class-ultrasoundimagestorage"]], "pynetdicom.sop_class.UltrasoundMultiFrameImageStorage": [[492, "pynetdicom-sop-class-ultrasoundmultiframeimagestorage"]], "pynetdicom.sop_class.UnifiedProcedureStepEvent": [[493, "pynetdicom-sop-class-unifiedprocedurestepevent"]], "pynetdicom.sop_class.UnifiedProcedureStepPull": [[494, "pynetdicom-sop-class-unifiedproceduresteppull"]], "pynetdicom.sop_class.UnifiedProcedureStepPush": [[495, "pynetdicom-sop-class-unifiedproceduresteppush"]], "pynetdicom.sop_class.UnifiedProcedureStepQuery": [[496, "pynetdicom-sop-class-unifiedprocedurestepquery"]], "pynetdicom.sop_class.UnifiedProcedureStepWatch": [[497, "pynetdicom-sop-class-unifiedprocedurestepwatch"]], "pynetdicom.sop_class.VLEndoscopicImageStorage": [[498, "pynetdicom-sop-class-vlendoscopicimagestorage"]], "pynetdicom.sop_class.VLMicroscopicImageStorage": [[499, "pynetdicom-sop-class-vlmicroscopicimagestorage"]], "pynetdicom.sop_class.VLPhotographicImageStorage": [[500, "pynetdicom-sop-class-vlphotographicimagestorage"]], "pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage": [[501, "pynetdicom-sop-class-vlslidecoordinatesmicroscopicimagestorage"]], "pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage": [[502, "pynetdicom-sop-class-vlwholeslidemicroscopyimagestorage"]], "pynetdicom.sop_class.Verification": [[503, "pynetdicom-sop-class-verification"]], "pynetdicom.sop_class.VideoEndoscopicImageStorage": [[504, "pynetdicom-sop-class-videoendoscopicimagestorage"]], "pynetdicom.sop_class.VideoMicroscopicImageStorage": [[505, "pynetdicom-sop-class-videomicroscopicimagestorage"]], "pynetdicom.sop_class.VideoPhotographicImageStorage": [[506, "pynetdicom-sop-class-videophotographicimagestorage"]], "pynetdicom.sop_class.VisualAcuityMeasurementsStorage": [[507, "pynetdicom-sop-class-visualacuitymeasurementsstorage"]], "pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage": [[508, "pynetdicom-sop-class-volumerenderingvolumetricpresentationstatestorage"]], "pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[509, "pynetdicom-sop-class-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[510, "pynetdicom-sop-class-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pynetdicom.sop_class.XADefinedProcedureProtocolStorage": [[511, "pynetdicom-sop-class-xadefinedprocedureprotocolstorage"]], "pynetdicom.sop_class.XAPerformedProcedureProtocolStorage": [[512, "pynetdicom-sop-class-xaperformedprocedureprotocolstorage"]], "pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[513, "pynetdicom-sop-class-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pynetdicom.sop_class.XRay3DAngiographicImageStorage": [[514, "pynetdicom-sop-class-xray3dangiographicimagestorage"]], "pynetdicom.sop_class.XRay3DCraniofacialImageStorage": [[515, "pynetdicom-sop-class-xray3dcraniofacialimagestorage"]], "pynetdicom.sop_class.XRayAngiographicImageStorage": [[516, "pynetdicom-sop-class-xrayangiographicimagestorage"]], "pynetdicom.sop_class.XRayRadiationDoseSRStorage": [[517, "pynetdicom-sop-class-xrayradiationdosesrstorage"]], "pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage": [[518, "pynetdicom-sop-class-xrayradiofluoroscopicimagestorage"]], "pynetdicom.sop_class.register_uid": [[519, "pynetdicom-sop-class-register-uid"]], "pynetdicom.sop_class.uid_to_service_class": [[520, "pynetdicom-sop-class-uid-to-service-class"]], "pynetdicom.sop_class.uid_to_sop_class": [[521, "pynetdicom-sop-class-uid-to-sop-class"]], "pynetdicom.status.Status": [[522, "pynetdicom-status-status"]], "pynetdicom.status.code_to_category": [[523, "pynetdicom-status-code-to-category"]], "pynetdicom.status.code_to_status": [[524, "pynetdicom-status-code-to-status"]], "pynetdicom.timer.Timer": [[525, "pynetdicom-timer-timer"]], "pynetdicom.transport.AssociationServer": [[526, "pynetdicom-transport-associationserver"]], "pynetdicom.transport.AssociationSocket": [[527, "pynetdicom-transport-associationsocket"]], "pynetdicom.transport.RequestHandler": [[528, "pynetdicom-transport-requesthandler"]], "pynetdicom.transport.T_CONNECT": [[529, "pynetdicom-transport-t-connect"]], "pynetdicom.transport.ThreadedAssociationServer": [[530, "pynetdicom-transport-threadedassociationserver"]], "pynetdicom.utils.decode_bytes": [[531, "pynetdicom-utils-decode-bytes"]], "pynetdicom.utils.make_target": [[532, "pynetdicom-utils-make-target"]], "pynetdicom.utils.pretty_bytes": [[533, "pynetdicom-utils-pretty-bytes"]], "pynetdicom.utils.set_ae": [[534, "pynetdicom-utils-set-ae"]], "pynetdicom.utils.set_uid": [[535, "pynetdicom-utils-set-uid"]], "pynetdicom.utils.validate_uid": [[536, "pynetdicom-utils-validate-uid"]], "Lists of Transfer Syntaxes": [[538, "lists-of-transfer-syntaxes"]], "Variables": [[538, "variables"]], "Utilities": [[538, "utilities"]], "Presentation Service (pynetdicom.presentation)": [[539, "presentation-service-pynetdicom-presentation"]], "Presentation Contexts": [[539, "presentation-contexts"], [569, "presentation-contexts"], [575, "presentation-contexts"], [578, "presentation-contexts"]], "Presentation Context Negotiation": [[539, "presentation-context-negotiation"], [578, "presentation-context-negotiation"]], "Pre-built Presentation Contexts": [[539, "pre-built-presentation-contexts"]], "Service Classes (pynetdicom.service_class)": [[540, "service-classes-pynetdicom-service-class"]], "SOP Classes (pynetdicom.sop_class)": [[541, "sop-classes-pynetdicom-sop-class"]], "SOP Class Utilities": [[541, "sop-class-utilities"]], "Application Event": [[541, "application-event"]], "Basic Worklist": [[541, "basic-worklist"]], "Color Palette": [[541, "color-palette"]], "Defined Procedure": [[541, "defined-procedure"]], "Display System": [[541, "display-system"]], "Hanging Protocol": [[541, "hanging-protocol"]], "Implant Template": [[541, "implant-template"]], "Instance Availability": [[541, "instance-availability"]], "Media Creation": [[541, "media-creation"]], "Media Storage": [[541, "media-storage"]], "Non-patient Object": [[541, "non-patient-object"]], "Print Management": [[541, "print-management"]], "Procedure Step": [[541, "procedure-step"]], "Protocol Approval": [[541, "protocol-approval"]], "Query/Retrieve": [[541, "query-retrieve"]], "Relevant Patient": [[541, "relevant-patient"]], "RT Machine Verification": [[541, "rt-machine-verification"]], "Storage": [[541, "storage"]], "Storage Commitment": [[541, "storage-commitment"]], "Substance Availability": [[541, "substance-availability"]], "Unified Procedure Step": [[541, "unified-procedure-step"]], "Verification": [[541, "verification"]], "Well-known SOP Instances": [[541, "well-known-sop-instances"]], "Statuses (pynetdicom.status)": [[542, "statuses-pynetdicom-status"]], "Timer (pynetdicom.timer)": [[543, "timer-pynetdicom-timer"]], "Transport Service (pynetdicom.transport)": [[544, "transport-service-pynetdicom-transport"]], "Utilities (pynetdicom.utils)": [[545, "utilities-pynetdicom-utils"]], "Application Event Logging Service Class": [[546, "application-event-logging-service-class"]], "Supported SOP Classes": [[546, "supported-sop-classes"], [547, "supported-sop-classes"], [548, "supported-sop-classes"], [549, "supported-sop-classes"], [550, "supported-sop-classes"], [551, "supported-sop-classes"], [552, "supported-sop-classes"], [554, "supported-sop-classes"], [555, "supported-sop-classes"], [556, "supported-sop-classes"], [557, "supported-sop-classes"], [558, "supported-sop-classes"], [559, "supported-sop-classes"], [560, "supported-sop-classes"], [561, "supported-sop-classes"], [562, "supported-sop-classes"], [563, "supported-sop-classes"], [564, "supported-sop-classes"], [565, "supported-sop-classes"], [566, "supported-sop-classes"], [567, "supported-sop-classes"]], "DIMSE Services": [[546, "dimse-services"], [547, "dimse-services"], [548, "dimse-services"], [549, "dimse-services"], [550, "dimse-services"], [551, "dimse-services"], [552, "dimse-services"], [554, "dimse-services"], [555, "dimse-services"], [556, "dimse-services"], [557, "dimse-services"], [558, "dimse-services"], [559, "dimse-services"], [560, "dimse-services"], [561, "dimse-services"], [562, "dimse-services"], [563, "dimse-services"], [564, "dimse-services"], [565, "dimse-services"], [566, "dimse-services"], [567, "dimse-services"]], "Statuses": [[546, "statuses"], [547, "statuses"], [548, "statuses"], [549, "statuses"], [550, "statuses"], [551, "statuses"], [552, "statuses"], [554, "statuses"], [555, "statuses"], [556, "statuses"], [557, "statuses"], [558, "statuses"], [559, "statuses"], [560, "statuses"], [561, "statuses"], [562, "statuses"], [563, "statuses"], [564, "statuses"], [565, "statuses"], [566, "statuses"], [567, "statuses"]], "N-ACTION Statuses": [[546, "n-action-statuses"], [555, "n-action-statuses"], [558, "n-action-statuses"], [562, "n-action-statuses"], [563, "n-action-statuses"], [566, "n-action-statuses"]], "Application Event Logging Service Statuses": [[546, "application-event-logging-service-statuses"]], "Basic Worklist Management Service Class": [[547, "basic-worklist-management-service-class"]], "C-FIND Statuses": [[547, "c-find-statuses"], [548, "c-find-statuses"], [549, "c-find-statuses"], [551, "c-find-statuses"], [552, "c-find-statuses"], [559, "c-find-statuses"], [560, "c-find-statuses"], [561, "c-find-statuses"], [565, "c-find-statuses"], [566, "c-find-statuses"]], "Basic Worklist Management Service Statuses": [[547, "basic-worklist-management-service-statuses"]], "pynetdicom Basic Worklist Management Statuses": [[547, "pynetdicom-basic-worklist-management-statuses"]], "Color Palette Query/Retrieve Service Class": [[548, "color-palette-query-retrieve-service-class"]], "Color Palette Query/Retrieve (Find) Service Statuses": [[548, "color-palette-query-retrieve-find-service-statuses"]], "pynetdicom Color Palette Query/Retrieve (Find) Statuses": [[548, "pynetdicom-color-palette-query-retrieve-find-statuses"]], "C-GET Statuses": [[548, "c-get-statuses"], [549, "c-get-statuses"], [551, "c-get-statuses"], [552, "c-get-statuses"], [559, "c-get-statuses"], [560, "c-get-statuses"]], "Color Palette Query/Retrieve (Get) Service Statuses": [[548, "color-palette-query-retrieve-get-service-statuses"]], "pynetdicom Color Palette Query/Retrieve (Get) Statuses": [[548, "pynetdicom-color-palette-query-retrieve-get-statuses"]], "C-MOVE Statuses": [[548, "c-move-statuses"], [549, "c-move-statuses"], [551, "c-move-statuses"], [552, "c-move-statuses"], [559, "c-move-statuses"], [560, "c-move-statuses"]], "Color Palette Query/Retrieve (Move) Service Statuses": [[548, "color-palette-query-retrieve-move-service-statuses"]], "pynetdicom Color Palette Query/Retrieve (Move) Statuses": [[548, "pynetdicom-color-palette-query-retrieve-move-statuses"]], "Defined Procedure Protocol Query/Retrieve Service Class": [[549, "defined-procedure-protocol-query-retrieve-service-class"]], "Defined Procedure Protocol Query/Retrieve (Find) Service Statuses": [[549, "defined-procedure-protocol-query-retrieve-find-service-statuses"]], "pynetdicom Defined Procedure Protocol Query/Retrieve (Find) Statuses": [[549, "pynetdicom-defined-procedure-protocol-query-retrieve-find-statuses"]], "Defined Procedure Protocol Query/Retrieve (Get) Service Statuses": [[549, "defined-procedure-protocol-query-retrieve-get-service-statuses"]], "pynetdicom Defined Procedure Protocol Query/Retrieve (Get) Statuses": [[549, "pynetdicom-defined-procedure-protocol-query-retrieve-get-statuses"]], "Defined Procedure Protocol Query/Retrieve (Move) Service Statuses": [[549, "defined-procedure-protocol-query-retrieve-move-service-statuses"]], "pynetdicom Defined Procedure Protocol Query/Retrieve (Move) Statuses": [[549, "pynetdicom-defined-procedure-protocol-query-retrieve-move-statuses"]], "Display System Management Service Class": [[550, "display-system-management-service-class"]], "N-GET Statuses": [[550, "n-get-statuses"], [555, "n-get-statuses"], [556, "n-get-statuses"], [558, "n-get-statuses"], [562, "n-get-statuses"], [566, "n-get-statuses"]], "Hanging Protocol Query/Retrieve Service Class": [[551, "hanging-protocol-query-retrieve-service-class"]], "Hanging Protocol Query/Retrieve (Find) Service Statuses": [[551, "hanging-protocol-query-retrieve-find-service-statuses"]], "pynetdicom Hanging Protocol Query/Retrieve (Find) Statuses": [[551, "pynetdicom-hanging-protocol-query-retrieve-find-statuses"]], "Hanging Protocol Query/Retrieve (Get) Service Statuses": [[551, "hanging-protocol-query-retrieve-get-service-statuses"]], "pynetdicom Hanging Protocol Query/Retrieve (Get) Statuses": [[551, "pynetdicom-hanging-protocol-query-retrieve-get-statuses"]], "Hanging Protocol Query/Retrieve (Move) Service Statuses": [[551, "hanging-protocol-query-retrieve-move-service-statuses"]], "pynetdicom Hanging Protocol Query/Retrieve (Move) Statuses": [[551, "pynetdicom-hanging-protocol-query-retrieve-move-statuses"]], "Implant Template Query/Retrieve Service Class": [[552, "implant-template-query-retrieve-service-class"]], "Implant Template Query/Retrieve (Find) Service Statuses": [[552, "implant-template-query-retrieve-find-service-statuses"]], "pynetdicom Implant Template Query/Retrieve (Find) Statuses": [[552, "pynetdicom-implant-template-query-retrieve-find-statuses"]], "Implant Template Query/Retrieve (Get) Service Statuses": [[552, "implant-template-query-retrieve-get-service-statuses"]], "pynetdicom Implant Template Query/Retrieve (Get) Statuses": [[552, "pynetdicom-implant-template-query-retrieve-get-statuses"]], "Implant Template Query/Retrieve (Move) Service Statuses": [[552, "implant-template-query-retrieve-move-service-statuses"]], "pynetdicom Implant Template Query/Retrieve (Move) Statuses": [[552, "pynetdicom-implant-template-query-retrieve-move-statuses"]], "Instance Availability Notification Service Class": [[554, "instance-availability-notification-service-class"]], "N-CREATE Statuses": [[554, "n-create-statuses"], [555, "n-create-statuses"], [556, "n-create-statuses"], [558, "n-create-statuses"], [562, "n-create-statuses"], [566, "n-create-statuses"]], "Media Creation Management Service Class": [[555, "media-creation-management-service-class"]], "Media Creation Management N-ACTION Service Statuses": [[555, "media-creation-management-n-action-service-statuses"]], "Media Creation Management N-CREATE Service Statuses": [[555, "media-creation-management-n-create-service-statuses"]], "Media Creation Management N-GET Service Statuses": [[555, "media-creation-management-n-get-service-statuses"]], "Modality Performed Procedure Step Management": [[556, "modality-performed-procedure-step-management"]], "N-EVENT-REPORT Statuses": [[556, "n-event-report-statuses"], [558, "n-event-report-statuses"], [562, "n-event-report-statuses"], [563, "n-event-report-statuses"], [566, "n-event-report-statuses"]], "N-SET Statuses": [[556, "n-set-statuses"], [558, "n-set-statuses"], [562, "n-set-statuses"], [566, "n-set-statuses"]], "Non-Patient Object Storage Service Class": [[557, "non-patient-object-storage-service-class"]], "C-STORE Statuses": [[557, "c-store-statuses"], [564, "c-store-statuses"]], "Non-Patient Object Storage Service Statuses": [[557, "non-patient-object-storage-service-statuses"]], "pynetdicom Statuses": [[557, "pynetdicom-statuses"], [564, "pynetdicom-statuses"]], "Print Management Service Class": [[558, "print-management-service-class"]], "Meta SOP Classes": [[558, "meta-sop-classes"]], "Print Management N-ACTION Service Statuses": [[558, "print-management-n-action-service-statuses"]], "Print Management N-CREATE Service Statuses": [[558, "print-management-n-create-service-statuses"]], "N-DELETE Statuses": [[558, "n-delete-statuses"], [562, "n-delete-statuses"]], "Print Management N-SET Service Statuses": [[558, "print-management-n-set-service-statuses"]], "Protocol Approval Query/Retrieve Service Class": [[559, "protocol-approval-query-retrieve-service-class"]], "Query/Retrieve (Find) Service Statuses": [[559, "query-retrieve-find-service-statuses"], [560, "query-retrieve-find-service-statuses"]], "pynetdicom Protocol Approval Query/Retrieve (Find) Statuses": [[559, "pynetdicom-protocol-approval-query-retrieve-find-statuses"]], "Protocol Approval Query/Retrieve (Get) Service Statuses": [[559, "protocol-approval-query-retrieve-get-service-statuses"]], "pynetdicom Protocol Approval Query/Retrieve (Get) Statuses": [[559, "pynetdicom-protocol-approval-query-retrieve-get-statuses"]], "Protocol Approval Query/Retrieve (Move) Service Statuses": [[559, "protocol-approval-query-retrieve-move-service-statuses"]], "pynetdicom Protocol Approval Query/Retrieve (Move) Statuses": [[559, "pynetdicom-protocol-approval-query-retrieve-move-statuses"]], "Query/Retrieve Service Class": [[560, "query-retrieve-service-class"]], "pynetdicom Query/Retrieve (Find) Statuses": [[560, "pynetdicom-query-retrieve-find-statuses"]], "Query/Retrieve (Get) Service Statuses": [[560, "query-retrieve-get-service-statuses"]], "pynetdicom Query/Retrieve (Get) Statuses": [[560, "pynetdicom-query-retrieve-get-statuses"]], "Query/Retrieve (Move) Service Statuses": [[560, "query-retrieve-move-service-statuses"]], "pynetdicom Query/Retrieve (Move) Statuses": [[560, "pynetdicom-query-retrieve-move-statuses"]], "Relevant Patient Information Query Service Class": [[561, "relevant-patient-information-query-service-class"]], "Relevant Patient Information Query Service Statuses": [[561, "relevant-patient-information-query-service-statuses"]], "pynetdicom Relevant Patient Information Query Statuses": [[561, "pynetdicom-relevant-patient-information-query-statuses"]], "RT Machine Verification Service Class": [[562, "rt-machine-verification-service-class"]], "RT Machine Verification N-ACTION Service Statuses": [[562, "rt-machine-verification-n-action-service-statuses"]], "RT Machine Verification N-CREATE Service Statuses": [[562, "rt-machine-verification-n-create-service-statuses"]], "RT Machine Verification N-GET Service Statuses": [[562, "rt-machine-verification-n-get-service-statuses"]], "RT Machine Verification N-SET Service Statuses": [[562, "rt-machine-verification-n-set-service-statuses"]], "Storage Commitment Service Class": [[563, "storage-commitment-service-class"]], "Storage Service Class": [[564, "storage-service-class"]], "Storage Service Statuses": [[564, "storage-service-statuses"]], "Substance Administration Query Service Class": [[565, "substance-administration-query-service-class"]], "Substance Administration Query Service Statuses": [[565, "substance-administration-query-service-statuses"]], "pynetdicom Substance Administration Query Statuses": [[565, "pynetdicom-substance-administration-query-statuses"]], "Unified Procedure Step Service Class": [[566, "unified-procedure-step-service-class"]], "UPS C-FIND Service Statuses": [[566, "ups-c-find-service-statuses"]], "pynetdicom C-FIND Statuses": [[566, "pynetdicom-c-find-statuses"]], "UPS N-ACTION Service Statuses": [[566, "ups-n-action-service-statuses"]], "UPS N-CREATE Service Statuses": [[566, "ups-n-create-service-statuses"]], "UPS N-SET Service Statuses": [[566, "ups-n-set-service-statuses"], [566, "id1"]], "Verification Service Class": [[567, "verification-service-class"]], "C-ECHO Statuses": [[567, "c-echo-statuses"]], "Writing your first SCP": [[568, "writing-your-first-scp"]], "The Data Set": [[568, "the-data-set"]], "Creating a Storage SCP": [[568, "creating-a-storage-scp"]], "Events and handlers": [[568, "events-and-handlers"]], "Customising the handler": [[568, "customising-the-handler"]], "The DICOM File Format": [[568, "the-dicom-file-format"]], "Expanding the supported data": [[568, "expanding-the-supported-data"]], "Optimising and passing extra arguments": [[568, "optimising-and-passing-extra-arguments"]], "Next steps": [[568, "next-steps"], [569, "next-steps"]], "Writing your first SCU": [[569, "writing-your-first-scu"]], "DICOM networking": [[569, "dicom-networking"]], "What is an SCU?": [[569, "what-is-an-scu"]], "Start the Echo SCP": [[569, "start-the-echo-scp"]], "Create an Application Entity and associate": [[569, "create-an-application-entity-and-associate"]], "Troubleshooting associations": [[569, "troubleshooting-associations"]], "Creating the Echo SCU": [[569, "creating-the-echo-scu"]], "Turning our AE into an Echo SCU": [[569, "turning-our-ae-into-an-echo-scu"]], "Tutorials": [[570, "tutorials"]], "How to install pynetdicom": [[571, "how-to-install-pynetdicom"]], "Install the official release": [[571, "install-the-official-release"]], "Install using pip": [[571, "install-using-pip"]], "Install using conda": [[571, "install-using-conda"]], "After installation": [[571, "after-installation"]], "Install the development version": [[571, "install-the-development-version"]], "Registering a new SOP Class": [[572, "registering-a-new-sop-class"]], "Application Entity": [[573, "application-entity"]], "Creating an SCU": [[573, "creating-an-scu"]], "Adding requested Presentation Contexts": [[573, "adding-requested-presentation-contexts"]], "Specifying the network port": [[573, "specifying-the-network-port"]], "Association": [[573, "association"], [573, "id1"], [574, "association"], [575, "association"]], "Creating an SCP": [[573, "creating-an-scp"]], "Adding supported Presentation Contexts": [[573, "adding-supported-presentation-contexts"]], "Handling SCP/SCU Role Selection Negotiation": [[573, "handling-scp-scu-role-selection-negotiation"]], "Handling User Identity Negotiation": [[573, "handling-user-identity-negotiation"]], "Specifying the bind address": [[573, "specifying-the-bind-address"]], "References": [[573, "references"]], "Requesting an Association (SCU)": [[574, "requesting-an-association-scu"]], "Specifying the Called AE Title": [[574, "specifying-the-called-ae-title"]], "Specifying Presentation Contexts for each Association": [[574, "specifying-presentation-contexts-for-each-association"]], "Using Extended Negotiation": [[574, "using-extended-negotiation"]], "Binding Event Handlers": [[574, "binding-event-handlers"], [574, "id2"]], "TLS": [[574, "tls"], [574, "id3"]], "Outcomes of an Association Request": [[574, "outcomes-of-an-association-request"]], "Using an Association (SCU)": [[574, "using-an-association-scu"]], "Releasing an Association": [[574, "releasing-an-association"]], "Accessing User Identity Responses": [[574, "accessing-user-identity-responses"]], "Listening for Association Requests (SCP)": [[574, "listening-for-association-requests-scp"]], "Specifying the AE Title": [[574, "specifying-the-ae-title"]], "Specifying Presentation Contexts for each SCP": [[574, "specifying-presentation-contexts-for-each-scp"]], "Providing DIMSE Services (SCP)": [[574, "providing-dimse-services-scp"]], "Important Concepts": [[575, "important-concepts"]], "UIDs": [[575, "uids"]], "DICOM Information Model": [[575, "dicom-information-model"]], "Information Object Definition (IOD)": [[575, "information-object-definition-iod"]], "Service Classes": [[575, "service-classes"]], "Application Entities": [[575, "application-entities"]], "Abstract Syntax": [[575, "abstract-syntax"]], "Transfer Syntax": [[575, "transfer-syntax"]], "Association Negotiation and Extended Negotiation": [[575, "association-negotiation-and-extended-negotiation"]], "Events": [[576, "events"]], "Notification Events": [[576, "notification-events"]], "Intervention Events": [[576, "intervention-events"]], "Association related": [[576, "association-related"]], "Service Class related": [[576, "service-class-related"]], "Event Handlers": [[576, "event-handlers"]], "Introduction": [[578, "introduction"]], "Representation in pynetdicom": [[578, "representation-in-pynetdicom"]], "Presentation Contexts and the Association Requestor": [[578, "presentation-contexts-and-the-association-requestor"]], "Presentation Contexts and the Association Acceptor": [[578, "presentation-contexts-and-the-association-acceptor"]], "Implementation Note": [[578, "implementation-note"]], "SCP/SCU Role Selection": [[578, "scp-scu-role-selection"]]}, "indexentries": {"module": [[42, "module-pynetdicom.acse"], [44, "module-pynetdicom.ae"], [45, "module-pynetdicom.association"], [46, "module-pynetdicom._config"], [48, "module-pynetdicom.dimse_messages"], [49, "module-pynetdicom.dimse_primitives"], [50, "module-pynetdicom.dimse"], [51, "module-pynetdicom.dsutils"], [53, "module-pynetdicom.pdu"], [61, "module-pynetdicom.pdu_items"], [62, "module-pynetdicom.pdu_primitives"], [68, "module-pynetdicom.dul"], [69, "module-pynetdicom.events"], [70, "module-pynetdicom.fsm"], [537, "module-pynetdicom"], [539, "module-pynetdicom.presentation"], [540, "module-pynetdicom.service_class"], [541, "module-pynetdicom.sop_class"], [542, "module-pynetdicom.status"], [543, "module-pynetdicom.timer"], [544, "module-pynetdicom.transport"], [545, "module-pynetdicom.utils"]], "pynetdicom.acse": [[42, "module-pynetdicom.acse"]], "pynetdicom.ae": [[44, "module-pynetdicom.ae"]], "pynetdicom.association": [[45, "module-pynetdicom.association"]], "pynetdicom._config": [[46, "module-pynetdicom._config"]], "pynetdicom.dimse_messages": [[48, "module-pynetdicom.dimse_messages"]], "pynetdicom.dimse_primitives": [[49, "module-pynetdicom.dimse_primitives"]], "pynetdicom.dimse": [[50, "module-pynetdicom.dimse"]], "pynetdicom.dsutils": [[51, "module-pynetdicom.dsutils"]], "pynetdicom.pdu": [[53, "module-pynetdicom.pdu"]], "pynetdicom.pdu_items": [[61, "module-pynetdicom.pdu_items"]], "pynetdicom.pdu_primitives": [[62, "module-pynetdicom.pdu_primitives"]], "pynetdicom.dul": [[68, "module-pynetdicom.dul"]], "pynetdicom.events": [[69, "module-pynetdicom.events"]], "pynetdicom.fsm": [[70, "module-pynetdicom.fsm"]], "pynetdicom_implementation_uid (in module pynetdicom)": [[71, "pynetdicom.PYNETDICOM_IMPLEMENTATION_UID"]], "pynetdicom_implementation_version (in module pynetdicom)": [[72, "pynetdicom.PYNETDICOM_IMPLEMENTATION_VERSION"]], "pynetdicom_uid_prefix (in module pynetdicom)": [[73, "pynetdicom.PYNETDICOM_UID_PREFIX"]], "codecs (in module pynetdicom._config)": [[74, "pynetdicom._config.CODECS"]], "enforce_uid_conformance (in module pynetdicom._config)": [[75, "pynetdicom._config.ENFORCE_UID_CONFORMANCE"]], "log_handler_level (in module pynetdicom._config)": [[76, "pynetdicom._config.LOG_HANDLER_LEVEL"]], "log_request_identifiers (in module pynetdicom._config)": [[77, "pynetdicom._config.LOG_REQUEST_IDENTIFIERS"]], "log_response_identifiers (in module pynetdicom._config)": [[78, "pynetdicom._config.LOG_RESPONSE_IDENTIFIERS"]], "pass_contextvars (in module pynetdicom._config)": [[79, "pynetdicom._config.PASS_CONTEXTVARS"]], "store_recv_chunked_dataset (in module pynetdicom._config)": [[80, "pynetdicom._config.STORE_RECV_CHUNKED_DATASET"]], "store_send_chunked_dataset (in module pynetdicom._config)": [[81, "pynetdicom._config.STORE_SEND_CHUNKED_DATASET"]], "unrestricted_storage_service (in module pynetdicom._config)": [[82, "pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE"]], "use_short_dimse_aet (in module pynetdicom._config)": [[83, "pynetdicom._config.USE_SHORT_DIMSE_AET"]], "validators (in module pynetdicom._config)": [[84, "pynetdicom._config.VALIDATORS"]], "windows_timer_resolution (in module pynetdicom._config)": [[85, "pynetdicom._config.WINDOWS_TIMER_RESOLUTION"]], "all_transfer_syntaxes (in module pynetdicom._globals)": [[86, "pynetdicom._globals.ALL_TRANSFER_SYNTAXES"]], "default_transfer_syntaxes (in module pynetdicom._globals)": [[87, "pynetdicom._globals.DEFAULT_TRANSFER_SYNTAXES"]], "doc_handle_acse() (in module pynetdicom._handlers)": [[88, "pynetdicom._handlers.doc_handle_acse"]], "doc_handle_action() (in module pynetdicom._handlers)": [[89, "pynetdicom._handlers.doc_handle_action"]], "doc_handle_assoc() (in module pynetdicom._handlers)": [[90, "pynetdicom._handlers.doc_handle_assoc"]], "doc_handle_async() (in module pynetdicom._handlers)": [[91, "pynetdicom._handlers.doc_handle_async"]], "doc_handle_c_get() (in module pynetdicom._handlers)": [[92, "pynetdicom._handlers.doc_handle_c_get"]], "doc_handle_create() (in module pynetdicom._handlers)": [[93, "pynetdicom._handlers.doc_handle_create"]], "doc_handle_data() (in module pynetdicom._handlers)": [[94, "pynetdicom._handlers.doc_handle_data"]], "doc_handle_delete() (in module pynetdicom._handlers)": [[95, "pynetdicom._handlers.doc_handle_delete"]], "doc_handle_dimse() (in module pynetdicom._handlers)": [[96, "pynetdicom._handlers.doc_handle_dimse"]], "doc_handle_echo() (in module pynetdicom._handlers)": [[97, "pynetdicom._handlers.doc_handle_echo"]], "doc_handle_event_report() (in module pynetdicom._handlers)": [[98, "pynetdicom._handlers.doc_handle_event_report"]], "doc_handle_find() (in module pynetdicom._handlers)": [[99, "pynetdicom._handlers.doc_handle_find"]], "doc_handle_fsm() (in module pynetdicom._handlers)": [[100, "pynetdicom._handlers.doc_handle_fsm"]], "doc_handle_move() (in module pynetdicom._handlers)": [[101, "pynetdicom._handlers.doc_handle_move"]], "doc_handle_n_get() (in module pynetdicom._handlers)": [[102, "pynetdicom._handlers.doc_handle_n_get"]], "doc_handle_pdu() (in module pynetdicom._handlers)": [[103, "pynetdicom._handlers.doc_handle_pdu"]], "doc_handle_set() (in module pynetdicom._handlers)": [[104, "pynetdicom._handlers.doc_handle_set"]], "doc_handle_sop_common() (in module pynetdicom._handlers)": [[105, "pynetdicom._handlers.doc_handle_sop_common"]], "doc_handle_sop_extended() (in module pynetdicom._handlers)": [[106, "pynetdicom._handlers.doc_handle_sop_extended"]], "doc_handle_store() (in module pynetdicom._handlers)": [[107, "pynetdicom._handlers.doc_handle_store"]], "doc_handle_transport() (in module pynetdicom._handlers)": [[108, "pynetdicom._handlers.doc_handle_transport"]], "doc_handle_userid() (in module pynetdicom._handlers)": [[109, "pynetdicom._handlers.doc_handle_userid"]], "acse (class in pynetdicom.acse)": [[110, "pynetdicom.acse.ACSE"]], "__init__() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.__init__"]], "acceptor (pynetdicom.acse.acse property)": [[110, "pynetdicom.acse.ACSE.acceptor"]], "acse_timeout (pynetdicom.acse.acse property)": [[110, "pynetdicom.acse.ACSE.acse_timeout"]], "assoc (pynetdicom.acse.acse property)": [[110, "pynetdicom.acse.ACSE.assoc"]], "dul (pynetdicom.acse.acse property)": [[110, "pynetdicom.acse.ACSE.dul"]], "is_aborted() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.is_aborted"]], "is_release_requested() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.is_release_requested"]], "negotiate_association() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.negotiate_association"]], "negotiate_release() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.negotiate_release"]], "requestor (pynetdicom.acse.acse property)": [[110, "pynetdicom.acse.ACSE.requestor"]], "send_abort() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.send_abort"]], "send_accept() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.send_accept"]], "send_ap_abort() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.send_ap_abort"]], "send_reject() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.send_reject"]], "send_release() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.send_release"]], "send_request() (pynetdicom.acse.acse method)": [[110, "pynetdicom.acse.ACSE.send_request"]], "socket (pynetdicom.acse.acse property)": [[110, "pynetdicom.acse.ACSE.socket"]], "applicationentity (class in pynetdicom.ae)": [[111, "pynetdicom.ae.ApplicationEntity"]], "__init__() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.__init__"]], "acse_timeout (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.acse_timeout"]], "active_associations (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.active_associations"]], "add_requested_context() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.add_requested_context"]], "add_supported_context() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.add_supported_context"]], "ae_title (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.ae_title"]], "associate() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.associate"]], "connection_timeout (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.connection_timeout"]], "dimse_timeout (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.dimse_timeout"]], "implementation_class_uid (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.implementation_class_uid"]], "implementation_version_name (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.implementation_version_name"]], "make_server() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.make_server"]], "maximum_associations (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.maximum_associations"]], "maximum_pdu_size (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.maximum_pdu_size"]], "network_timeout (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.network_timeout"]], "remove_requested_context() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.remove_requested_context"]], "remove_supported_context() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.remove_supported_context"]], "requested_contexts (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.requested_contexts"]], "require_called_aet (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.require_called_aet"]], "require_calling_aet (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.require_calling_aet"]], "shutdown() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.shutdown"]], "start_server() (pynetdicom.ae.applicationentity method)": [[111, "pynetdicom.ae.ApplicationEntity.start_server"]], "supported_contexts (pynetdicom.ae.applicationentity property)": [[111, "pynetdicom.ae.ApplicationEntity.supported_contexts"]], "association (class in pynetdicom.association)": [[112, "pynetdicom.association.Association"]], "__init__() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.__init__"]], "abort() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.abort"]], "accepted_contexts (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.accepted_contexts"]], "acceptor (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.acceptor"]], "acse (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.acse"]], "acse_timeout (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.acse_timeout"]], "ae (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.ae"]], "bind() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.bind"]], "dimse (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.dimse"]], "dimse_timeout (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.dimse_timeout"]], "dul (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.dul"]], "get_events() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.get_events"]], "get_handlers() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.get_handlers"]], "is_aborted (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.is_aborted"]], "is_acceptor (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.is_acceptor"]], "is_established (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.is_established"]], "is_rejected (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.is_rejected"]], "is_released (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.is_released"]], "is_requestor (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.is_requestor"]], "kill() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.kill"]], "local (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.local"]], "lock (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.lock"]], "mode (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.mode"]], "network_timeout (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.network_timeout"]], "network_timeout_response (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.network_timeout_response"]], "rejected_contexts (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.rejected_contexts"]], "release() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.release"]], "remote (pynetdicom.association.association property)": [[112, "pynetdicom.association.Association.remote"]], "request() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.request"]], "requestor (pynetdicom.association.association attribute)": [[112, "pynetdicom.association.Association.requestor"]], "run_reactor() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.run_reactor"]], "send_c_cancel() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_c_cancel"]], "send_c_echo() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_c_echo"]], "send_c_find() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_c_find"]], "send_c_get() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_c_get"]], "send_c_move() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_c_move"]], "send_c_store() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_c_store"]], "send_n_action() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_n_action"]], "send_n_create() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_n_create"]], "send_n_delete() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_n_delete"]], "send_n_event_report() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_n_event_report"]], "send_n_get() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_n_get"]], "send_n_set() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.send_n_set"]], "set_socket() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.set_socket"]], "unbind() (pynetdicom.association.association method)": [[112, "pynetdicom.association.Association.unbind"]], "serviceuser (class in pynetdicom.association)": [[113, "pynetdicom.association.ServiceUser"]], "__init__() (pynetdicom.association.serviceuser method)": [[113, "pynetdicom.association.ServiceUser.__init__"]], "accepted_common_extended (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.accepted_common_extended"]], "add_negotiation_item() (pynetdicom.association.serviceuser method)": [[113, "pynetdicom.association.ServiceUser.add_negotiation_item"]], "address (pynetdicom.association.serviceuser attribute)": [[113, "pynetdicom.association.ServiceUser.address"]], "ae_title (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.ae_title"]], "asynchronous_operations (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.asynchronous_operations"]], "extended_negotiation (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.extended_negotiation"]], "get_contexts() (pynetdicom.association.serviceuser method)": [[113, "pynetdicom.association.ServiceUser.get_contexts"]], "implementation_class_uid (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.implementation_class_uid"]], "implementation_version_name (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.implementation_version_name"]], "info (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.info"]], "is_acceptor (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.is_acceptor"]], "is_requestor (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.is_requestor"]], "maximum_length (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.maximum_length"]], "mode (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.mode"]], "port (pynetdicom.association.serviceuser attribute)": [[113, "pynetdicom.association.ServiceUser.port"]], "primitive (pynetdicom.association.serviceuser attribute)": [[113, "pynetdicom.association.ServiceUser.primitive"]], "remove_negotiation_item() (pynetdicom.association.serviceuser method)": [[113, "pynetdicom.association.ServiceUser.remove_negotiation_item"]], "requested_contexts (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.requested_contexts"]], "reset_negotiation_items() (pynetdicom.association.serviceuser method)": [[113, "pynetdicom.association.ServiceUser.reset_negotiation_items"]], "role_selection (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.role_selection"]], "sop_class_common_extended (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.sop_class_common_extended"]], "sop_class_extended (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.sop_class_extended"]], "supported_contexts (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.supported_contexts"]], "user_identity (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.user_identity"]], "user_information (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.user_information"]], "writeable (pynetdicom.association.serviceuser property)": [[113, "pynetdicom.association.ServiceUser.writeable"]], "debug_logger() (in module pynetdicom)": [[114, "pynetdicom.debug_logger"]], "dimseserviceprovider (class in pynetdicom.dimse)": [[115, "pynetdicom.dimse.DIMSEServiceProvider"]], "__init__() (pynetdicom.dimse.dimseserviceprovider method)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.__init__"]], "assoc (pynetdicom.dimse.dimseserviceprovider property)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.assoc"]], "cancel_rq (pynetdicom.dimse.dimseserviceprovider attribute)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.cancel_rq"]], "dimse_timeout (pynetdicom.dimse.dimseserviceprovider property)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.dimse_timeout"]], "dul (pynetdicom.dimse.dimseserviceprovider property)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.dul"]], "get_msg() (pynetdicom.dimse.dimseserviceprovider method)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.get_msg"]], "maximum_pdu_size (pynetdicom.dimse.dimseserviceprovider property)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.maximum_pdu_size"]], "message (pynetdicom.dimse.dimseserviceprovider attribute)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.message"]], "msg_queue (pynetdicom.dimse.dimseserviceprovider attribute)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.msg_queue"]], "peek_msg() (pynetdicom.dimse.dimseserviceprovider method)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.peek_msg"]], "receive_primitive() (pynetdicom.dimse.dimseserviceprovider method)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.receive_primitive"]], "send_msg() (pynetdicom.dimse.dimseserviceprovider method)": [[115, "pynetdicom.dimse.DIMSEServiceProvider.send_msg"]], "c_cancel_rq (class in pynetdicom.dimse_messages)": [[116, "pynetdicom.dimse_messages.C_CANCEL_RQ"]], "__init__() (pynetdicom.dimse_messages.c_cancel_rq method)": [[116, "pynetdicom.dimse_messages.C_CANCEL_RQ.__init__"]], "c_echo_rq (class in pynetdicom.dimse_messages)": [[117, "pynetdicom.dimse_messages.C_ECHO_RQ"]], "__init__() (pynetdicom.dimse_messages.c_echo_rq method)": [[117, "pynetdicom.dimse_messages.C_ECHO_RQ.__init__"]], "c_echo_rsp (class in pynetdicom.dimse_messages)": [[118, "pynetdicom.dimse_messages.C_ECHO_RSP"]], "__init__() (pynetdicom.dimse_messages.c_echo_rsp method)": [[118, "pynetdicom.dimse_messages.C_ECHO_RSP.__init__"]], "c_find_rq (class in pynetdicom.dimse_messages)": [[119, "pynetdicom.dimse_messages.C_FIND_RQ"]], "__init__() (pynetdicom.dimse_messages.c_find_rq method)": [[119, "pynetdicom.dimse_messages.C_FIND_RQ.__init__"]], "c_find_rsp (class in pynetdicom.dimse_messages)": [[120, "pynetdicom.dimse_messages.C_FIND_RSP"]], "__init__() (pynetdicom.dimse_messages.c_find_rsp method)": [[120, "pynetdicom.dimse_messages.C_FIND_RSP.__init__"]], "c_get_rq (class in pynetdicom.dimse_messages)": [[121, "pynetdicom.dimse_messages.C_GET_RQ"]], "__init__() (pynetdicom.dimse_messages.c_get_rq method)": [[121, "pynetdicom.dimse_messages.C_GET_RQ.__init__"]], "c_get_rsp (class in pynetdicom.dimse_messages)": [[122, "pynetdicom.dimse_messages.C_GET_RSP"]], "__init__() (pynetdicom.dimse_messages.c_get_rsp method)": [[122, "pynetdicom.dimse_messages.C_GET_RSP.__init__"]], "c_move_rq (class in pynetdicom.dimse_messages)": [[123, "pynetdicom.dimse_messages.C_MOVE_RQ"]], "__init__() (pynetdicom.dimse_messages.c_move_rq method)": [[123, "pynetdicom.dimse_messages.C_MOVE_RQ.__init__"]], "c_move_rsp (class in pynetdicom.dimse_messages)": [[124, "pynetdicom.dimse_messages.C_MOVE_RSP"]], "__init__() (pynetdicom.dimse_messages.c_move_rsp method)": [[124, "pynetdicom.dimse_messages.C_MOVE_RSP.__init__"]], "c_store_rq (class in pynetdicom.dimse_messages)": [[125, "pynetdicom.dimse_messages.C_STORE_RQ"]], "__init__() (pynetdicom.dimse_messages.c_store_rq method)": [[125, "pynetdicom.dimse_messages.C_STORE_RQ.__init__"]], "c_store_rsp (class in pynetdicom.dimse_messages)": [[126, "pynetdicom.dimse_messages.C_STORE_RSP"]], "__init__() (pynetdicom.dimse_messages.c_store_rsp method)": [[126, "pynetdicom.dimse_messages.C_STORE_RSP.__init__"]], "n_action_rq (class in pynetdicom.dimse_messages)": [[127, "pynetdicom.dimse_messages.N_ACTION_RQ"]], "__init__() (pynetdicom.dimse_messages.n_action_rq method)": [[127, "pynetdicom.dimse_messages.N_ACTION_RQ.__init__"]], "n_action_rsp (class in pynetdicom.dimse_messages)": [[128, "pynetdicom.dimse_messages.N_ACTION_RSP"]], "__init__() (pynetdicom.dimse_messages.n_action_rsp method)": [[128, "pynetdicom.dimse_messages.N_ACTION_RSP.__init__"]], "n_create_rq (class in pynetdicom.dimse_messages)": [[129, "pynetdicom.dimse_messages.N_CREATE_RQ"]], "__init__() (pynetdicom.dimse_messages.n_create_rq method)": [[129, "pynetdicom.dimse_messages.N_CREATE_RQ.__init__"]], "n_create_rsp (class in pynetdicom.dimse_messages)": [[130, "pynetdicom.dimse_messages.N_CREATE_RSP"]], "__init__() (pynetdicom.dimse_messages.n_create_rsp method)": [[130, "pynetdicom.dimse_messages.N_CREATE_RSP.__init__"]], "n_delete_rq (class in pynetdicom.dimse_messages)": [[131, "pynetdicom.dimse_messages.N_DELETE_RQ"]], "__init__() (pynetdicom.dimse_messages.n_delete_rq method)": [[131, "pynetdicom.dimse_messages.N_DELETE_RQ.__init__"]], "n_delete_rsp (class in pynetdicom.dimse_messages)": [[132, "pynetdicom.dimse_messages.N_DELETE_RSP"]], "__init__() (pynetdicom.dimse_messages.n_delete_rsp method)": [[132, "pynetdicom.dimse_messages.N_DELETE_RSP.__init__"]], "n_event_report_rq (class in pynetdicom.dimse_messages)": [[133, "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ"]], "__init__() (pynetdicom.dimse_messages.n_event_report_rq method)": [[133, "pynetdicom.dimse_messages.N_EVENT_REPORT_RQ.__init__"]], "n_event_report_rsp (class in pynetdicom.dimse_messages)": [[134, "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP"]], "__init__() (pynetdicom.dimse_messages.n_event_report_rsp method)": [[134, "pynetdicom.dimse_messages.N_EVENT_REPORT_RSP.__init__"]], "n_get_rq (class in pynetdicom.dimse_messages)": [[135, "pynetdicom.dimse_messages.N_GET_RQ"]], "__init__() (pynetdicom.dimse_messages.n_get_rq method)": [[135, "pynetdicom.dimse_messages.N_GET_RQ.__init__"]], "n_get_rsp (class in pynetdicom.dimse_messages)": [[136, "pynetdicom.dimse_messages.N_GET_RSP"]], "__init__() (pynetdicom.dimse_messages.n_get_rsp method)": [[136, "pynetdicom.dimse_messages.N_GET_RSP.__init__"]], "n_set_rq (class in pynetdicom.dimse_messages)": [[137, "pynetdicom.dimse_messages.N_SET_RQ"]], "__init__() (pynetdicom.dimse_messages.n_set_rq method)": [[137, "pynetdicom.dimse_messages.N_SET_RQ.__init__"]], "n_set_rsp (class in pynetdicom.dimse_messages)": [[138, "pynetdicom.dimse_messages.N_SET_RSP"]], "__init__() (pynetdicom.dimse_messages.n_set_rsp method)": [[138, "pynetdicom.dimse_messages.N_SET_RSP.__init__"]], "c_cancel (class in pynetdicom.dimse_primitives)": [[139, "pynetdicom.dimse_primitives.C_CANCEL"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_cancel property)": [[139, "pynetdicom.dimse_primitives.C_CANCEL.MessageIDBeingRespondedTo"]], "__init__() (pynetdicom.dimse_primitives.c_cancel method)": [[139, "pynetdicom.dimse_primitives.C_CANCEL.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_echo attribute)": [[140, "pynetdicom.dimse_primitives.C_ECHO.AffectedSOPClassUID"]], "c_echo (class in pynetdicom.dimse_primitives)": [[140, "pynetdicom.dimse_primitives.C_ECHO"]], "errorcomment (pynetdicom.dimse_primitives.c_echo attribute)": [[140, "pynetdicom.dimse_primitives.C_ECHO.ErrorComment"]], "messageid (pynetdicom.dimse_primitives.c_echo attribute)": [[140, "pynetdicom.dimse_primitives.C_ECHO.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_echo attribute)": [[140, "pynetdicom.dimse_primitives.C_ECHO.MessageIDBeingRespondedTo"]], "status (pynetdicom.dimse_primitives.c_echo attribute)": [[140, "pynetdicom.dimse_primitives.C_ECHO.Status"]], "__init__() (pynetdicom.dimse_primitives.c_echo method)": [[140, "pynetdicom.dimse_primitives.C_ECHO.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_find attribute)": [[141, "pynetdicom.dimse_primitives.C_FIND.AffectedSOPClassUID"]], "c_find (class in pynetdicom.dimse_primitives)": [[141, "pynetdicom.dimse_primitives.C_FIND"]], "errorcomment (pynetdicom.dimse_primitives.c_find attribute)": [[141, "pynetdicom.dimse_primitives.C_FIND.ErrorComment"]], "identifier (pynetdicom.dimse_primitives.c_find property)": [[141, "pynetdicom.dimse_primitives.C_FIND.Identifier"]], "messageid (pynetdicom.dimse_primitives.c_find attribute)": [[141, "pynetdicom.dimse_primitives.C_FIND.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_find attribute)": [[141, "pynetdicom.dimse_primitives.C_FIND.MessageIDBeingRespondedTo"]], "offendingelement (pynetdicom.dimse_primitives.c_find attribute)": [[141, "pynetdicom.dimse_primitives.C_FIND.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_find property)": [[141, "pynetdicom.dimse_primitives.C_FIND.Priority"]], "status (pynetdicom.dimse_primitives.c_find attribute)": [[141, "pynetdicom.dimse_primitives.C_FIND.Status"]], "__init__() (pynetdicom.dimse_primitives.c_find method)": [[141, "pynetdicom.dimse_primitives.C_FIND.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_get attribute)": [[142, "pynetdicom.dimse_primitives.C_GET.AffectedSOPClassUID"]], "c_get (class in pynetdicom.dimse_primitives)": [[142, "pynetdicom.dimse_primitives.C_GET"]], "errorcomment (pynetdicom.dimse_primitives.c_get attribute)": [[142, "pynetdicom.dimse_primitives.C_GET.ErrorComment"]], "identifier (pynetdicom.dimse_primitives.c_get property)": [[142, "pynetdicom.dimse_primitives.C_GET.Identifier"]], "messageid (pynetdicom.dimse_primitives.c_get attribute)": [[142, "pynetdicom.dimse_primitives.C_GET.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_get attribute)": [[142, "pynetdicom.dimse_primitives.C_GET.MessageIDBeingRespondedTo"]], "numberofcompletedsuboperations (pynetdicom.dimse_primitives.c_get property)": [[142, "pynetdicom.dimse_primitives.C_GET.NumberOfCompletedSuboperations"]], "numberoffailedsuboperations (pynetdicom.dimse_primitives.c_get property)": [[142, "pynetdicom.dimse_primitives.C_GET.NumberOfFailedSuboperations"]], "numberofremainingsuboperations (pynetdicom.dimse_primitives.c_get property)": [[142, "pynetdicom.dimse_primitives.C_GET.NumberOfRemainingSuboperations"]], "numberofwarningsuboperations (pynetdicom.dimse_primitives.c_get property)": [[142, "pynetdicom.dimse_primitives.C_GET.NumberOfWarningSuboperations"]], "offendingelement (pynetdicom.dimse_primitives.c_get attribute)": [[142, "pynetdicom.dimse_primitives.C_GET.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_get property)": [[142, "pynetdicom.dimse_primitives.C_GET.Priority"]], "status (pynetdicom.dimse_primitives.c_get attribute)": [[142, "pynetdicom.dimse_primitives.C_GET.Status"]], "__init__() (pynetdicom.dimse_primitives.c_get method)": [[142, "pynetdicom.dimse_primitives.C_GET.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_move attribute)": [[143, "pynetdicom.dimse_primitives.C_MOVE.AffectedSOPClassUID"]], "c_move (class in pynetdicom.dimse_primitives)": [[143, "pynetdicom.dimse_primitives.C_MOVE"]], "errorcomment (pynetdicom.dimse_primitives.c_move attribute)": [[143, "pynetdicom.dimse_primitives.C_MOVE.ErrorComment"]], "identifier (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.Identifier"]], "messageid (pynetdicom.dimse_primitives.c_move attribute)": [[143, "pynetdicom.dimse_primitives.C_MOVE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_move attribute)": [[143, "pynetdicom.dimse_primitives.C_MOVE.MessageIDBeingRespondedTo"]], "movedestination (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.MoveDestination"]], "numberofcompletedsuboperations (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.NumberOfCompletedSuboperations"]], "numberoffailedsuboperations (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.NumberOfFailedSuboperations"]], "numberofremainingsuboperations (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.NumberOfRemainingSuboperations"]], "numberofwarningsuboperations (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.NumberOfWarningSuboperations"]], "offendingelement (pynetdicom.dimse_primitives.c_move attribute)": [[143, "pynetdicom.dimse_primitives.C_MOVE.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_move property)": [[143, "pynetdicom.dimse_primitives.C_MOVE.Priority"]], "status (pynetdicom.dimse_primitives.c_move attribute)": [[143, "pynetdicom.dimse_primitives.C_MOVE.Status"]], "__init__() (pynetdicom.dimse_primitives.c_move method)": [[143, "pynetdicom.dimse_primitives.C_MOVE.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.c_store attribute)": [[144, "pynetdicom.dimse_primitives.C_STORE.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.c_store property)": [[144, "pynetdicom.dimse_primitives.C_STORE.AffectedSOPInstanceUID"]], "c_store (class in pynetdicom.dimse_primitives)": [[144, "pynetdicom.dimse_primitives.C_STORE"]], "dataset (pynetdicom.dimse_primitives.c_store property)": [[144, "pynetdicom.dimse_primitives.C_STORE.DataSet"]], "errorcomment (pynetdicom.dimse_primitives.c_store attribute)": [[144, "pynetdicom.dimse_primitives.C_STORE.ErrorComment"]], "messageid (pynetdicom.dimse_primitives.c_store attribute)": [[144, "pynetdicom.dimse_primitives.C_STORE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.c_store attribute)": [[144, "pynetdicom.dimse_primitives.C_STORE.MessageIDBeingRespondedTo"]], "moveoriginatorapplicationentitytitle (pynetdicom.dimse_primitives.c_store property)": [[144, "pynetdicom.dimse_primitives.C_STORE.MoveOriginatorApplicationEntityTitle"]], "moveoriginatormessageid (pynetdicom.dimse_primitives.c_store property)": [[144, "pynetdicom.dimse_primitives.C_STORE.MoveOriginatorMessageID"]], "offendingelement (pynetdicom.dimse_primitives.c_store attribute)": [[144, "pynetdicom.dimse_primitives.C_STORE.OffendingElement"]], "priority (pynetdicom.dimse_primitives.c_store property)": [[144, "pynetdicom.dimse_primitives.C_STORE.Priority"]], "status (pynetdicom.dimse_primitives.c_store attribute)": [[144, "pynetdicom.dimse_primitives.C_STORE.Status"]], "__init__() (pynetdicom.dimse_primitives.c_store method)": [[144, "pynetdicom.dimse_primitives.C_STORE.__init__"]], "actioninformation (pynetdicom.dimse_primitives.n_action property)": [[145, "pynetdicom.dimse_primitives.N_ACTION.ActionInformation"]], "actionreply (pynetdicom.dimse_primitives.n_action property)": [[145, "pynetdicom.dimse_primitives.N_ACTION.ActionReply"]], "actiontypeid (pynetdicom.dimse_primitives.n_action property)": [[145, "pynetdicom.dimse_primitives.N_ACTION.ActionTypeID"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_action attribute)": [[145, "pynetdicom.dimse_primitives.N_ACTION.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_action property)": [[145, "pynetdicom.dimse_primitives.N_ACTION.AffectedSOPInstanceUID"]], "messageid (pynetdicom.dimse_primitives.n_action attribute)": [[145, "pynetdicom.dimse_primitives.N_ACTION.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_action attribute)": [[145, "pynetdicom.dimse_primitives.N_ACTION.MessageIDBeingRespondedTo"]], "n_action (class in pynetdicom.dimse_primitives)": [[145, "pynetdicom.dimse_primitives.N_ACTION"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_action property)": [[145, "pynetdicom.dimse_primitives.N_ACTION.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_action property)": [[145, "pynetdicom.dimse_primitives.N_ACTION.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_action attribute)": [[145, "pynetdicom.dimse_primitives.N_ACTION.Status"]], "__init__() (pynetdicom.dimse_primitives.n_action method)": [[145, "pynetdicom.dimse_primitives.N_ACTION.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_create attribute)": [[146, "pynetdicom.dimse_primitives.N_CREATE.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_create property)": [[146, "pynetdicom.dimse_primitives.N_CREATE.AffectedSOPInstanceUID"]], "attributelist (pynetdicom.dimse_primitives.n_create property)": [[146, "pynetdicom.dimse_primitives.N_CREATE.AttributeList"]], "messageid (pynetdicom.dimse_primitives.n_create attribute)": [[146, "pynetdicom.dimse_primitives.N_CREATE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_create attribute)": [[146, "pynetdicom.dimse_primitives.N_CREATE.MessageIDBeingRespondedTo"]], "n_create (class in pynetdicom.dimse_primitives)": [[146, "pynetdicom.dimse_primitives.N_CREATE"]], "status (pynetdicom.dimse_primitives.n_create attribute)": [[146, "pynetdicom.dimse_primitives.N_CREATE.Status"]], "__init__() (pynetdicom.dimse_primitives.n_create method)": [[146, "pynetdicom.dimse_primitives.N_CREATE.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_delete attribute)": [[147, "pynetdicom.dimse_primitives.N_DELETE.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_delete property)": [[147, "pynetdicom.dimse_primitives.N_DELETE.AffectedSOPInstanceUID"]], "messageid (pynetdicom.dimse_primitives.n_delete attribute)": [[147, "pynetdicom.dimse_primitives.N_DELETE.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_delete attribute)": [[147, "pynetdicom.dimse_primitives.N_DELETE.MessageIDBeingRespondedTo"]], "n_delete (class in pynetdicom.dimse_primitives)": [[147, "pynetdicom.dimse_primitives.N_DELETE"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_delete property)": [[147, "pynetdicom.dimse_primitives.N_DELETE.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_delete property)": [[147, "pynetdicom.dimse_primitives.N_DELETE.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_delete attribute)": [[147, "pynetdicom.dimse_primitives.N_DELETE.Status"]], "__init__() (pynetdicom.dimse_primitives.n_delete method)": [[147, "pynetdicom.dimse_primitives.N_DELETE.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_event_report attribute)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_event_report property)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.AffectedSOPInstanceUID"]], "eventinformation (pynetdicom.dimse_primitives.n_event_report property)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.EventInformation"]], "eventreply (pynetdicom.dimse_primitives.n_event_report property)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.EventReply"]], "eventtypeid (pynetdicom.dimse_primitives.n_event_report property)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.EventTypeID"]], "messageid (pynetdicom.dimse_primitives.n_event_report attribute)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_event_report attribute)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.MessageIDBeingRespondedTo"]], "n_event_report (class in pynetdicom.dimse_primitives)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT"]], "status (pynetdicom.dimse_primitives.n_event_report attribute)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.Status"]], "__init__() (pynetdicom.dimse_primitives.n_event_report method)": [[148, "pynetdicom.dimse_primitives.N_EVENT_REPORT.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_get attribute)": [[149, "pynetdicom.dimse_primitives.N_GET.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_get property)": [[149, "pynetdicom.dimse_primitives.N_GET.AffectedSOPInstanceUID"]], "attributeidentifierlist (pynetdicom.dimse_primitives.n_get property)": [[149, "pynetdicom.dimse_primitives.N_GET.AttributeIdentifierList"]], "attributelist (pynetdicom.dimse_primitives.n_get property)": [[149, "pynetdicom.dimse_primitives.N_GET.AttributeList"]], "messageid (pynetdicom.dimse_primitives.n_get attribute)": [[149, "pynetdicom.dimse_primitives.N_GET.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_get attribute)": [[149, "pynetdicom.dimse_primitives.N_GET.MessageIDBeingRespondedTo"]], "n_get (class in pynetdicom.dimse_primitives)": [[149, "pynetdicom.dimse_primitives.N_GET"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_get property)": [[149, "pynetdicom.dimse_primitives.N_GET.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_get property)": [[149, "pynetdicom.dimse_primitives.N_GET.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_get attribute)": [[149, "pynetdicom.dimse_primitives.N_GET.Status"]], "__init__() (pynetdicom.dimse_primitives.n_get method)": [[149, "pynetdicom.dimse_primitives.N_GET.__init__"]], "affectedsopclassuid (pynetdicom.dimse_primitives.n_set attribute)": [[150, "pynetdicom.dimse_primitives.N_SET.AffectedSOPClassUID"]], "affectedsopinstanceuid (pynetdicom.dimse_primitives.n_set property)": [[150, "pynetdicom.dimse_primitives.N_SET.AffectedSOPInstanceUID"]], "attributelist (pynetdicom.dimse_primitives.n_set property)": [[150, "pynetdicom.dimse_primitives.N_SET.AttributeList"]], "messageid (pynetdicom.dimse_primitives.n_set attribute)": [[150, "pynetdicom.dimse_primitives.N_SET.MessageID"]], "messageidbeingrespondedto (pynetdicom.dimse_primitives.n_set attribute)": [[150, "pynetdicom.dimse_primitives.N_SET.MessageIDBeingRespondedTo"]], "modificationlist (pynetdicom.dimse_primitives.n_set property)": [[150, "pynetdicom.dimse_primitives.N_SET.ModificationList"]], "n_set (class in pynetdicom.dimse_primitives)": [[150, "pynetdicom.dimse_primitives.N_SET"]], "requestedsopclassuid (pynetdicom.dimse_primitives.n_set property)": [[150, "pynetdicom.dimse_primitives.N_SET.RequestedSOPClassUID"]], "requestedsopinstanceuid (pynetdicom.dimse_primitives.n_set property)": [[150, "pynetdicom.dimse_primitives.N_SET.RequestedSOPInstanceUID"]], "status (pynetdicom.dimse_primitives.n_set attribute)": [[150, "pynetdicom.dimse_primitives.N_SET.Status"]], "__init__() (pynetdicom.dimse_primitives.n_set method)": [[150, "pynetdicom.dimse_primitives.N_SET.__init__"]], "decode() (in module pynetdicom.dsutils)": [[151, "pynetdicom.dsutils.decode"]], "encode() (in module pynetdicom.dsutils)": [[152, "pynetdicom.dsutils.encode"]], "pretty_dataset() (in module pynetdicom.dsutils)": [[153, "pynetdicom.dsutils.pretty_dataset"]], "pretty_element() (in module pynetdicom.dsutils)": [[154, "pynetdicom.dsutils.pretty_element"]], "dulserviceprovider (class in pynetdicom.dul)": [[155, "pynetdicom.dul.DULServiceProvider"]], "__init__() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.__init__"]], "artim_timer (pynetdicom.dul.dulserviceprovider attribute)": [[155, "pynetdicom.dul.DULServiceProvider.artim_timer"]], "assoc (pynetdicom.dul.dulserviceprovider property)": [[155, "pynetdicom.dul.DULServiceProvider.assoc"]], "event_queue (pynetdicom.dul.dulserviceprovider attribute)": [[155, "pynetdicom.dul.DULServiceProvider.event_queue"]], "idle_timer_expired() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.idle_timer_expired"]], "kill_dul() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.kill_dul"]], "network_timeout (pynetdicom.dul.dulserviceprovider property)": [[155, "pynetdicom.dul.DULServiceProvider.network_timeout"]], "peek_next_pdu() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.peek_next_pdu"]], "receive_pdu() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.receive_pdu"]], "run_reactor() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.run_reactor"]], "send_pdu() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.send_pdu"]], "socket (pynetdicom.dul.dulserviceprovider attribute)": [[155, "pynetdicom.dul.DULServiceProvider.socket"]], "state_machine (pynetdicom.dul.dulserviceprovider attribute)": [[155, "pynetdicom.dul.DULServiceProvider.state_machine"]], "stop_dul() (pynetdicom.dul.dulserviceprovider method)": [[155, "pynetdicom.dul.DULServiceProvider.stop_dul"]], "to_provider_queue (pynetdicom.dul.dulserviceprovider attribute)": [[155, "pynetdicom.dul.DULServiceProvider.to_provider_queue"]], "to_user_queue (pynetdicom.dul.dulserviceprovider attribute)": [[155, "pynetdicom.dul.DULServiceProvider.to_user_queue"]], "event (class in pynetdicom.events)": [[156, "pynetdicom.events.Event"]], "__init__() (pynetdicom.events.event method)": [[156, "pynetdicom.events.Event.__init__"]], "action_information (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.action_information"]], "action_type (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.action_type"]], "assoc (pynetdicom.events.event attribute)": [[156, "pynetdicom.events.Event.assoc"]], "attribute_identifiers (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.attribute_identifiers"]], "attribute_list (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.attribute_list"]], "dataset (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.dataset"]], "dataset_path (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.dataset_path"]], "event (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.event"]], "event_information (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.event_information"]], "event_type (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.event_type"]], "file_meta (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.file_meta"]], "identifier (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.identifier"]], "is_cancelled (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.is_cancelled"]], "message_id (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.message_id"]], "modification_list (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.modification_list"]], "move_destination (pynetdicom.events.event property)": [[156, "pynetdicom.events.Event.move_destination"]], "timestamp (pynetdicom.events.event attribute)": [[156, "pynetdicom.events.Event.timestamp"]], "interventionevent (class in pynetdicom.events)": [[157, "pynetdicom.events.InterventionEvent"]], "__init__() (pynetdicom.events.interventionevent method)": [[157, "pynetdicom.events.InterventionEvent.__init__"]], "description (pynetdicom.events.interventionevent attribute)": [[157, "pynetdicom.events.InterventionEvent.description"]], "is_intervention (pynetdicom.events.interventionevent attribute)": [[157, "pynetdicom.events.InterventionEvent.is_intervention"]], "is_notification (pynetdicom.events.interventionevent attribute)": [[157, "pynetdicom.events.InterventionEvent.is_notification"]], "name (pynetdicom.events.interventionevent attribute)": [[157, "pynetdicom.events.InterventionEvent.name"]], "notificationevent (class in pynetdicom.events)": [[158, "pynetdicom.events.NotificationEvent"]], "__init__() (pynetdicom.events.notificationevent method)": [[158, "pynetdicom.events.NotificationEvent.__init__"]], "description (pynetdicom.events.notificationevent attribute)": [[158, "pynetdicom.events.NotificationEvent.description"]], "is_intervention (pynetdicom.events.notificationevent attribute)": [[158, "pynetdicom.events.NotificationEvent.is_intervention"]], "is_notification (pynetdicom.events.notificationevent attribute)": [[158, "pynetdicom.events.NotificationEvent.is_notification"]], "name (pynetdicom.events.notificationevent attribute)": [[158, "pynetdicom.events.NotificationEvent.name"]], "trigger() (in module pynetdicom.events)": [[159, "pynetdicom.events.trigger"]], "aa_1() (in module pynetdicom.fsm)": [[160, "pynetdicom.fsm.AA_1"]], "aa_2() (in module pynetdicom.fsm)": [[161, "pynetdicom.fsm.AA_2"]], "aa_3() (in module pynetdicom.fsm)": [[162, "pynetdicom.fsm.AA_3"]], "aa_4() (in module pynetdicom.fsm)": [[163, "pynetdicom.fsm.AA_4"]], "aa_5() (in module pynetdicom.fsm)": [[164, "pynetdicom.fsm.AA_5"]], "aa_6() (in module pynetdicom.fsm)": [[165, "pynetdicom.fsm.AA_6"]], "aa_7() (in module pynetdicom.fsm)": [[166, "pynetdicom.fsm.AA_7"]], "aa_8() (in module pynetdicom.fsm)": [[167, "pynetdicom.fsm.AA_8"]], "ae_1() (in module pynetdicom.fsm)": [[168, "pynetdicom.fsm.AE_1"]], "ae_2() (in module pynetdicom.fsm)": [[169, "pynetdicom.fsm.AE_2"]], "ae_3() (in module pynetdicom.fsm)": [[170, "pynetdicom.fsm.AE_3"]], "ae_4() (in module pynetdicom.fsm)": [[171, "pynetdicom.fsm.AE_4"]], "ae_5() (in module pynetdicom.fsm)": [[172, "pynetdicom.fsm.AE_5"]], "ae_6() (in module pynetdicom.fsm)": [[173, "pynetdicom.fsm.AE_6"]], "ae_7() (in module pynetdicom.fsm)": [[174, "pynetdicom.fsm.AE_7"]], "ae_8() (in module pynetdicom.fsm)": [[175, "pynetdicom.fsm.AE_8"]], "ar_1() (in module pynetdicom.fsm)": [[176, "pynetdicom.fsm.AR_1"]], "ar_10() (in module pynetdicom.fsm)": [[177, "pynetdicom.fsm.AR_10"]], "ar_2() (in module pynetdicom.fsm)": [[178, "pynetdicom.fsm.AR_2"]], "ar_3() (in module pynetdicom.fsm)": [[179, "pynetdicom.fsm.AR_3"]], "ar_4() (in module pynetdicom.fsm)": [[180, "pynetdicom.fsm.AR_4"]], "ar_5() (in module pynetdicom.fsm)": [[181, "pynetdicom.fsm.AR_5"]], "ar_6() (in module pynetdicom.fsm)": [[182, "pynetdicom.fsm.AR_6"]], "ar_7() (in module pynetdicom.fsm)": [[183, "pynetdicom.fsm.AR_7"]], "ar_8() (in module pynetdicom.fsm)": [[184, "pynetdicom.fsm.AR_8"]], "ar_9() (in module pynetdicom.fsm)": [[185, "pynetdicom.fsm.AR_9"]], "dt_1() (in module pynetdicom.fsm)": [[186, "pynetdicom.fsm.DT_1"]], "dt_2() (in module pynetdicom.fsm)": [[187, "pynetdicom.fsm.DT_2"]], "statemachine (class in pynetdicom.fsm)": [[188, "pynetdicom.fsm.StateMachine"]], "__init__() (pynetdicom.fsm.statemachine method)": [[188, "pynetdicom.fsm.StateMachine.__init__"]], "current_state (pynetdicom.fsm.statemachine attribute)": [[188, "pynetdicom.fsm.StateMachine.current_state"]], "do_action() (pynetdicom.fsm.statemachine method)": [[188, "pynetdicom.fsm.StateMachine.do_action"]], "dul (pynetdicom.fsm.statemachine attribute)": [[188, "pynetdicom.fsm.StateMachine.dul"]], "transition() (pynetdicom.fsm.statemachine method)": [[188, "pynetdicom.fsm.StateMachine.transition"]], "a_abort_rq (class in pynetdicom.pdu)": [[189, "pynetdicom.pdu.A_ABORT_RQ"]], "__init__() (pynetdicom.pdu.a_abort_rq method)": [[189, "pynetdicom.pdu.A_ABORT_RQ.__init__"]], "from_primitive() (pynetdicom.pdu.a_abort_rq method)": [[189, "pynetdicom.pdu.A_ABORT_RQ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_abort_rq property)": [[189, "pynetdicom.pdu.A_ABORT_RQ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_abort_rq attribute)": [[189, "pynetdicom.pdu.A_ABORT_RQ.pdu_type"]], "reason_diagnostic (pynetdicom.pdu.a_abort_rq attribute)": [[189, "pynetdicom.pdu.A_ABORT_RQ.reason_diagnostic"]], "reason_str (pynetdicom.pdu.a_abort_rq property)": [[189, "pynetdicom.pdu.A_ABORT_RQ.reason_str"]], "source (pynetdicom.pdu.a_abort_rq attribute)": [[189, "pynetdicom.pdu.A_ABORT_RQ.source"]], "source_str (pynetdicom.pdu.a_abort_rq property)": [[189, "pynetdicom.pdu.A_ABORT_RQ.source_str"]], "to_primitive() (pynetdicom.pdu.a_abort_rq method)": [[189, "pynetdicom.pdu.A_ABORT_RQ.to_primitive"]], "a_associate_ac (class in pynetdicom.pdu)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC"]], "__init__() (pynetdicom.pdu.a_associate_ac method)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.__init__"]], "application_context_name (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.application_context_name"]], "called_ae_title (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.called_ae_title"]], "calling_ae_title (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.calling_ae_title"]], "from_primitive() (pynetdicom.pdu.a_associate_ac method)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.from_primitive"]], "pdu_length (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.pdu_length"]], "pdu_type (pynetdicom.pdu.a_associate_ac attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.pdu_type"]], "presentation_context (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.presentation_context"]], "protocol_version (pynetdicom.pdu.a_associate_ac attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.protocol_version"]], "reserved_aec (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.reserved_aec"]], "reserved_aet (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.reserved_aet"]], "to_primitive() (pynetdicom.pdu.a_associate_ac method)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.to_primitive"]], "user_information (pynetdicom.pdu.a_associate_ac property)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.user_information"]], "variable_items (pynetdicom.pdu.a_associate_ac attribute)": [[190, "pynetdicom.pdu.A_ASSOCIATE_AC.variable_items"]], "a_associate_rj (class in pynetdicom.pdu)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ"]], "__init__() (pynetdicom.pdu.a_associate_rj method)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.__init__"]], "from_primitive() (pynetdicom.pdu.a_associate_rj method)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_associate_rj property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_associate_rj attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.pdu_type"]], "reason_diagnostic (pynetdicom.pdu.a_associate_rj attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.reason_diagnostic"]], "reason_str (pynetdicom.pdu.a_associate_rj property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.reason_str"]], "result (pynetdicom.pdu.a_associate_rj attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.result"]], "result_str (pynetdicom.pdu.a_associate_rj property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.result_str"]], "source (pynetdicom.pdu.a_associate_rj attribute)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.source"]], "source_str (pynetdicom.pdu.a_associate_rj property)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.source_str"]], "to_primitive() (pynetdicom.pdu.a_associate_rj method)": [[191, "pynetdicom.pdu.A_ASSOCIATE_RJ.to_primitive"]], "a_associate_rq (class in pynetdicom.pdu)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ"]], "__init__() (pynetdicom.pdu.a_associate_rq method)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.__init__"]], "application_context_name (pynetdicom.pdu.a_associate_rq property)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.application_context_name"]], "called_ae_title (pynetdicom.pdu.a_associate_rq property)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.called_ae_title"]], "calling_ae_title (pynetdicom.pdu.a_associate_rq property)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.calling_ae_title"]], "from_primitive() (pynetdicom.pdu.a_associate_rq method)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_associate_rq property)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_associate_rq attribute)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.pdu_type"]], "presentation_context (pynetdicom.pdu.a_associate_rq property)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.presentation_context"]], "protocol_version (pynetdicom.pdu.a_associate_rq attribute)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.protocol_version"]], "to_primitive() (pynetdicom.pdu.a_associate_rq method)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.to_primitive"]], "user_information (pynetdicom.pdu.a_associate_rq property)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.user_information"]], "variable_items (pynetdicom.pdu.a_associate_rq attribute)": [[192, "pynetdicom.pdu.A_ASSOCIATE_RQ.variable_items"]], "a_release_rp (class in pynetdicom.pdu)": [[193, "pynetdicom.pdu.A_RELEASE_RP"]], "__init__() (pynetdicom.pdu.a_release_rp method)": [[193, "pynetdicom.pdu.A_RELEASE_RP.__init__"]], "from_primitive() (pynetdicom.pdu.a_release_rp static method)": [[193, "pynetdicom.pdu.A_RELEASE_RP.from_primitive"]], "pdu_length (pynetdicom.pdu.a_release_rp property)": [[193, "pynetdicom.pdu.A_RELEASE_RP.pdu_length"]], "pdu_type (pynetdicom.pdu.a_release_rp attribute)": [[193, "pynetdicom.pdu.A_RELEASE_RP.pdu_type"]], "to_primitive() (pynetdicom.pdu.a_release_rp static method)": [[193, "pynetdicom.pdu.A_RELEASE_RP.to_primitive"]], "a_release_rq (class in pynetdicom.pdu)": [[194, "pynetdicom.pdu.A_RELEASE_RQ"]], "__init__() (pynetdicom.pdu.a_release_rq method)": [[194, "pynetdicom.pdu.A_RELEASE_RQ.__init__"]], "from_primitive() (pynetdicom.pdu.a_release_rq static method)": [[194, "pynetdicom.pdu.A_RELEASE_RQ.from_primitive"]], "pdu_length (pynetdicom.pdu.a_release_rq property)": [[194, "pynetdicom.pdu.A_RELEASE_RQ.pdu_length"]], "pdu_type (pynetdicom.pdu.a_release_rq attribute)": [[194, "pynetdicom.pdu.A_RELEASE_RQ.pdu_type"]], "to_primitive() (pynetdicom.pdu.a_release_rq static method)": [[194, "pynetdicom.pdu.A_RELEASE_RQ.to_primitive"]], "p_data_tf (class in pynetdicom.pdu)": [[195, "pynetdicom.pdu.P_DATA_TF"]], "__init__() (pynetdicom.pdu.p_data_tf method)": [[195, "pynetdicom.pdu.P_DATA_TF.__init__"]], "from_primitive() (pynetdicom.pdu.p_data_tf method)": [[195, "pynetdicom.pdu.P_DATA_TF.from_primitive"]], "pdu_length (pynetdicom.pdu.p_data_tf property)": [[195, "pynetdicom.pdu.P_DATA_TF.pdu_length"]], "pdu_type (pynetdicom.pdu.p_data_tf attribute)": [[195, "pynetdicom.pdu.P_DATA_TF.pdu_type"]], "presentation_data_value_items (pynetdicom.pdu.p_data_tf attribute)": [[195, "pynetdicom.pdu.P_DATA_TF.presentation_data_value_items"]], "to_primitive() (pynetdicom.pdu.p_data_tf method)": [[195, "pynetdicom.pdu.P_DATA_TF.to_primitive"]], "presentationdatavalueitem (class in pynetdicom.pdu)": [[196, "pynetdicom.pdu.PresentationDataValueItem"]], "__init__() (pynetdicom.pdu.presentationdatavalueitem method)": [[196, "pynetdicom.pdu.PresentationDataValueItem.__init__"]], "context_id (pynetdicom.pdu.presentationdatavalueitem property)": [[196, "pynetdicom.pdu.PresentationDataValueItem.context_id"]], "data (pynetdicom.pdu.presentationdatavalueitem property)": [[196, "pynetdicom.pdu.PresentationDataValueItem.data"]], "item_length (pynetdicom.pdu.presentationdatavalueitem property)": [[196, "pynetdicom.pdu.PresentationDataValueItem.item_length"]], "item_type (pynetdicom.pdu.presentationdatavalueitem property)": [[196, "pynetdicom.pdu.PresentationDataValueItem.item_type"]], "message_control_header_byte (pynetdicom.pdu.presentationdatavalueitem property)": [[196, "pynetdicom.pdu.PresentationDataValueItem.message_control_header_byte"]], "abstractsyntaxsubitem (class in pynetdicom.pdu_items)": [[197, "pynetdicom.pdu_items.AbstractSyntaxSubItem"]], "__init__() (pynetdicom.pdu_items.abstractsyntaxsubitem method)": [[197, "pynetdicom.pdu_items.AbstractSyntaxSubItem.__init__"]], "abstract_syntax (pynetdicom.pdu_items.abstractsyntaxsubitem property)": [[197, "pynetdicom.pdu_items.AbstractSyntaxSubItem.abstract_syntax"]], "abstract_syntax_name (pynetdicom.pdu_items.abstractsyntaxsubitem property)": [[197, "pynetdicom.pdu_items.AbstractSyntaxSubItem.abstract_syntax_name"]], "item_length (pynetdicom.pdu_items.abstractsyntaxsubitem property)": [[197, "pynetdicom.pdu_items.AbstractSyntaxSubItem.item_length"]], "applicationcontextitem (class in pynetdicom.pdu_items)": [[198, "pynetdicom.pdu_items.ApplicationContextItem"]], "__init__() (pynetdicom.pdu_items.applicationcontextitem method)": [[198, "pynetdicom.pdu_items.ApplicationContextItem.__init__"]], "application_context_name (pynetdicom.pdu_items.applicationcontextitem property)": [[198, "pynetdicom.pdu_items.ApplicationContextItem.application_context_name"]], "item_length (pynetdicom.pdu_items.applicationcontextitem property)": [[198, "pynetdicom.pdu_items.ApplicationContextItem.item_length"]], "asynchronousoperationswindowsubitem (class in pynetdicom.pdu_items)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem"]], "__init__() (pynetdicom.pdu_items.asynchronousoperationswindowsubitem method)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.asynchronousoperationswindowsubitem method)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.asynchronousoperationswindowsubitem property)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.item_length"]], "max_operations_invoked (pynetdicom.pdu_items.asynchronousoperationswindowsubitem property)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.max_operations_invoked"]], "max_operations_performed (pynetdicom.pdu_items.asynchronousoperationswindowsubitem property)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.max_operations_performed"]], "to_primitive() (pynetdicom.pdu_items.asynchronousoperationswindowsubitem method)": [[199, "pynetdicom.pdu_items.AsynchronousOperationsWindowSubItem.to_primitive"]], "implementationclassuidsubitem (class in pynetdicom.pdu_items)": [[200, "pynetdicom.pdu_items.ImplementationClassUIDSubItem"]], "__init__() (pynetdicom.pdu_items.implementationclassuidsubitem method)": [[200, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.implementationclassuidsubitem method)": [[200, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.from_primitive"]], "implementation_class_uid (pynetdicom.pdu_items.implementationclassuidsubitem property)": [[200, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.implementation_class_uid"]], "item_length (pynetdicom.pdu_items.implementationclassuidsubitem property)": [[200, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.item_length"]], "to_primitive() (pynetdicom.pdu_items.implementationclassuidsubitem method)": [[200, "pynetdicom.pdu_items.ImplementationClassUIDSubItem.to_primitive"]], "implementationversionnamesubitem (class in pynetdicom.pdu_items)": [[201, "pynetdicom.pdu_items.ImplementationVersionNameSubItem"]], "__init__() (pynetdicom.pdu_items.implementationversionnamesubitem method)": [[201, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.implementationversionnamesubitem method)": [[201, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.from_primitive"]], "implementation_version_name (pynetdicom.pdu_items.implementationversionnamesubitem property)": [[201, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.implementation_version_name"]], "item_length (pynetdicom.pdu_items.implementationversionnamesubitem property)": [[201, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.item_length"]], "to_primitive() (pynetdicom.pdu_items.implementationversionnamesubitem method)": [[201, "pynetdicom.pdu_items.ImplementationVersionNameSubItem.to_primitive"]], "maximumlengthsubitem (class in pynetdicom.pdu_items)": [[202, "pynetdicom.pdu_items.MaximumLengthSubItem"]], "__init__() (pynetdicom.pdu_items.maximumlengthsubitem method)": [[202, "pynetdicom.pdu_items.MaximumLengthSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.maximumlengthsubitem method)": [[202, "pynetdicom.pdu_items.MaximumLengthSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.maximumlengthsubitem property)": [[202, "pynetdicom.pdu_items.MaximumLengthSubItem.item_length"]], "to_primitive() (pynetdicom.pdu_items.maximumlengthsubitem method)": [[202, "pynetdicom.pdu_items.MaximumLengthSubItem.to_primitive"]], "presentationcontextitemac (class in pynetdicom.pdu_items)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC"]], "__init__() (pynetdicom.pdu_items.presentationcontextitemac method)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.__init__"]], "context_id (pynetdicom.pdu_items.presentationcontextitemac property)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.context_id"]], "from_primitive() (pynetdicom.pdu_items.presentationcontextitemac method)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.from_primitive"]], "item_length (pynetdicom.pdu_items.presentationcontextitemac property)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.item_length"]], "result (pynetdicom.pdu_items.presentationcontextitemac property)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.result"]], "result_str (pynetdicom.pdu_items.presentationcontextitemac property)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.result_str"]], "to_primitive() (pynetdicom.pdu_items.presentationcontextitemac method)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.to_primitive"]], "transfer_syntax (pynetdicom.pdu_items.presentationcontextitemac property)": [[203, "pynetdicom.pdu_items.PresentationContextItemAC.transfer_syntax"]], "presentationcontextitemrq (class in pynetdicom.pdu_items)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ"]], "__init__() (pynetdicom.pdu_items.presentationcontextitemrq method)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.__init__"]], "abstract_syntax (pynetdicom.pdu_items.presentationcontextitemrq property)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.abstract_syntax"]], "context_id (pynetdicom.pdu_items.presentationcontextitemrq property)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.context_id"]], "from_primitive() (pynetdicom.pdu_items.presentationcontextitemrq method)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.from_primitive"]], "item_length (pynetdicom.pdu_items.presentationcontextitemrq property)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.item_length"]], "to_primitive() (pynetdicom.pdu_items.presentationcontextitemrq method)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.to_primitive"]], "transfer_syntax (pynetdicom.pdu_items.presentationcontextitemrq property)": [[204, "pynetdicom.pdu_items.PresentationContextItemRQ.transfer_syntax"]], "presentationdatavalueitem (class in pynetdicom.pdu_items)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem"]], "__init__() (pynetdicom.pdu_items.presentationdatavalueitem method)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem.__init__"]], "context_id (pynetdicom.pdu_items.presentationdatavalueitem property)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem.context_id"]], "data (pynetdicom.pdu_items.presentationdatavalueitem property)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem.data"]], "item_length (pynetdicom.pdu_items.presentationdatavalueitem property)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem.item_length"]], "item_type (pynetdicom.pdu_items.presentationdatavalueitem property)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem.item_type"]], "message_control_header_byte (pynetdicom.pdu_items.presentationdatavalueitem property)": [[205, "pynetdicom.pdu_items.PresentationDataValueItem.message_control_header_byte"]], "scp_scu_roleselectionsubitem (class in pynetdicom.pdu_items)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem"]], "__init__() (pynetdicom.pdu_items.scp_scu_roleselectionsubitem method)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.scp_scu_roleselectionsubitem method)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.item_length"]], "scp (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scp"]], "scp_role (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scp_role"]], "scu (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scu"]], "scu_role (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.scu_role"]], "sop_class_uid (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.sop_class_uid"]], "to_primitive() (pynetdicom.pdu_items.scp_scu_roleselectionsubitem method)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.to_primitive"]], "uid (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.uid"]], "uid_length (pynetdicom.pdu_items.scp_scu_roleselectionsubitem property)": [[206, "pynetdicom.pdu_items.SCP_SCU_RoleSelectionSubItem.uid_length"]], "sopclasscommonextendednegotiationsubitem (class in pynetdicom.pdu_items)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem"]], "__init__() (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem method)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.__init__"]], "from_primitive() (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem method)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.item_length"]], "related_general_sop_class_identification (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.related_general_sop_class_identification"]], "related_general_sop_class_identification_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.related_general_sop_class_identification_length"]], "service_class_uid (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.service_class_uid"]], "service_class_uid_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.service_class_uid_length"]], "sop_class_uid (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.sop_class_uid"]], "sop_class_uid_length (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem property)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.sop_class_uid_length"]], "to_primitive() (pynetdicom.pdu_items.sopclasscommonextendednegotiationsubitem method)": [[207, "pynetdicom.pdu_items.SOPClassCommonExtendedNegotiationSubItem.to_primitive"]], "sopclassextendednegotiationsubitem (class in pynetdicom.pdu_items)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem"]], "__init__() (pynetdicom.pdu_items.sopclassextendednegotiationsubitem method)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.__init__"]], "app_info (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.app_info"]], "from_primitive() (pynetdicom.pdu_items.sopclassextendednegotiationsubitem method)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.from_primitive"]], "item_length (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.item_length"]], "sop_class_uid (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.sop_class_uid"]], "sop_class_uid_length (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.sop_class_uid_length"]], "to_primitive() (pynetdicom.pdu_items.sopclassextendednegotiationsubitem method)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.to_primitive"]], "uid (pynetdicom.pdu_items.sopclassextendednegotiationsubitem property)": [[208, "pynetdicom.pdu_items.SOPClassExtendedNegotiationSubItem.uid"]], "transfersyntaxsubitem (class in pynetdicom.pdu_items)": [[209, "pynetdicom.pdu_items.TransferSyntaxSubItem"]], "__init__() (pynetdicom.pdu_items.transfersyntaxsubitem method)": [[209, "pynetdicom.pdu_items.TransferSyntaxSubItem.__init__"]], "item_length (pynetdicom.pdu_items.transfersyntaxsubitem property)": [[209, "pynetdicom.pdu_items.TransferSyntaxSubItem.item_length"]], "transfer_syntax (pynetdicom.pdu_items.transfersyntaxsubitem property)": [[209, "pynetdicom.pdu_items.TransferSyntaxSubItem.transfer_syntax"]], "transfer_syntax_name (pynetdicom.pdu_items.transfersyntaxsubitem property)": [[209, "pynetdicom.pdu_items.TransferSyntaxSubItem.transfer_syntax_name"]], "useridentitysubitemac (class in pynetdicom.pdu_items)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC"]], "__init__() (pynetdicom.pdu_items.useridentitysubitemac method)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC.__init__"]], "from_primitive() (pynetdicom.pdu_items.useridentitysubitemac method)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC.from_primitive"]], "item_length (pynetdicom.pdu_items.useridentitysubitemac property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC.item_length"]], "response (pynetdicom.pdu_items.useridentitysubitemac property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC.response"]], "server_response_length (pynetdicom.pdu_items.useridentitysubitemac property)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC.server_response_length"]], "to_primitive() (pynetdicom.pdu_items.useridentitysubitemac method)": [[210, "pynetdicom.pdu_items.UserIdentitySubItemAC.to_primitive"]], "useridentitysubitemrq (class in pynetdicom.pdu_items)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ"]], "__init__() (pynetdicom.pdu_items.useridentitysubitemrq method)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.__init__"]], "from_primitive() (pynetdicom.pdu_items.useridentitysubitemrq method)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.from_primitive"]], "id_type (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.id_type"]], "id_type_str (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.id_type_str"]], "item_length (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.item_length"]], "primary (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.primary"]], "primary_field_length (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.primary_field_length"]], "response_requested (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.response_requested"]], "secondary (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.secondary"]], "secondary_field_length (pynetdicom.pdu_items.useridentitysubitemrq property)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.secondary_field_length"]], "to_primitive() (pynetdicom.pdu_items.useridentitysubitemrq method)": [[211, "pynetdicom.pdu_items.UserIdentitySubItemRQ.to_primitive"]], "userinformationitem (class in pynetdicom.pdu_items)": [[212, "pynetdicom.pdu_items.UserInformationItem"]], "__init__() (pynetdicom.pdu_items.userinformationitem method)": [[212, "pynetdicom.pdu_items.UserInformationItem.__init__"]], "async_ops_window (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.async_ops_window"]], "common_ext_neg (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.common_ext_neg"]], "ext_neg (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.ext_neg"]], "from_primitive() (pynetdicom.pdu_items.userinformationitem method)": [[212, "pynetdicom.pdu_items.UserInformationItem.from_primitive"]], "implementation_class_uid (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.implementation_class_uid"]], "implementation_version_name (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.implementation_version_name"]], "item_length (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.item_length"]], "maximum_length (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.maximum_length"]], "role_selection (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.role_selection"]], "to_primitive() (pynetdicom.pdu_items.userinformationitem method)": [[212, "pynetdicom.pdu_items.UserInformationItem.to_primitive"]], "user_identity (pynetdicom.pdu_items.userinformationitem property)": [[212, "pynetdicom.pdu_items.UserInformationItem.user_identity"]], "a_abort (class in pynetdicom.pdu_primitives)": [[213, "pynetdicom.pdu_primitives.A_ABORT"]], "__init__() (pynetdicom.pdu_primitives.a_abort method)": [[213, "pynetdicom.pdu_primitives.A_ABORT.__init__"]], "abort_source (pynetdicom.pdu_primitives.a_abort property)": [[213, "pynetdicom.pdu_primitives.A_ABORT.abort_source"]], "a_associate (class in pynetdicom.pdu_primitives)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE"]], "__init__() (pynetdicom.pdu_primitives.a_associate method)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.__init__"]], "application_context_name (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.application_context_name"]], "called_ae_title (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.called_ae_title"]], "called_presentation_address (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.called_presentation_address"]], "calling_ae_title (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.calling_ae_title"]], "calling_presentation_address (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.calling_presentation_address"]], "diagnostic (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.diagnostic"]], "implementation_class_uid (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.implementation_class_uid"]], "maximum_length_received (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.maximum_length_received"]], "mode (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.mode"]], "presentation_context_definition_list (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.presentation_context_definition_list"]], "presentation_context_definition_results_list (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.presentation_context_definition_results_list"]], "presentation_requirements (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.presentation_requirements"]], "reason_str (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.reason_str"]], "responding_ae_title (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.responding_ae_title"]], "responding_presentation_address (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.responding_presentation_address"]], "result (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.result"]], "result_source (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.result_source"]], "result_str (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.result_str"]], "session_requirements (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.session_requirements"]], "source_str (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.source_str"]], "user_information (pynetdicom.pdu_primitives.a_associate property)": [[214, "pynetdicom.pdu_primitives.A_ASSOCIATE.user_information"]], "a_p_abort (class in pynetdicom.pdu_primitives)": [[215, "pynetdicom.pdu_primitives.A_P_ABORT"]], "__init__() (pynetdicom.pdu_primitives.a_p_abort method)": [[215, "pynetdicom.pdu_primitives.A_P_ABORT.__init__"]], "provider_reason (pynetdicom.pdu_primitives.a_p_abort property)": [[215, "pynetdicom.pdu_primitives.A_P_ABORT.provider_reason"]], "a_release (class in pynetdicom.pdu_primitives)": [[216, "pynetdicom.pdu_primitives.A_RELEASE"]], "__init__() (pynetdicom.pdu_primitives.a_release method)": [[216, "pynetdicom.pdu_primitives.A_RELEASE.__init__"]], "reason (pynetdicom.pdu_primitives.a_release property)": [[216, "pynetdicom.pdu_primitives.A_RELEASE.reason"]], "result (pynetdicom.pdu_primitives.a_release property)": [[216, "pynetdicom.pdu_primitives.A_RELEASE.result"]], "asynchronousoperationswindownegotiation (class in pynetdicom.pdu_primitives)": [[217, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation"]], "__init__() (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation method)": [[217, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation method)": [[217, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.from_primitive"]], "maximum_number_operations_invoked (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation property)": [[217, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.maximum_number_operations_invoked"]], "maximum_number_operations_performed (pynetdicom.pdu_primitives.asynchronousoperationswindownegotiation property)": [[217, "pynetdicom.pdu_primitives.AsynchronousOperationsWindowNegotiation.maximum_number_operations_performed"]], "implementationclassuidnotification (class in pynetdicom.pdu_primitives)": [[218, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification"]], "__init__() (pynetdicom.pdu_primitives.implementationclassuidnotification method)": [[218, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.implementationclassuidnotification method)": [[218, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification.from_primitive"]], "implementation_class_uid (pynetdicom.pdu_primitives.implementationclassuidnotification property)": [[218, "pynetdicom.pdu_primitives.ImplementationClassUIDNotification.implementation_class_uid"]], "implementationversionnamenotification (class in pynetdicom.pdu_primitives)": [[219, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification"]], "__init__() (pynetdicom.pdu_primitives.implementationversionnamenotification method)": [[219, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.implementationversionnamenotification method)": [[219, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification.from_primitive"]], "implementation_version_name (pynetdicom.pdu_primitives.implementationversionnamenotification property)": [[219, "pynetdicom.pdu_primitives.ImplementationVersionNameNotification.implementation_version_name"]], "maximumlengthnotification (class in pynetdicom.pdu_primitives)": [[220, "pynetdicom.pdu_primitives.MaximumLengthNotification"]], "__init__() (pynetdicom.pdu_primitives.maximumlengthnotification method)": [[220, "pynetdicom.pdu_primitives.MaximumLengthNotification.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.maximumlengthnotification method)": [[220, "pynetdicom.pdu_primitives.MaximumLengthNotification.from_primitive"]], "maximum_length_received (pynetdicom.pdu_primitives.maximumlengthnotification property)": [[220, "pynetdicom.pdu_primitives.MaximumLengthNotification.maximum_length_received"]], "p_data (class in pynetdicom.pdu_primitives)": [[221, "pynetdicom.pdu_primitives.P_DATA"]], "__init__() (pynetdicom.pdu_primitives.p_data method)": [[221, "pynetdicom.pdu_primitives.P_DATA.__init__"]], "presentation_data_value_list (pynetdicom.pdu_primitives.p_data property)": [[221, "pynetdicom.pdu_primitives.P_DATA.presentation_data_value_list"]], "scp_scu_roleselectionnegotiation (class in pynetdicom.pdu_primitives)": [[222, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation"]], "__init__() (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation method)": [[222, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation method)": [[222, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.from_primitive"]], "scp_role (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation property)": [[222, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.scp_role"]], "scu_role (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation property)": [[222, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.scu_role"]], "sop_class_uid (pynetdicom.pdu_primitives.scp_scu_roleselectionnegotiation property)": [[222, "pynetdicom.pdu_primitives.SCP_SCU_RoleSelectionNegotiation.sop_class_uid"]], "sopclasscommonextendednegotiation (class in pynetdicom.pdu_primitives)": [[223, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation"]], "__init__() (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation method)": [[223, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation method)": [[223, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.from_primitive"]], "related_general_sop_class_identification (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation property)": [[223, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.related_general_sop_class_identification"]], "service_class_uid (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation property)": [[223, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.service_class_uid"]], "sop_class_uid (pynetdicom.pdu_primitives.sopclasscommonextendednegotiation property)": [[223, "pynetdicom.pdu_primitives.SOPClassCommonExtendedNegotiation.sop_class_uid"]], "sopclassextendednegotiation (class in pynetdicom.pdu_primitives)": [[224, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation"]], "__init__() (pynetdicom.pdu_primitives.sopclassextendednegotiation method)": [[224, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.sopclassextendednegotiation method)": [[224, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.from_primitive"]], "service_class_application_information (pynetdicom.pdu_primitives.sopclassextendednegotiation property)": [[224, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.service_class_application_information"]], "sop_class_uid (pynetdicom.pdu_primitives.sopclassextendednegotiation property)": [[224, "pynetdicom.pdu_primitives.SOPClassExtendedNegotiation.sop_class_uid"]], "useridentitynegotiation (class in pynetdicom.pdu_primitives)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation"]], "__init__() (pynetdicom.pdu_primitives.useridentitynegotiation method)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.__init__"]], "from_primitive() (pynetdicom.pdu_primitives.useridentitynegotiation method)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.from_primitive"]], "positive_response_requested (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.positive_response_requested"]], "primary_field (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.primary_field"]], "secondary_field (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.secondary_field"]], "server_response (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.server_response"]], "user_identity_type (pynetdicom.pdu_primitives.useridentitynegotiation property)": [[225, "pynetdicom.pdu_primitives.UserIdentityNegotiation.user_identity_type"]], "allstoragepresentationcontexts (in module pynetdicom.presentation)": [[226, "pynetdicom.presentation.AllStoragePresentationContexts"]], "applicationeventloggingpresentationcontexts (in module pynetdicom.presentation)": [[227, "pynetdicom.presentation.ApplicationEventLoggingPresentationContexts"]], "basicworklistmanagementpresentationcontexts (in module pynetdicom.presentation)": [[228, "pynetdicom.presentation.BasicWorklistManagementPresentationContexts"]], "colorpalettepresentationcontexts (in module pynetdicom.presentation)": [[229, "pynetdicom.presentation.ColorPalettePresentationContexts"]], "definedprocedureprotocolpresentationcontexts (in module pynetdicom.presentation)": [[230, "pynetdicom.presentation.DefinedProcedureProtocolPresentationContexts"]], "displaysystempresentationcontexts (in module pynetdicom.presentation)": [[231, "pynetdicom.presentation.DisplaySystemPresentationContexts"]], "hangingprotocolpresentationcontexts (in module pynetdicom.presentation)": [[232, "pynetdicom.presentation.HangingProtocolPresentationContexts"]], "implanttemplatepresentationcontexts (in module pynetdicom.presentation)": [[233, "pynetdicom.presentation.ImplantTemplatePresentationContexts"]], "instanceavailabilitypresentationcontexts (in module pynetdicom.presentation)": [[234, "pynetdicom.presentation.InstanceAvailabilityPresentationContexts"]], "mediacreationmanagementpresentationcontexts (in module pynetdicom.presentation)": [[235, "pynetdicom.presentation.MediaCreationManagementPresentationContexts"]], "mediastoragepresentationcontexts (in module pynetdicom.presentation)": [[236, "pynetdicom.presentation.MediaStoragePresentationContexts"]], "modalityperformedpresentationcontexts (in module pynetdicom.presentation)": [[237, "pynetdicom.presentation.ModalityPerformedPresentationContexts"]], "nonpatientobjectpresentationcontexts (in module pynetdicom.presentation)": [[238, "pynetdicom.presentation.NonPatientObjectPresentationContexts"]], "presentationcontext (class in pynetdicom.presentation)": [[239, "pynetdicom.presentation.PresentationContext"]], "__init__() (pynetdicom.presentation.presentationcontext method)": [[239, "pynetdicom.presentation.PresentationContext.__init__"]], "abstract_syntax (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.abstract_syntax"]], "add_transfer_syntax() (pynetdicom.presentation.presentationcontext method)": [[239, "pynetdicom.presentation.PresentationContext.add_transfer_syntax"]], "as_scp (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.as_scp"]], "as_scu (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.as_scu"]], "as_tuple (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.as_tuple"]], "context_id (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.context_id"]], "result (pynetdicom.presentation.presentationcontext attribute)": [[239, "pynetdicom.presentation.PresentationContext.result"]], "scp_role (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.scp_role"]], "scu_role (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.scu_role"]], "status (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.status"]], "transfer_syntax (pynetdicom.presentation.presentationcontext property)": [[239, "pynetdicom.presentation.PresentationContext.transfer_syntax"]], "presentationcontexttuple (class in pynetdicom.presentation)": [[240, "pynetdicom.presentation.PresentationContextTuple"]], "__init__() (pynetdicom.presentation.presentationcontexttuple method)": [[240, "pynetdicom.presentation.PresentationContextTuple.__init__"]], "abstract_syntax (pynetdicom.presentation.presentationcontexttuple attribute)": [[240, "pynetdicom.presentation.PresentationContextTuple.abstract_syntax"]], "context_id (pynetdicom.presentation.presentationcontexttuple attribute)": [[240, "pynetdicom.presentation.PresentationContextTuple.context_id"]], "transfer_syntax (pynetdicom.presentation.presentationcontexttuple attribute)": [[240, "pynetdicom.presentation.PresentationContextTuple.transfer_syntax"]], "printmanagementpresentationcontexts (in module pynetdicom.presentation)": [[241, "pynetdicom.presentation.PrintManagementPresentationContexts"]], "proceduresteppresentationcontexts (in module pynetdicom.presentation)": [[242, "pynetdicom.presentation.ProcedureStepPresentationContexts"]], "protocolapprovalpresentationcontexts (in module pynetdicom.presentation)": [[243, "pynetdicom.presentation.ProtocolApprovalPresentationContexts"]], "queryretrievepresentationcontexts (in module pynetdicom.presentation)": [[244, "pynetdicom.presentation.QueryRetrievePresentationContexts"]], "rtmachineverificationpresentationcontexts (in module pynetdicom.presentation)": [[245, "pynetdicom.presentation.RTMachineVerificationPresentationContexts"]], "relevantpatientinformationpresentationcontexts (in module pynetdicom.presentation)": [[246, "pynetdicom.presentation.RelevantPatientInformationPresentationContexts"]], "storagecommitmentpresentationcontexts (in module pynetdicom.presentation)": [[247, "pynetdicom.presentation.StorageCommitmentPresentationContexts"]], "storagepresentationcontexts (in module pynetdicom.presentation)": [[248, "pynetdicom.presentation.StoragePresentationContexts"]], "substanceadministrationpresentationcontexts (in module pynetdicom.presentation)": [[249, "pynetdicom.presentation.SubstanceAdministrationPresentationContexts"]], "unifiedprocedurepresentationcontexts (in module pynetdicom.presentation)": [[250, "pynetdicom.presentation.UnifiedProcedurePresentationContexts"]], "verificationpresentationcontexts (in module pynetdicom.presentation)": [[251, "pynetdicom.presentation.VerificationPresentationContexts"]], "build_context() (in module pynetdicom.presentation)": [[252, "pynetdicom.presentation.build_context"]], "build_role() (in module pynetdicom.presentation)": [[253, "pynetdicom.presentation.build_role"]], "negotiate_as_acceptor() (in module pynetdicom.presentation)": [[254, "pynetdicom.presentation.negotiate_as_acceptor"]], "negotiate_as_requestor() (in module pynetdicom.presentation)": [[255, "pynetdicom.presentation.negotiate_as_requestor"]], "basicworklistmanagementserviceclass (class in pynetdicom.service_class)": [[256, "pynetdicom.service_class.BasicWorklistManagementServiceClass"]], "scp() (pynetdicom.service_class.basicworklistmanagementserviceclass method)": [[256, "pynetdicom.service_class.BasicWorklistManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class.basicworklistmanagementserviceclass method)": [[256, "pynetdicom.service_class.BasicWorklistManagementServiceClass.__init__"]], "colorpalettequeryretrieveserviceclass (class in pynetdicom.service_class)": [[257, "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.colorpalettequeryretrieveserviceclass method)": [[257, "pynetdicom.service_class.ColorPaletteQueryRetrieveServiceClass.__init__"]], "definedprocedureprotocolqueryretrieveserviceclass (class in pynetdicom.service_class)": [[258, "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.definedprocedureprotocolqueryretrieveserviceclass method)": [[258, "pynetdicom.service_class.DefinedProcedureProtocolQueryRetrieveServiceClass.__init__"]], "hangingprotocolqueryretrieveserviceclass (class in pynetdicom.service_class)": [[259, "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.hangingprotocolqueryretrieveserviceclass method)": [[259, "pynetdicom.service_class.HangingProtocolQueryRetrieveServiceClass.__init__"]], "implanttemplatequeryretrieveserviceclass (class in pynetdicom.service_class)": [[260, "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.implanttemplatequeryretrieveserviceclass method)": [[260, "pynetdicom.service_class.ImplantTemplateQueryRetrieveServiceClass.__init__"]], "nonpatientobjectstorageserviceclass (class in pynetdicom.service_class)": [[261, "pynetdicom.service_class.NonPatientObjectStorageServiceClass"]], "__init__() (pynetdicom.service_class.nonpatientobjectstorageserviceclass method)": [[261, "pynetdicom.service_class.NonPatientObjectStorageServiceClass.__init__"]], "protocolapprovalqueryretrieveserviceclass (class in pynetdicom.service_class)": [[262, "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass"]], "__init__() (pynetdicom.service_class.protocolapprovalqueryretrieveserviceclass method)": [[262, "pynetdicom.service_class.ProtocolApprovalQueryRetrieveServiceClass.__init__"]], "queryretrieveserviceclass (class in pynetdicom.service_class)": [[263, "pynetdicom.service_class.QueryRetrieveServiceClass"]], "scp() (pynetdicom.service_class.queryretrieveserviceclass method)": [[263, "pynetdicom.service_class.QueryRetrieveServiceClass.SCP"]], "__init__() (pynetdicom.service_class.queryretrieveserviceclass method)": [[263, "pynetdicom.service_class.QueryRetrieveServiceClass.__init__"]], "relevantpatientinformationqueryserviceclass (class in pynetdicom.service_class)": [[264, "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass"]], "scp() (pynetdicom.service_class.relevantpatientinformationqueryserviceclass method)": [[264, "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass.SCP"]], "__init__() (pynetdicom.service_class.relevantpatientinformationqueryserviceclass method)": [[264, "pynetdicom.service_class.RelevantPatientInformationQueryServiceClass.__init__"]], "scp() (pynetdicom.service_class.storageserviceclass method)": [[265, "pynetdicom.service_class.StorageServiceClass.SCP"]], "storageserviceclass (class in pynetdicom.service_class)": [[265, "pynetdicom.service_class.StorageServiceClass"]], "__init__() (pynetdicom.service_class.storageserviceclass method)": [[265, "pynetdicom.service_class.StorageServiceClass.__init__"]], "scp() (pynetdicom.service_class.substanceadministrationqueryserviceclass method)": [[266, "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass.SCP"]], "substanceadministrationqueryserviceclass (class in pynetdicom.service_class)": [[266, "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass"]], "__init__() (pynetdicom.service_class.substanceadministrationqueryserviceclass method)": [[266, "pynetdicom.service_class.SubstanceAdministrationQueryServiceClass.__init__"]], "scp() (pynetdicom.service_class.verificationserviceclass method)": [[267, "pynetdicom.service_class.VerificationServiceClass.SCP"]], "verificationserviceclass (class in pynetdicom.service_class)": [[267, "pynetdicom.service_class.VerificationServiceClass"]], "__init__() (pynetdicom.service_class.verificationserviceclass method)": [[267, "pynetdicom.service_class.VerificationServiceClass.__init__"]], "applicationeventloggingserviceclass (class in pynetdicom.service_class_n)": [[268, "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass"]], "scp() (pynetdicom.service_class_n.applicationeventloggingserviceclass method)": [[268, "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.applicationeventloggingserviceclass method)": [[268, "pynetdicom.service_class_n.ApplicationEventLoggingServiceClass.__init__"]], "displaysystemmanagementserviceclass (class in pynetdicom.service_class_n)": [[269, "pynetdicom.service_class_n.DisplaySystemManagementServiceClass"]], "scp() (pynetdicom.service_class_n.displaysystemmanagementserviceclass method)": [[269, "pynetdicom.service_class_n.DisplaySystemManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.displaysystemmanagementserviceclass method)": [[269, "pynetdicom.service_class_n.DisplaySystemManagementServiceClass.__init__"]], "instanceavailabilitynotificationserviceclass (class in pynetdicom.service_class_n)": [[270, "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass"]], "scp() (pynetdicom.service_class_n.instanceavailabilitynotificationserviceclass method)": [[270, "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.instanceavailabilitynotificationserviceclass method)": [[270, "pynetdicom.service_class_n.InstanceAvailabilityNotificationServiceClass.__init__"]], "mediacreationmanagementserviceclass (class in pynetdicom.service_class_n)": [[271, "pynetdicom.service_class_n.MediaCreationManagementServiceClass"]], "scp() (pynetdicom.service_class_n.mediacreationmanagementserviceclass method)": [[271, "pynetdicom.service_class_n.MediaCreationManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.mediacreationmanagementserviceclass method)": [[271, "pynetdicom.service_class_n.MediaCreationManagementServiceClass.__init__"]], "printmanagementserviceclass (class in pynetdicom.service_class_n)": [[272, "pynetdicom.service_class_n.PrintManagementServiceClass"]], "scp() (pynetdicom.service_class_n.printmanagementserviceclass method)": [[272, "pynetdicom.service_class_n.PrintManagementServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.printmanagementserviceclass method)": [[272, "pynetdicom.service_class_n.PrintManagementServiceClass.__init__"]], "procedurestepserviceclass (class in pynetdicom.service_class_n)": [[273, "pynetdicom.service_class_n.ProcedureStepServiceClass"]], "scp() (pynetdicom.service_class_n.procedurestepserviceclass method)": [[273, "pynetdicom.service_class_n.ProcedureStepServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.procedurestepserviceclass method)": [[273, "pynetdicom.service_class_n.ProcedureStepServiceClass.__init__"]], "rtmachineverificationserviceclass (class in pynetdicom.service_class_n)": [[274, "pynetdicom.service_class_n.RTMachineVerificationServiceClass"]], "scp() (pynetdicom.service_class_n.rtmachineverificationserviceclass method)": [[274, "pynetdicom.service_class_n.RTMachineVerificationServiceClass.SCP"]], "__init__() (pynetdicom.service_class_n.rtmachineverificationserviceclass method)": [[274, "pynetdicom.service_class_n.RTMachineVerificationServiceClass.__init__"]], "scp() (pynetdicom.service_class_n.storagecommitmentserviceclass method)": [[275, "pynetdicom.service_class_n.StorageCommitmentServiceClass.SCP"]], "storagecommitmentserviceclass (class in pynetdicom.service_class_n)": [[275, "pynetdicom.service_class_n.StorageCommitmentServiceClass"]], "__init__() (pynetdicom.service_class_n.storagecommitmentserviceclass method)": [[275, "pynetdicom.service_class_n.StorageCommitmentServiceClass.__init__"]], "scp() (pynetdicom.service_class_n.unifiedprocedurestepserviceclass method)": [[276, "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass.SCP"]], "unifiedprocedurestepserviceclass (class in pynetdicom.service_class_n)": [[276, "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass"]], "__init__() (pynetdicom.service_class_n.unifiedprocedurestepserviceclass method)": [[276, "pynetdicom.service_class_n.UnifiedProcedureStepServiceClass.__init__"]], "acquisitioncontextsrstorage (in module pynetdicom.sop_class)": [[277, "pynetdicom.sop_class.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pynetdicom.sop_class)": [[278, "pynetdicom.sop_class.AdvancedBlendingPresentationStateStorage"]], "ambulatoryecgwaveformstorage (in module pynetdicom.sop_class)": [[279, "pynetdicom.sop_class.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pynetdicom.sop_class)": [[280, "pynetdicom.sop_class.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pynetdicom.sop_class)": [[281, "pynetdicom.sop_class.AutorefractionMeasurementsStorage"]], "basicannotationbox (in module pynetdicom.sop_class)": [[282, "pynetdicom.sop_class.BasicAnnotationBox"]], "basiccolorimagebox (in module pynetdicom.sop_class)": [[283, "pynetdicom.sop_class.BasicColorImageBox"]], "basiccolorprintmanagementmeta (in module pynetdicom.sop_class)": [[284, "pynetdicom.sop_class.BasicColorPrintManagementMeta"]], "basicfilmbox (in module pynetdicom.sop_class)": [[285, "pynetdicom.sop_class.BasicFilmBox"]], "basicfilmsession (in module pynetdicom.sop_class)": [[286, "pynetdicom.sop_class.BasicFilmSession"]], "basicgrayscaleimagebox (in module pynetdicom.sop_class)": [[287, "pynetdicom.sop_class.BasicGrayscaleImageBox"]], "basicgrayscaleprintmanagementmeta (in module pynetdicom.sop_class)": [[288, "pynetdicom.sop_class.BasicGrayscalePrintManagementMeta"]], "basicstructureddisplaystorage (in module pynetdicom.sop_class)": [[289, "pynetdicom.sop_class.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pynetdicom.sop_class)": [[290, "pynetdicom.sop_class.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pynetdicom.sop_class)": [[291, "pynetdicom.sop_class.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[292, "pynetdicom.sop_class.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pynetdicom.sop_class)": [[293, "pynetdicom.sop_class.BodyPositionWaveformStorage"]], "breastimagingrelevantpatientinformationquery (in module pynetdicom.sop_class)": [[294, "pynetdicom.sop_class.BreastImagingRelevantPatientInformationQuery"]], "breastprojectionxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[295, "pynetdicom.sop_class.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[296, "pynetdicom.sop_class.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pynetdicom.sop_class)": [[297, "pynetdicom.sop_class.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pynetdicom.sop_class)": [[298, "pynetdicom.sop_class.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pynetdicom.sop_class)": [[299, "pynetdicom.sop_class.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[300, "pynetdicom.sop_class.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pynetdicom.sop_class)": [[301, "pynetdicom.sop_class.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[302, "pynetdicom.sop_class.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pynetdicom.sop_class)": [[303, "pynetdicom.sop_class.CardiacElectrophysiologyWaveformStorage"]], "cardiacrelevantpatientinformationquery (in module pynetdicom.sop_class)": [[304, "pynetdicom.sop_class.CardiacRelevantPatientInformationQuery"]], "chestcadsrstorage (in module pynetdicom.sop_class)": [[305, "pynetdicom.sop_class.ChestCADSRStorage"]], "coloncadsrstorage (in module pynetdicom.sop_class)": [[306, "pynetdicom.sop_class.ColonCADSRStorage"]], "colorpaletteinformationmodelfind (in module pynetdicom.sop_class)": [[307, "pynetdicom.sop_class.ColorPaletteInformationModelFind"]], "colorpaletteinformationmodelget (in module pynetdicom.sop_class)": [[308, "pynetdicom.sop_class.ColorPaletteInformationModelGet"]], "colorpaletteinformationmodelmove (in module pynetdicom.sop_class)": [[309, "pynetdicom.sop_class.ColorPaletteInformationModelMove"]], "colorpalettestorage (in module pynetdicom.sop_class)": [[310, "pynetdicom.sop_class.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[311, "pynetdicom.sop_class.ColorSoftcopyPresentationStateStorage"]], "compositeinstanceretrievewithoutbulkdataget (in module pynetdicom.sop_class)": [[312, "pynetdicom.sop_class.CompositeInstanceRetrieveWithoutBulkDataGet"]], "compositeinstancerootretrieveget (in module pynetdicom.sop_class)": [[313, "pynetdicom.sop_class.CompositeInstanceRootRetrieveGet"]], "compositeinstancerootretrievemove (in module pynetdicom.sop_class)": [[314, "pynetdicom.sop_class.CompositeInstanceRootRetrieveMove"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[315, "pynetdicom.sop_class.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pynetdicom.sop_class)": [[316, "pynetdicom.sop_class.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pynetdicom.sop_class)": [[317, "pynetdicom.sop_class.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pynetdicom.sop_class)": [[318, "pynetdicom.sop_class.ComputedRadiographyImageStorage"]], "contentassessmentresultsstorage (in module pynetdicom.sop_class)": [[319, "pynetdicom.sop_class.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pynetdicom.sop_class)": [[320, "pynetdicom.sop_class.CornealTopographyMapStorage"]], "definedprocedureprotocolinformationmodelfind (in module pynetdicom.sop_class)": [[321, "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelFind"]], "definedprocedureprotocolinformationmodelget (in module pynetdicom.sop_class)": [[322, "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelGet"]], "definedprocedureprotocolinformationmodelmove (in module pynetdicom.sop_class)": [[323, "pynetdicom.sop_class.DefinedProcedureProtocolInformationModelMove"]], "deformablespatialregistrationstorage (in module pynetdicom.sop_class)": [[324, "pynetdicom.sop_class.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pynetdicom.sop_class)": [[325, "pynetdicom.sop_class.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[326, "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[327, "pynetdicom.sop_class.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[328, "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[329, "pynetdicom.sop_class.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pynetdicom.sop_class)": [[330, "pynetdicom.sop_class.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pynetdicom.sop_class)": [[331, "pynetdicom.sop_class.DigitalXRayImageStorageForProcessing"]], "displaysystem (in module pynetdicom.sop_class)": [[332, "pynetdicom.sop_class.DisplaySystem"]], "displaysysteminstance (in module pynetdicom.sop_class)": [[333, "pynetdicom.sop_class.DisplaySystemInstance"]], "electromyogramwaveformstorage (in module pynetdicom.sop_class)": [[334, "pynetdicom.sop_class.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pynetdicom.sop_class)": [[335, "pynetdicom.sop_class.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pynetdicom.sop_class)": [[336, "pynetdicom.sop_class.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pynetdicom.sop_class)": [[337, "pynetdicom.sop_class.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pynetdicom.sop_class)": [[338, "pynetdicom.sop_class.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pynetdicom.sop_class)": [[339, "pynetdicom.sop_class.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pynetdicom.sop_class)": [[340, "pynetdicom.sop_class.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pynetdicom.sop_class)": [[341, "pynetdicom.sop_class.EnhancedCTImageStorage"]], "enhancedmrcolorimagestorage (in module pynetdicom.sop_class)": [[342, "pynetdicom.sop_class.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pynetdicom.sop_class)": [[343, "pynetdicom.sop_class.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pynetdicom.sop_class)": [[344, "pynetdicom.sop_class.EnhancedPETImageStorage"]], "enhancedsrstorage (in module pynetdicom.sop_class)": [[345, "pynetdicom.sop_class.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pynetdicom.sop_class)": [[346, "pynetdicom.sop_class.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pynetdicom.sop_class)": [[347, "pynetdicom.sop_class.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pynetdicom.sop_class)": [[348, "pynetdicom.sop_class.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pynetdicom.sop_class)": [[349, "pynetdicom.sop_class.EnhancedXRayRadiationDoseSRStorage"]], "extensiblesrstorage (in module pynetdicom.sop_class)": [[350, "pynetdicom.sop_class.ExtensibleSRStorage"]], "generalaudiowaveformstorage (in module pynetdicom.sop_class)": [[351, "pynetdicom.sop_class.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pynetdicom.sop_class)": [[352, "pynetdicom.sop_class.GeneralECGWaveformStorage"]], "generalrelevantpatientinformationquery (in module pynetdicom.sop_class)": [[353, "pynetdicom.sop_class.GeneralRelevantPatientInformationQuery"]], "genericimplanttemplateinformationmodelfind (in module pynetdicom.sop_class)": [[354, "pynetdicom.sop_class.GenericImplantTemplateInformationModelFind"]], "genericimplanttemplateinformationmodelget (in module pynetdicom.sop_class)": [[355, "pynetdicom.sop_class.GenericImplantTemplateInformationModelGet"]], "genericimplanttemplateinformationmodelmove (in module pynetdicom.sop_class)": [[356, "pynetdicom.sop_class.GenericImplantTemplateInformationModelMove"]], "genericimplanttemplatestorage (in module pynetdicom.sop_class)": [[357, "pynetdicom.sop_class.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[358, "pynetdicom.sop_class.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[359, "pynetdicom.sop_class.GrayscaleSoftcopyPresentationStateStorage"]], "hangingprotocolinformationmodelfind (in module pynetdicom.sop_class)": [[360, "pynetdicom.sop_class.HangingProtocolInformationModelFind"]], "hangingprotocolinformationmodelget (in module pynetdicom.sop_class)": [[361, "pynetdicom.sop_class.HangingProtocolInformationModelGet"]], "hangingprotocolinformationmodelmove (in module pynetdicom.sop_class)": [[362, "pynetdicom.sop_class.HangingProtocolInformationModelMove"]], "hangingprotocolstorage (in module pynetdicom.sop_class)": [[363, "pynetdicom.sop_class.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pynetdicom.sop_class)": [[364, "pynetdicom.sop_class.HemodynamicWaveformStorage"]], "implantassemblytemplateinformationmodelfind (in module pynetdicom.sop_class)": [[365, "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelFind"]], "implantassemblytemplateinformationmodelget (in module pynetdicom.sop_class)": [[366, "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelGet"]], "implantassemblytemplateinformationmodelmove (in module pynetdicom.sop_class)": [[367, "pynetdicom.sop_class.ImplantAssemblyTemplateInformationModelMove"]], "implantassemblytemplatestorage (in module pynetdicom.sop_class)": [[368, "pynetdicom.sop_class.ImplantAssemblyTemplateStorage"]], "implanttemplategroupinformationmodelfind (in module pynetdicom.sop_class)": [[369, "pynetdicom.sop_class.ImplantTemplateGroupInformationModelFind"]], "implanttemplategroupinformationmodelget (in module pynetdicom.sop_class)": [[370, "pynetdicom.sop_class.ImplantTemplateGroupInformationModelGet"]], "implanttemplategroupinformationmodelmove (in module pynetdicom.sop_class)": [[371, "pynetdicom.sop_class.ImplantTemplateGroupInformationModelMove"]], "implanttemplategroupstorage (in module pynetdicom.sop_class)": [[372, "pynetdicom.sop_class.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pynetdicom.sop_class)": [[373, "pynetdicom.sop_class.ImplantationPlanSRStorage"]], "instanceavailabilitynotification (in module pynetdicom.sop_class)": [[374, "pynetdicom.sop_class.InstanceAvailabilityNotification"]], "intraocularlenscalculationsstorage (in module pynetdicom.sop_class)": [[375, "pynetdicom.sop_class.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pynetdicom.sop_class)": [[376, "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pynetdicom.sop_class)": [[377, "pynetdicom.sop_class.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "keratometrymeasurementsstorage (in module pynetdicom.sop_class)": [[378, "pynetdicom.sop_class.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pynetdicom.sop_class)": [[379, "pynetdicom.sop_class.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pynetdicom.sop_class)": [[380, "pynetdicom.sop_class.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pynetdicom.sop_class)": [[381, "pynetdicom.sop_class.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pynetdicom.sop_class)": [[382, "pynetdicom.sop_class.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pynetdicom.sop_class)": [[383, "pynetdicom.sop_class.LensometryMeasurementsStorage"]], "mrimagestorage (in module pynetdicom.sop_class)": [[384, "pynetdicom.sop_class.MRImageStorage"]], "mrspectroscopystorage (in module pynetdicom.sop_class)": [[385, "pynetdicom.sop_class.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pynetdicom.sop_class)": [[386, "pynetdicom.sop_class.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pynetdicom.sop_class)": [[387, "pynetdicom.sop_class.MammographyCADSRStorage"]], "mediacreationmanagement (in module pynetdicom.sop_class)": [[388, "pynetdicom.sop_class.MediaCreationManagement"]], "mediastoragedirectorystorage (in module pynetdicom.sop_class)": [[389, "pynetdicom.sop_class.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pynetdicom.sop_class)": [[390, "pynetdicom.sop_class.MicroscopyBulkSimpleAnnotationsStorage"]], "modalityperformedprocedurestep (in module pynetdicom.sop_class)": [[391, "pynetdicom.sop_class.ModalityPerformedProcedureStep"]], "modalityperformedprocedurestepnotification (in module pynetdicom.sop_class)": [[392, "pynetdicom.sop_class.ModalityPerformedProcedureStepNotification"]], "modalityperformedprocedurestepretrieve (in module pynetdicom.sop_class)": [[393, "pynetdicom.sop_class.ModalityPerformedProcedureStepRetrieve"]], "modalityworklistinformationfind (in module pynetdicom.sop_class)": [[394, "pynetdicom.sop_class.ModalityWorklistInformationFind"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[395, "pynetdicom.sop_class.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[396, "pynetdicom.sop_class.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[397, "pynetdicom.sop_class.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pynetdicom.sop_class)": [[398, "pynetdicom.sop_class.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pynetdicom.sop_class)": [[399, "pynetdicom.sop_class.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[400, "pynetdicom.sop_class.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pynetdicom.sop_class)": [[401, "pynetdicom.sop_class.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pynetdicom.sop_class)": [[402, "pynetdicom.sop_class.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pynetdicom.sop_class)": [[403, "pynetdicom.sop_class.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pynetdicom.sop_class)": [[404, "pynetdicom.sop_class.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pynetdicom.sop_class)": [[405, "pynetdicom.sop_class.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pynetdicom.sop_class)": [[406, "pynetdicom.sop_class.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pynetdicom.sop_class)": [[407, "pynetdicom.sop_class.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pynetdicom.sop_class)": [[408, "pynetdicom.sop_class.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "ophthlamicopticalcoherencetomographybscanvolumeanalysisstorage (in module pynetdicom.sop_class)": [[409, "pynetdicom.sop_class.OphthlamicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "parametricmapstorage (in module pynetdicom.sop_class)": [[410, "pynetdicom.sop_class.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pynetdicom.sop_class)": [[411, "pynetdicom.sop_class.PatientRadiationDoseSRStorage"]], "patientrootqueryretrieveinformationmodelfind (in module pynetdicom.sop_class)": [[412, "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelFind"]], "patientrootqueryretrieveinformationmodelget (in module pynetdicom.sop_class)": [[413, "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelGet"]], "patientrootqueryretrieveinformationmodelmove (in module pynetdicom.sop_class)": [[414, "pynetdicom.sop_class.PatientRootQueryRetrieveInformationModelMove"]], "patientstudyonlyqueryretrieveinformationmodelfind (in module pynetdicom.sop_class)": [[415, "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelFind"]], "patientstudyonlyqueryretrieveinformationmodelget (in module pynetdicom.sop_class)": [[416, "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelGet"]], "patientstudyonlyqueryretrieveinformationmodelmove (in module pynetdicom.sop_class)": [[417, "pynetdicom.sop_class.PatientStudyOnlyQueryRetrieveInformationModelMove"]], "performedimagingagentadministrationsrstorage (in module pynetdicom.sop_class)": [[418, "pynetdicom.sop_class.PerformedImagingAgentAdministrationSRStorage"]], "plannedimagingagentadministrationsrstorage (in module pynetdicom.sop_class)": [[419, "pynetdicom.sop_class.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pynetdicom.sop_class)": [[420, "pynetdicom.sop_class.PositronEmissionTomographyImageStorage"]], "presentationlut (in module pynetdicom.sop_class)": [[421, "pynetdicom.sop_class.PresentationLUT"]], "printjob (in module pynetdicom.sop_class)": [[422, "pynetdicom.sop_class.PrintJob"]], "printer (in module pynetdicom.sop_class)": [[423, "pynetdicom.sop_class.Printer"]], "printerconfigurationretrieval (in module pynetdicom.sop_class)": [[424, "pynetdicom.sop_class.PrinterConfigurationRetrieval"]], "printerconfigurationretrievalinstance (in module pynetdicom.sop_class)": [[425, "pynetdicom.sop_class.PrinterConfigurationRetrievalInstance"]], "printerinstance (in module pynetdicom.sop_class)": [[426, "pynetdicom.sop_class.PrinterInstance"]], "proceduraleventlogging (in module pynetdicom.sop_class)": [[427, "pynetdicom.sop_class.ProceduralEventLogging"]], "proceduraleventlogginginstance (in module pynetdicom.sop_class)": [[428, "pynetdicom.sop_class.ProceduralEventLoggingInstance"]], "procedurelogstorage (in module pynetdicom.sop_class)": [[429, "pynetdicom.sop_class.ProcedureLogStorage"]], "productcharacteristicsquery (in module pynetdicom.sop_class)": [[430, "pynetdicom.sop_class.ProductCharacteristicsQuery"]], "protocolapprovalinformationmodelfind (in module pynetdicom.sop_class)": [[431, "pynetdicom.sop_class.ProtocolApprovalInformationModelFind"]], "protocolapprovalinformationmodelget (in module pynetdicom.sop_class)": [[432, "pynetdicom.sop_class.ProtocolApprovalInformationModelGet"]], "protocolapprovalinformationmodelmove (in module pynetdicom.sop_class)": [[433, "pynetdicom.sop_class.ProtocolApprovalInformationModelMove"]], "protocolapprovalstorage (in module pynetdicom.sop_class)": [[434, "pynetdicom.sop_class.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstagestorage (in module pynetdicom.sop_class)": [[435, "pynetdicom.sop_class.PseudoColorSoftcopyPresentationStageStorage"]], "rtbeamsdeliveryinstructionstorage (in module pynetdicom.sop_class)": [[436, "pynetdicom.sop_class.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pynetdicom.sop_class)": [[437, "pynetdicom.sop_class.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionsstorage (in module pynetdicom.sop_class)": [[438, "pynetdicom.sop_class.RTBrachyApplicationSetupDeliveryInstructionsStorage"]], "rtbrachytreatmentrecordstorage (in module pynetdicom.sop_class)": [[439, "pynetdicom.sop_class.RTBrachyTreatmentRecordStorage"]], "rtconventionalmachineverification (in module pynetdicom.sop_class)": [[440, "pynetdicom.sop_class.RTConventionalMachineVerification"]], "rtdosestorage (in module pynetdicom.sop_class)": [[441, "pynetdicom.sop_class.RTDoseStorage"]], "rtimagestorage (in module pynetdicom.sop_class)": [[442, "pynetdicom.sop_class.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pynetdicom.sop_class)": [[443, "pynetdicom.sop_class.RTIonBeamsTreatmentRecordStorage"]], "rtionmachineverification (in module pynetdicom.sop_class)": [[444, "pynetdicom.sop_class.RTIonMachineVerification"]], "rtionplanstorage (in module pynetdicom.sop_class)": [[445, "pynetdicom.sop_class.RTIonPlanStorage"]], "rtphysicianintentstorage (in module pynetdicom.sop_class)": [[446, "pynetdicom.sop_class.RTPhysicianIntentStorage"]], "rtplanstorage (in module pynetdicom.sop_class)": [[447, "pynetdicom.sop_class.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pynetdicom.sop_class)": [[448, "pynetdicom.sop_class.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pynetdicom.sop_class)": [[449, "pynetdicom.sop_class.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pynetdicom.sop_class)": [[450, "pynetdicom.sop_class.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pynetdicom.sop_class)": [[451, "pynetdicom.sop_class.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pynetdicom.sop_class)": [[452, "pynetdicom.sop_class.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pynetdicom.sop_class)": [[453, "pynetdicom.sop_class.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pynetdicom.sop_class)": [[454, "pynetdicom.sop_class.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pynetdicom.sop_class)": [[455, "pynetdicom.sop_class.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pynetdicom.sop_class)": [[456, "pynetdicom.sop_class.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pynetdicom.sop_class)": [[457, "pynetdicom.sop_class.RawDataStorage"]], "realworldvaluemappingstorage (in module pynetdicom.sop_class)": [[458, "pynetdicom.sop_class.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pynetdicom.sop_class)": [[459, "pynetdicom.sop_class.RespiratoryWaveformStorage"]], "roboticarmradiationrecordstorage (in module pynetdicom.sop_class)": [[460, "pynetdicom.sop_class.RoboticArmRadiationRecordStorage"]], "roboticarmradiationstorage (in module pynetdicom.sop_class)": [[461, "pynetdicom.sop_class.RoboticArmRadiationStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pynetdicom.sop_class)": [[462, "pynetdicom.sop_class.RoutineScalpElectroencephalogramWaveformStorage"]], "sopclass (class in pynetdicom.sop_class)": [[463, "pynetdicom.sop_class.SOPClass"]], "__init__() (pynetdicom.sop_class.sopclass method)": [[463, "pynetdicom.sop_class.SOPClass.__init__"]], "service_class (pynetdicom.sop_class.sopclass property)": [[463, "pynetdicom.sop_class.SOPClass.service_class"]], "secondarycaptureimagestorage (in module pynetdicom.sop_class)": [[464, "pynetdicom.sop_class.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pynetdicom.sop_class)": [[465, "pynetdicom.sop_class.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[466, "pynetdicom.sop_class.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pynetdicom.sop_class)": [[467, "pynetdicom.sop_class.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pynetdicom.sop_class)": [[468, "pynetdicom.sop_class.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pynetdicom.sop_class)": [[469, "pynetdicom.sop_class.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pynetdicom.sop_class)": [[470, "pynetdicom.sop_class.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pynetdicom.sop_class)": [[471, "pynetdicom.sop_class.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pynetdicom.sop_class)": [[472, "pynetdicom.sop_class.StereometricRelationshipStorage"]], "storagecommitmentpushmodel (in module pynetdicom.sop_class)": [[473, "pynetdicom.sop_class.StorageCommitmentPushModel"]], "storagecommitmentpushmodelinstance (in module pynetdicom.sop_class)": [[474, "pynetdicom.sop_class.StorageCommitmentPushModelInstance"]], "studyrootqueryretrieveinformationmodelfind (in module pynetdicom.sop_class)": [[475, "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelFind"]], "studyrootqueryretrieveinformationmodelget (in module pynetdicom.sop_class)": [[476, "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelGet"]], "studyrootqueryretrieveinformationmodelmove (in module pynetdicom.sop_class)": [[477, "pynetdicom.sop_class.StudyRootQueryRetrieveInformationModelMove"]], "subjectiverefractionmeasurementsstorage (in module pynetdicom.sop_class)": [[478, "pynetdicom.sop_class.SubjectiveRefractionMeasurementsStorage"]], "substanceadministrationlogging (in module pynetdicom.sop_class)": [[479, "pynetdicom.sop_class.SubstanceAdministrationLogging"]], "substanceadministrationlogginginstance (in module pynetdicom.sop_class)": [[480, "pynetdicom.sop_class.SubstanceAdministrationLoggingInstance"]], "substanceapprovalquery (in module pynetdicom.sop_class)": [[481, "pynetdicom.sop_class.SubstanceApprovalQuery"]], "surfacescanmeshstorage (in module pynetdicom.sop_class)": [[482, "pynetdicom.sop_class.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pynetdicom.sop_class)": [[483, "pynetdicom.sop_class.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pynetdicom.sop_class)": [[484, "pynetdicom.sop_class.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pynetdicom.sop_class)": [[485, "pynetdicom.sop_class.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pynetdicom.sop_class)": [[486, "pynetdicom.sop_class.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pynetdicom.sop_class)": [[487, "pynetdicom.sop_class.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pynetdicom.sop_class)": [[488, "pynetdicom.sop_class.TwelveLeadECGWaveformStorage"]], "upsfilteredglobalsubscriptioninstance (in module pynetdicom.sop_class)": [[489, "pynetdicom.sop_class.UPSFilteredGlobalSubscriptionInstance"]], "upsglobalsubscriptioninstance (in module pynetdicom.sop_class)": [[490, "pynetdicom.sop_class.UPSGlobalSubscriptionInstance"]], "ultrasoundimagestorage (in module pynetdicom.sop_class)": [[491, "pynetdicom.sop_class.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pynetdicom.sop_class)": [[492, "pynetdicom.sop_class.UltrasoundMultiFrameImageStorage"]], "unifiedprocedurestepevent (in module pynetdicom.sop_class)": [[493, "pynetdicom.sop_class.UnifiedProcedureStepEvent"]], "unifiedproceduresteppull (in module pynetdicom.sop_class)": [[494, "pynetdicom.sop_class.UnifiedProcedureStepPull"]], "unifiedproceduresteppush (in module pynetdicom.sop_class)": [[495, "pynetdicom.sop_class.UnifiedProcedureStepPush"]], "unifiedprocedurestepquery (in module pynetdicom.sop_class)": [[496, "pynetdicom.sop_class.UnifiedProcedureStepQuery"]], "unifiedprocedurestepwatch (in module pynetdicom.sop_class)": [[497, "pynetdicom.sop_class.UnifiedProcedureStepWatch"]], "vlendoscopicimagestorage (in module pynetdicom.sop_class)": [[498, "pynetdicom.sop_class.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pynetdicom.sop_class)": [[499, "pynetdicom.sop_class.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pynetdicom.sop_class)": [[500, "pynetdicom.sop_class.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pynetdicom.sop_class)": [[501, "pynetdicom.sop_class.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pynetdicom.sop_class)": [[502, "pynetdicom.sop_class.VLWholeSlideMicroscopyImageStorage"]], "verification (in module pynetdicom.sop_class)": [[503, "pynetdicom.sop_class.Verification"]], "videoendoscopicimagestorage (in module pynetdicom.sop_class)": [[504, "pynetdicom.sop_class.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pynetdicom.sop_class)": [[505, "pynetdicom.sop_class.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pynetdicom.sop_class)": [[506, "pynetdicom.sop_class.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pynetdicom.sop_class)": [[507, "pynetdicom.sop_class.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pynetdicom.sop_class)": [[508, "pynetdicom.sop_class.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pynetdicom.sop_class)": [[509, "pynetdicom.sop_class.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pynetdicom.sop_class)": [[510, "pynetdicom.sop_class.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[511, "pynetdicom.sop_class.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pynetdicom.sop_class)": [[512, "pynetdicom.sop_class.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pynetdicom.sop_class)": [[513, "pynetdicom.sop_class.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pynetdicom.sop_class)": [[514, "pynetdicom.sop_class.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pynetdicom.sop_class)": [[515, "pynetdicom.sop_class.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pynetdicom.sop_class)": [[516, "pynetdicom.sop_class.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pynetdicom.sop_class)": [[517, "pynetdicom.sop_class.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pynetdicom.sop_class)": [[518, "pynetdicom.sop_class.XRayRadiofluoroscopicImageStorage"]], "register_uid() (in module pynetdicom.sop_class)": [[519, "pynetdicom.sop_class.register_uid"]], "uid_to_service_class() (in module pynetdicom.sop_class)": [[520, "pynetdicom.sop_class.uid_to_service_class"]], "uid_to_sop_class() (in module pynetdicom.sop_class)": [[521, "pynetdicom.sop_class.uid_to_sop_class"]], "cancel (pynetdicom.status.status attribute)": [[522, "pynetdicom.status.Status.CANCEL"]], "move_destination_unknown (pynetdicom.status.status attribute)": [[522, "pynetdicom.status.Status.MOVE_DESTINATION_UNKNOWN"]], "pending (pynetdicom.status.status attribute)": [[522, "pynetdicom.status.Status.PENDING"]], "success (pynetdicom.status.status attribute)": [[522, "pynetdicom.status.Status.SUCCESS"]], "status (class in pynetdicom.status)": [[522, "pynetdicom.status.Status"]], "__init__() (pynetdicom.status.status method)": [[522, "pynetdicom.status.Status.__init__"]], "add() (pynetdicom.status.status class method)": [[522, "pynetdicom.status.Status.add"]], "code_to_category() (in module pynetdicom.status)": [[523, "pynetdicom.status.code_to_category"]], "code_to_status() (in module pynetdicom.status)": [[524, "pynetdicom.status.code_to_status"]], "timer (class in pynetdicom.timer)": [[525, "pynetdicom.timer.Timer"]], "__init__() (pynetdicom.timer.timer method)": [[525, "pynetdicom.timer.Timer.__init__"]], "expired (pynetdicom.timer.timer property)": [[525, "pynetdicom.timer.Timer.expired"]], "remaining (pynetdicom.timer.timer property)": [[525, "pynetdicom.timer.Timer.remaining"]], "restart() (pynetdicom.timer.timer method)": [[525, "pynetdicom.timer.Timer.restart"]], "start() (pynetdicom.timer.timer method)": [[525, "pynetdicom.timer.Timer.start"]], "stop() (pynetdicom.timer.timer method)": [[525, "pynetdicom.timer.Timer.stop"]], "timeout (pynetdicom.timer.timer property)": [[525, "pynetdicom.timer.Timer.timeout"]], "associationserver (class in pynetdicom.transport)": [[526, "pynetdicom.transport.AssociationServer"]], "__init__() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.__init__"]], "active_associations (pynetdicom.transport.associationserver property)": [[526, "pynetdicom.transport.AssociationServer.active_associations"]], "ae (pynetdicom.transport.associationserver attribute)": [[526, "pynetdicom.transport.AssociationServer.ae"]], "bind() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.bind"]], "get_events() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.get_events"]], "get_handlers() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.get_handlers"]], "get_request() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.get_request"]], "process_request() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.process_request"]], "request_queue_size (pynetdicom.transport.associationserver attribute)": [[526, "pynetdicom.transport.AssociationServer.request_queue_size"]], "server_address (pynetdicom.transport.associationserver attribute)": [[526, "pynetdicom.transport.AssociationServer.server_address"]], "server_bind() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.server_bind"]], "server_close() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.server_close"]], "service_actions() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.service_actions"]], "shutdown() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.shutdown"]], "ssl_context (pynetdicom.transport.associationserver property)": [[526, "pynetdicom.transport.AssociationServer.ssl_context"]], "unbind() (pynetdicom.transport.associationserver method)": [[526, "pynetdicom.transport.AssociationServer.unbind"]], "associationsocket (class in pynetdicom.transport)": [[527, "pynetdicom.transport.AssociationSocket"]], "__init__() (pynetdicom.transport.associationsocket method)": [[527, "pynetdicom.transport.AssociationSocket.__init__"]], "assoc (pynetdicom.transport.associationsocket property)": [[527, "pynetdicom.transport.AssociationSocket.assoc"]], "close() (pynetdicom.transport.associationsocket method)": [[527, "pynetdicom.transport.AssociationSocket.close"]], "connect() (pynetdicom.transport.associationsocket method)": [[527, "pynetdicom.transport.AssociationSocket.connect"]], "event_queue (pynetdicom.transport.associationsocket property)": [[527, "pynetdicom.transport.AssociationSocket.event_queue"]], "get_local_addr() (pynetdicom.transport.associationsocket method)": [[527, "pynetdicom.transport.AssociationSocket.get_local_addr"]], "provider_queue (pynetdicom.transport.associationsocket property)": [[527, "pynetdicom.transport.AssociationSocket.provider_queue"]], "ready (pynetdicom.transport.associationsocket property)": [[527, "pynetdicom.transport.AssociationSocket.ready"]], "recv() (pynetdicom.transport.associationsocket method)": [[527, "pynetdicom.transport.AssociationSocket.recv"]], "select_timeout (pynetdicom.transport.associationsocket attribute)": [[527, "pynetdicom.transport.AssociationSocket.select_timeout"]], "send() (pynetdicom.transport.associationsocket method)": [[527, "pynetdicom.transport.AssociationSocket.send"]], "socket (pynetdicom.transport.associationsocket attribute)": [[527, "pynetdicom.transport.AssociationSocket.socket"]], "tls_args (pynetdicom.transport.associationsocket property)": [[527, "pynetdicom.transport.AssociationSocket.tls_args"]], "requesthandler (class in pynetdicom.transport)": [[528, "pynetdicom.transport.RequestHandler"]], "__init__() (pynetdicom.transport.requesthandler method)": [[528, "pynetdicom.transport.RequestHandler.__init__"]], "ae (pynetdicom.transport.requesthandler property)": [[528, "pynetdicom.transport.RequestHandler.ae"]], "client_address (pynetdicom.transport.requesthandler attribute)": [[528, "pynetdicom.transport.RequestHandler.client_address"]], "handle() (pynetdicom.transport.requesthandler method)": [[528, "pynetdicom.transport.RequestHandler.handle"]], "local (pynetdicom.transport.requesthandler property)": [[528, "pynetdicom.transport.RequestHandler.local"]], "remote (pynetdicom.transport.requesthandler property)": [[528, "pynetdicom.transport.RequestHandler.remote"]], "request (pynetdicom.transport.requesthandler attribute)": [[528, "pynetdicom.transport.RequestHandler.request"]], "server (pynetdicom.transport.requesthandler attribute)": [[528, "pynetdicom.transport.RequestHandler.server"]], "t_connect (class in pynetdicom.transport)": [[529, "pynetdicom.transport.T_CONNECT"]], "__init__() (pynetdicom.transport.t_connect method)": [[529, "pynetdicom.transport.T_CONNECT.__init__"]], "address (pynetdicom.transport.t_connect property)": [[529, "pynetdicom.transport.T_CONNECT.address"]], "request (pynetdicom.transport.t_connect attribute)": [[529, "pynetdicom.transport.T_CONNECT.request"]], "result (pynetdicom.transport.t_connect property)": [[529, "pynetdicom.transport.T_CONNECT.result"]], "threadedassociationserver (class in pynetdicom.transport)": [[530, "pynetdicom.transport.ThreadedAssociationServer"]], "__init__() (pynetdicom.transport.threadedassociationserver method)": [[530, "pynetdicom.transport.ThreadedAssociationServer.__init__"]], "process_request_thread() (pynetdicom.transport.threadedassociationserver method)": [[530, "pynetdicom.transport.ThreadedAssociationServer.process_request_thread"]], "decode_bytes() (in module pynetdicom.utils)": [[531, "pynetdicom.utils.decode_bytes"]], "make_target() (in module pynetdicom.utils)": [[532, "pynetdicom.utils.make_target"]], "pretty_bytes() (in module pynetdicom.utils)": [[533, "pynetdicom.utils.pretty_bytes"]], "set_ae() (in module pynetdicom.utils)": [[534, "pynetdicom.utils.set_ae"]], "set_uid() (in module pynetdicom.utils)": [[535, "pynetdicom.utils.set_uid"]], "validate_uid() (in module pynetdicom.utils)": [[536, "pynetdicom.utils.validate_uid"]], "pynetdicom": [[537, "module-pynetdicom"]], "pynetdicom.presentation": [[539, "module-pynetdicom.presentation"]], "pynetdicom.service_class": [[540, "module-pynetdicom.service_class"]], "pynetdicom.sop_class": [[541, "module-pynetdicom.sop_class"]], "pynetdicom.status": [[542, "module-pynetdicom.status"]], "pynetdicom.timer": [[543, "module-pynetdicom.timer"]], "pynetdicom.transport": [[544, "module-pynetdicom.transport"]], "pynetdicom.utils": [[545, "module-pynetdicom.utils"]]}})